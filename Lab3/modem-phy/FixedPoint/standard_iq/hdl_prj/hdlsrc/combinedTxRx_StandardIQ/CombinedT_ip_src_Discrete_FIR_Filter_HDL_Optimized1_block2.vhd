-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\combinedTxRx_StandardIQ\CombinedT_ip_src_Discrete_FIR_Filter_HDL_Optimized1_block2.vhd
-- Created: 2018-02-01 11:49:52
-- 
-- Generated by MATLAB 9.3 and HDL Coder 3.11
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: CombinedT_ip_src_Discrete_FIR_Filter_HDL_Optimized1_block2
-- Source Path: combinedTxRx_StandardIQ/Combined TX and RX/Receiver HDL/Frame Recover/Barker Locate/Measure Phase 
-- Ambiguity/HDL Opt Complex FIR6/Discrete FIR Filter HDL Optimized
-- Hierarchy Level: 6
-- 
-- Discrete FIR Filter HDL Optimized
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.CombinedT_ip_src_Combined_TX_and_RX_pkg.ALL;

ENTITY CombinedT_ip_src_Discrete_FIR_Filter_HDL_Optimized1_block2 IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        dataIn                            :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
        validIn                           :   IN    std_logic;
        dataOut                           :   OUT   std_logic_vector(15 DOWNTO 0);  -- int16
        validOut                          :   OUT   std_logic
        );
END CombinedT_ip_src_Discrete_FIR_Filter_HDL_Optimized1_block2;


ARCHITECTURE rtl OF CombinedT_ip_src_Discrete_FIR_Filter_HDL_Optimized1_block2 IS

  -- Signals
  SIGNAL validPipe0_1                     : std_logic;
  SIGNAL validPipe1_1                     : std_logic;
  SIGNAL validPipe2_1                     : std_logic;
  SIGNAL validPipe3_1                     : std_logic;
  SIGNAL validPipe4_1                     : std_logic;
  SIGNAL validPipe5_1                     : std_logic;
  SIGNAL validPipe6_1                     : std_logic;
  SIGNAL validPipe7_1                     : std_logic;
  SIGNAL validPipe8_1                     : std_logic;
  SIGNAL validPipe9_1                     : std_logic;
  SIGNAL validPipe10_1                    : std_logic;
  SIGNAL validPipe11_1                    : std_logic;
  SIGNAL validPipe12_1                    : std_logic;
  SIGNAL validPipe13_1                    : std_logic;
  SIGNAL validPipe14_1                    : std_logic;
  SIGNAL validPipe15_1                    : std_logic;
  SIGNAL validPipe16_1                    : std_logic;
  SIGNAL validPipe17_1                    : std_logic;
  SIGNAL validPipe18_1                    : std_logic;
  SIGNAL validPipe19_1                    : std_logic;
  SIGNAL validPipe20_1                    : std_logic;
  SIGNAL validPipe21_1                    : std_logic;
  SIGNAL validPipe22_1                    : std_logic;
  SIGNAL validPipe23_1                    : std_logic;
  SIGNAL validPipe24_1                    : std_logic;
  SIGNAL validPipe25_1                    : std_logic;
  SIGNAL validPipe26_1                    : std_logic;
  SIGNAL finalSumValidPipe_reg            : std_logic_vector(0 TO 3);  -- ufix1 [4]
  SIGNAL finalSumValid                    : std_logic;
  SIGNAL dataIn_signed                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataPipe0_1                      : signed(15 DOWNTO 0);  -- int16
  SIGNAL multInPipe0_1                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL coeff0                           : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL product0                         : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL productPipe0                     : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL sum0                             : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum0_1                           : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL dataDelay0_1                     : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataPipe1_1                      : signed(15 DOWNTO 0);  -- int16
  SIGNAL multInPipe1_1                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL coeff1                           : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL mulOutput                        : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_1                      : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL alpha_add_add_cast               : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_1             : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum1                             : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum1_1                           : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum1_2                           : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL dataDelay1_1                     : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataPipe2_1                      : signed(15 DOWNTO 0);  -- int16
  SIGNAL multInPipe2_1                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL coeff2                           : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL mulOutput_2                      : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_3                      : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL alpha_add_add_cast_2             : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_3             : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum2                             : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum2_1                           : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum2_2                           : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL dataDelay2_1                     : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataPipe3_1                      : signed(15 DOWNTO 0);  -- int16
  SIGNAL multInPipe3_1                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL coeff3                           : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL mulOutput_4                      : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_5                      : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL alpha_add_add_cast_4             : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_5             : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum3                             : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum3_1                           : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum3_2                           : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL dataDelay3_1                     : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataPipe4_1                      : signed(15 DOWNTO 0);  -- int16
  SIGNAL multInPipe4_1                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL coeff4                           : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL mulOutput_6                      : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_7                      : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL alpha_add_add_cast_6             : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_7             : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum4                             : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum4_1                           : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum4_2                           : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL dataDelay4_1                     : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataPipe5_1                      : signed(15 DOWNTO 0);  -- int16
  SIGNAL multInPipe5_1                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL coeff5                           : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL mulOutput_8                      : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_9                      : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL alpha_add_add_cast_8             : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_9             : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum5                             : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum5_1                           : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum5_2                           : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL dataDelay5_1                     : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataPipe6_1                      : signed(15 DOWNTO 0);  -- int16
  SIGNAL multInPipe6_1                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL coeff6                           : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL mulOutput_10                     : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_11                     : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL alpha_add_add_cast_10            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_11            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum6                             : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum6_1                           : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum6_2                           : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL dataDelay6_1                     : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataPipe7_1                      : signed(15 DOWNTO 0);  -- int16
  SIGNAL multInPipe7_1                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL coeff7                           : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL mulOutput_12                     : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_13                     : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL alpha_add_add_cast_12            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_13            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum7                             : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum7_1                           : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum7_2                           : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL dataDelay7_1                     : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataPipe8_1                      : signed(15 DOWNTO 0);  -- int16
  SIGNAL multInPipe8_1                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL coeff8                           : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL mulOutput_14                     : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_15                     : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL alpha_add_add_cast_14            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_15            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum8                             : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum8_1                           : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum8_2                           : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL dataDelay8_1                     : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataPipe9_1                      : signed(15 DOWNTO 0);  -- int16
  SIGNAL multInPipe9_1                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL coeff9                           : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL mulOutput_16                     : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_17                     : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL alpha_add_add_cast_16            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_17            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum9                             : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum9_1                           : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum9_2                           : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL dataDelay9_1                     : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataPipe10_1                     : signed(15 DOWNTO 0);  -- int16
  SIGNAL multInPipe10_1                   : signed(15 DOWNTO 0);  -- int16
  SIGNAL coeff10                          : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL mulOutput_18                     : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_19                     : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL alpha_add_add_cast_18            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_19            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum10                            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum10_1                          : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum10_2                          : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL dataDelay10_1                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataPipe11_1                     : signed(15 DOWNTO 0);  -- int16
  SIGNAL multInPipe11_1                   : signed(15 DOWNTO 0);  -- int16
  SIGNAL coeff11                          : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL mulOutput_20                     : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_21                     : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL alpha_add_add_cast_20            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_21            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum11                            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum11_1                          : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum11_2                          : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL dataDelay11_1                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataPipe12_1                     : signed(15 DOWNTO 0);  -- int16
  SIGNAL multInPipe12_1                   : signed(15 DOWNTO 0);  -- int16
  SIGNAL coeff12                          : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL mulOutput_22                     : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_23                     : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL alpha_add_add_cast_22            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_23            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum12                            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum12_1                          : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum12_2                          : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL dataDelay12_1                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataPipe13_1                     : signed(15 DOWNTO 0);  -- int16
  SIGNAL multInPipe13_1                   : signed(15 DOWNTO 0);  -- int16
  SIGNAL coeff13                          : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL mulOutput_24                     : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_25                     : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL alpha_add_add_cast_24            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_25            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum13                            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum13_1                          : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum13_2                          : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL dataDelay13_1                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataPipe14_1                     : signed(15 DOWNTO 0);  -- int16
  SIGNAL multInPipe14_1                   : signed(15 DOWNTO 0);  -- int16
  SIGNAL coeff14                          : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL mulOutput_26                     : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_27                     : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL alpha_add_add_cast_26            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_27            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum14                            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum14_1                          : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum14_2                          : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL dataDelay14_1                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataPipe15_1                     : signed(15 DOWNTO 0);  -- int16
  SIGNAL multInPipe15_1                   : signed(15 DOWNTO 0);  -- int16
  SIGNAL coeff15                          : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL mulOutput_28                     : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_29                     : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL alpha_add_add_cast_28            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_29            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum15                            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum15_1                          : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum15_2                          : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL dataDelay15_1                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataPipe16_1                     : signed(15 DOWNTO 0);  -- int16
  SIGNAL multInPipe16_1                   : signed(15 DOWNTO 0);  -- int16
  SIGNAL coeff16                          : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL mulOutput_30                     : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_31                     : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL alpha_add_add_cast_30            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_31            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum16                            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum16_1                          : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum16_2                          : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL dataDelay16_1                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataPipe17_1                     : signed(15 DOWNTO 0);  -- int16
  SIGNAL multInPipe17_1                   : signed(15 DOWNTO 0);  -- int16
  SIGNAL coeff17                          : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL mulOutput_32                     : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_33                     : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL alpha_add_add_cast_32            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_33            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum17                            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum17_1                          : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum17_2                          : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL dataDelay17_1                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataPipe18_1                     : signed(15 DOWNTO 0);  -- int16
  SIGNAL multInPipe18_1                   : signed(15 DOWNTO 0);  -- int16
  SIGNAL coeff18                          : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL mulOutput_34                     : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_35                     : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL alpha_add_add_cast_34            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_35            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum18                            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum18_1                          : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum18_2                          : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL dataDelay18_1                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataPipe19_1                     : signed(15 DOWNTO 0);  -- int16
  SIGNAL multInPipe19_1                   : signed(15 DOWNTO 0);  -- int16
  SIGNAL coeff19                          : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL mulOutput_36                     : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_37                     : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL alpha_add_add_cast_36            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_37            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum19                            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum19_1                          : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum19_2                          : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL dataDelay19_1                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataPipe20_1                     : signed(15 DOWNTO 0);  -- int16
  SIGNAL multInPipe20_1                   : signed(15 DOWNTO 0);  -- int16
  SIGNAL coeff20                          : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL mulOutput_38                     : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_39                     : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL alpha_add_add_cast_38            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_39            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum20                            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum20_1                          : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum20_2                          : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL dataDelay20_1                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataPipe21_1                     : signed(15 DOWNTO 0);  -- int16
  SIGNAL multInPipe21_1                   : signed(15 DOWNTO 0);  -- int16
  SIGNAL coeff21                          : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL mulOutput_40                     : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_41                     : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL alpha_add_add_cast_40            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_41            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum21                            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum21_1                          : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum21_2                          : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL dataDelay21_1                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataPipe22_1                     : signed(15 DOWNTO 0);  -- int16
  SIGNAL multInPipe22_1                   : signed(15 DOWNTO 0);  -- int16
  SIGNAL coeff22                          : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL mulOutput_42                     : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_43                     : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL alpha_add_add_cast_42            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_43            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum22                            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum22_1                          : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum22_2                          : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL dataDelay22_1                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataPipe23_1                     : signed(15 DOWNTO 0);  -- int16
  SIGNAL multInPipe23_1                   : signed(15 DOWNTO 0);  -- int16
  SIGNAL coeff23                          : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL mulOutput_44                     : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_45                     : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL alpha_add_add_cast_44            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_45            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum23                            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum23_1                          : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum23_2                          : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL dataDelay23_1                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataPipe24_1                     : signed(15 DOWNTO 0);  -- int16
  SIGNAL multInPipe24_1                   : signed(15 DOWNTO 0);  -- int16
  SIGNAL coeff24                          : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL mulOutput_46                     : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_47                     : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL alpha_add_add_cast_46            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_47            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum24                            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum24_1                          : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum24_2                          : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL dataDelay24_1                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataPipe25_1                     : signed(15 DOWNTO 0);  -- int16
  SIGNAL multInPipe25_1                   : signed(15 DOWNTO 0);  -- int16
  SIGNAL coeff25                          : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL mulOutput_48                     : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_49                     : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL alpha_add_add_cast_48            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_49            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum25                            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum25_1                          : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum25_2                          : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL dataDelay25_1                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataPipe26_1                     : signed(15 DOWNTO 0);  -- int16
  SIGNAL multInPipe26_1                   : signed(15 DOWNTO 0);  -- int16
  SIGNAL coeff26                          : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL mulOutput_50                     : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_51                     : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL alpha_add_add_cast_50            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_51            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum26                            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum26_1                          : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum26_2                          : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL dataDelay26_1                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL multInPipe27_reg                 : vector_of_signed16(0 TO 1);  -- sfix16 [2]
  SIGNAL multInPipe27_1                   : signed(15 DOWNTO 0);  -- int16
  SIGNAL coeff27                          : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL mulOutput_52                     : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_53                     : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL alpha_add_add_cast_52            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_53            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum27                            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum27_1                          : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL finalSumPipe_1                   : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL converterOut                     : signed(15 DOWNTO 0);  -- sfix16
  SIGNAL dataOut_tmp                      : signed(15 DOWNTO 0);  -- int16

  ATTRIBUTE use_dsp48 : string;

  ATTRIBUTE use_dsp48 OF mulOutput : SIGNAL IS "yes";
  ATTRIBUTE use_dsp48 OF mulOutput_2 : SIGNAL IS "yes";
  ATTRIBUTE use_dsp48 OF mulOutput_4 : SIGNAL IS "yes";
  ATTRIBUTE use_dsp48 OF mulOutput_6 : SIGNAL IS "yes";
  ATTRIBUTE use_dsp48 OF mulOutput_8 : SIGNAL IS "yes";
  ATTRIBUTE use_dsp48 OF mulOutput_10 : SIGNAL IS "yes";
  ATTRIBUTE use_dsp48 OF mulOutput_12 : SIGNAL IS "yes";
  ATTRIBUTE use_dsp48 OF mulOutput_14 : SIGNAL IS "yes";
  ATTRIBUTE use_dsp48 OF mulOutput_16 : SIGNAL IS "yes";
  ATTRIBUTE use_dsp48 OF mulOutput_18 : SIGNAL IS "yes";
  ATTRIBUTE use_dsp48 OF mulOutput_20 : SIGNAL IS "yes";
  ATTRIBUTE use_dsp48 OF mulOutput_22 : SIGNAL IS "yes";
  ATTRIBUTE use_dsp48 OF mulOutput_24 : SIGNAL IS "yes";
  ATTRIBUTE use_dsp48 OF mulOutput_26 : SIGNAL IS "yes";
  ATTRIBUTE use_dsp48 OF mulOutput_28 : SIGNAL IS "yes";
  ATTRIBUTE use_dsp48 OF mulOutput_30 : SIGNAL IS "yes";
  ATTRIBUTE use_dsp48 OF mulOutput_32 : SIGNAL IS "yes";
  ATTRIBUTE use_dsp48 OF mulOutput_34 : SIGNAL IS "yes";
  ATTRIBUTE use_dsp48 OF mulOutput_36 : SIGNAL IS "yes";
  ATTRIBUTE use_dsp48 OF mulOutput_38 : SIGNAL IS "yes";
  ATTRIBUTE use_dsp48 OF mulOutput_40 : SIGNAL IS "yes";
  ATTRIBUTE use_dsp48 OF mulOutput_42 : SIGNAL IS "yes";
  ATTRIBUTE use_dsp48 OF mulOutput_44 : SIGNAL IS "yes";
  ATTRIBUTE use_dsp48 OF mulOutput_46 : SIGNAL IS "yes";
  ATTRIBUTE use_dsp48 OF mulOutput_48 : SIGNAL IS "yes";
  ATTRIBUTE use_dsp48 OF mulOutput_50 : SIGNAL IS "yes";
  ATTRIBUTE use_dsp48 OF mulOutput_52 : SIGNAL IS "yes";

BEGIN
  validPipe0_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      validPipe0_1 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        validPipe0_1 <= validIn;
      END IF;
    END IF;
  END PROCESS validPipe0_process;


  validPipe1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      validPipe1_1 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        validPipe1_1 <= validPipe0_1;
      END IF;
    END IF;
  END PROCESS validPipe1_process;


  validPipe2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      validPipe2_1 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        validPipe2_1 <= validPipe1_1;
      END IF;
    END IF;
  END PROCESS validPipe2_process;


  validPipe3_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      validPipe3_1 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        validPipe3_1 <= validPipe2_1;
      END IF;
    END IF;
  END PROCESS validPipe3_process;


  validPipe4_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      validPipe4_1 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        validPipe4_1 <= validPipe3_1;
      END IF;
    END IF;
  END PROCESS validPipe4_process;


  validPipe5_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      validPipe5_1 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        validPipe5_1 <= validPipe4_1;
      END IF;
    END IF;
  END PROCESS validPipe5_process;


  validPipe6_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      validPipe6_1 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        validPipe6_1 <= validPipe5_1;
      END IF;
    END IF;
  END PROCESS validPipe6_process;


  validPipe7_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      validPipe7_1 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        validPipe7_1 <= validPipe6_1;
      END IF;
    END IF;
  END PROCESS validPipe7_process;


  validPipe8_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      validPipe8_1 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        validPipe8_1 <= validPipe7_1;
      END IF;
    END IF;
  END PROCESS validPipe8_process;


  validPipe9_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      validPipe9_1 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        validPipe9_1 <= validPipe8_1;
      END IF;
    END IF;
  END PROCESS validPipe9_process;


  validPipe10_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      validPipe10_1 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        validPipe10_1 <= validPipe9_1;
      END IF;
    END IF;
  END PROCESS validPipe10_process;


  validPipe11_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      validPipe11_1 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        validPipe11_1 <= validPipe10_1;
      END IF;
    END IF;
  END PROCESS validPipe11_process;


  validPipe12_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      validPipe12_1 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        validPipe12_1 <= validPipe11_1;
      END IF;
    END IF;
  END PROCESS validPipe12_process;


  validPipe13_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      validPipe13_1 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        validPipe13_1 <= validPipe12_1;
      END IF;
    END IF;
  END PROCESS validPipe13_process;


  validPipe14_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      validPipe14_1 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        validPipe14_1 <= validPipe13_1;
      END IF;
    END IF;
  END PROCESS validPipe14_process;


  validPipe15_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      validPipe15_1 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        validPipe15_1 <= validPipe14_1;
      END IF;
    END IF;
  END PROCESS validPipe15_process;


  validPipe16_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      validPipe16_1 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        validPipe16_1 <= validPipe15_1;
      END IF;
    END IF;
  END PROCESS validPipe16_process;


  validPipe17_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      validPipe17_1 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        validPipe17_1 <= validPipe16_1;
      END IF;
    END IF;
  END PROCESS validPipe17_process;


  validPipe18_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      validPipe18_1 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        validPipe18_1 <= validPipe17_1;
      END IF;
    END IF;
  END PROCESS validPipe18_process;


  validPipe19_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      validPipe19_1 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        validPipe19_1 <= validPipe18_1;
      END IF;
    END IF;
  END PROCESS validPipe19_process;


  validPipe20_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      validPipe20_1 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        validPipe20_1 <= validPipe19_1;
      END IF;
    END IF;
  END PROCESS validPipe20_process;


  validPipe21_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      validPipe21_1 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        validPipe21_1 <= validPipe20_1;
      END IF;
    END IF;
  END PROCESS validPipe21_process;


  validPipe22_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      validPipe22_1 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        validPipe22_1 <= validPipe21_1;
      END IF;
    END IF;
  END PROCESS validPipe22_process;


  validPipe23_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      validPipe23_1 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        validPipe23_1 <= validPipe22_1;
      END IF;
    END IF;
  END PROCESS validPipe23_process;


  validPipe24_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      validPipe24_1 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        validPipe24_1 <= validPipe23_1;
      END IF;
    END IF;
  END PROCESS validPipe24_process;


  validPipe25_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      validPipe25_1 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        validPipe25_1 <= validPipe24_1;
      END IF;
    END IF;
  END PROCESS validPipe25_process;


  validPipe26_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      validPipe26_1 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        validPipe26_1 <= validPipe25_1;
      END IF;
    END IF;
  END PROCESS validPipe26_process;


  finalSumValidPipe_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      finalSumValidPipe_reg <= (OTHERS => '0');
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        finalSumValidPipe_reg(0) <= validPipe26_1;
        finalSumValidPipe_reg(1 TO 3) <= finalSumValidPipe_reg(0 TO 2);
      END IF;
    END IF;
  END PROCESS finalSumValidPipe_process;

  finalSumValid <= finalSumValidPipe_reg(3);

  dataIn_signed <= signed(dataIn);

  dataPipe0_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataPipe0_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        dataPipe0_1 <= dataIn_signed;
      END IF;
    END IF;
  END PROCESS dataPipe0_process;


  multInPipe0_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      multInPipe0_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        multInPipe0_1 <= dataPipe0_1;
      END IF;
    END IF;
  END PROCESS multInPipe0_process;


  coeff0 <= to_signed(16#5A82#, 16);

  product0 <= multInPipe0_1 * coeff0;

  multOutPipe0_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      productPipe0 <= to_signed(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        productPipe0 <= product0;
      END IF;
    END IF;
  END PROCESS multOutPipe0_process;


  sum0 <= resize(productPipe0, 36);

  HwModeRegister_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      sum0_1 <= to_signed(0, 36);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        sum0_1 <= sum0;
      END IF;
    END IF;
  END PROCESS HwModeRegister_process;


  dataDelay0_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataDelay0_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND validPipe0_1 = '1' THEN
        dataDelay0_1 <= dataPipe0_1;
      END IF;
    END IF;
  END PROCESS dataDelay0_process;


  dataPipe1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataPipe1_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        dataPipe1_1 <= dataDelay0_1;
      END IF;
    END IF;
  END PROCESS dataPipe1_process;


  multInPipe1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      multInPipe1_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        multInPipe1_1 <= dataPipe1_1;
      END IF;
    END IF;
  END PROCESS multInPipe1_process;


  coeff1 <= to_signed(16#5A82#, 16);

  mulOutput <= multInPipe1_1 * coeff1;

  HwModeRegister_1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      mulOutput_1 <= to_signed(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        mulOutput_1 <= mulOutput;
      END IF;
    END IF;
  END PROCESS HwModeRegister_1_process;


  alpha_add_add_cast <= resize(sum0_1, 37);
  alpha_add_add_cast_1 <= resize(mulOutput_1, 37);
  sum1 <= alpha_add_add_cast + alpha_add_add_cast_1;

  sum1_1 <= sum1(35 DOWNTO 0);

  HwModeRegister_2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      sum1_2 <= to_signed(0, 36);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        sum1_2 <= sum1_1;
      END IF;
    END IF;
  END PROCESS HwModeRegister_2_process;


  dataDelay1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataDelay1_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND validPipe1_1 = '1' THEN
        dataDelay1_1 <= dataPipe1_1;
      END IF;
    END IF;
  END PROCESS dataDelay1_process;


  dataPipe2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataPipe2_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        dataPipe2_1 <= dataDelay1_1;
      END IF;
    END IF;
  END PROCESS dataPipe2_process;


  multInPipe2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      multInPipe2_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        multInPipe2_1 <= dataPipe2_1;
      END IF;
    END IF;
  END PROCESS multInPipe2_process;


  coeff2 <= to_signed(16#5A82#, 16);

  mulOutput_2 <= multInPipe2_1 * coeff2;

  HwModeRegister_3_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      mulOutput_3 <= to_signed(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        mulOutput_3 <= mulOutput_2;
      END IF;
    END IF;
  END PROCESS HwModeRegister_3_process;


  alpha_add_add_cast_2 <= resize(sum1_2, 37);
  alpha_add_add_cast_3 <= resize(mulOutput_3, 37);
  sum2 <= alpha_add_add_cast_2 + alpha_add_add_cast_3;

  sum2_1 <= sum2(35 DOWNTO 0);

  HwModeRegister_4_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      sum2_2 <= to_signed(0, 36);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        sum2_2 <= sum2_1;
      END IF;
    END IF;
  END PROCESS HwModeRegister_4_process;


  dataDelay2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataDelay2_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND validPipe2_1 = '1' THEN
        dataDelay2_1 <= dataPipe2_1;
      END IF;
    END IF;
  END PROCESS dataDelay2_process;


  dataPipe3_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataPipe3_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        dataPipe3_1 <= dataDelay2_1;
      END IF;
    END IF;
  END PROCESS dataPipe3_process;


  multInPipe3_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      multInPipe3_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        multInPipe3_1 <= dataPipe3_1;
      END IF;
    END IF;
  END PROCESS multInPipe3_process;


  coeff3 <= to_signed(-16#5A82#, 16);

  mulOutput_4 <= multInPipe3_1 * coeff3;

  HwModeRegister_5_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      mulOutput_5 <= to_signed(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        mulOutput_5 <= mulOutput_4;
      END IF;
    END IF;
  END PROCESS HwModeRegister_5_process;


  alpha_add_add_cast_4 <= resize(sum2_2, 37);
  alpha_add_add_cast_5 <= resize(mulOutput_5, 37);
  sum3 <= alpha_add_add_cast_4 + alpha_add_add_cast_5;

  sum3_1 <= sum3(35 DOWNTO 0);

  HwModeRegister_6_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      sum3_2 <= to_signed(0, 36);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        sum3_2 <= sum3_1;
      END IF;
    END IF;
  END PROCESS HwModeRegister_6_process;


  dataDelay3_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataDelay3_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND validPipe3_1 = '1' THEN
        dataDelay3_1 <= dataPipe3_1;
      END IF;
    END IF;
  END PROCESS dataDelay3_process;


  dataPipe4_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataPipe4_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        dataPipe4_1 <= dataDelay3_1;
      END IF;
    END IF;
  END PROCESS dataPipe4_process;


  multInPipe4_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      multInPipe4_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        multInPipe4_1 <= dataPipe4_1;
      END IF;
    END IF;
  END PROCESS multInPipe4_process;


  coeff4 <= to_signed(-16#5A82#, 16);

  mulOutput_6 <= multInPipe4_1 * coeff4;

  HwModeRegister_7_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      mulOutput_7 <= to_signed(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        mulOutput_7 <= mulOutput_6;
      END IF;
    END IF;
  END PROCESS HwModeRegister_7_process;


  alpha_add_add_cast_6 <= resize(sum3_2, 37);
  alpha_add_add_cast_7 <= resize(mulOutput_7, 37);
  sum4 <= alpha_add_add_cast_6 + alpha_add_add_cast_7;

  sum4_1 <= sum4(35 DOWNTO 0);

  HwModeRegister_8_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      sum4_2 <= to_signed(0, 36);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        sum4_2 <= sum4_1;
      END IF;
    END IF;
  END PROCESS HwModeRegister_8_process;


  dataDelay4_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataDelay4_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND validPipe4_1 = '1' THEN
        dataDelay4_1 <= dataPipe4_1;
      END IF;
    END IF;
  END PROCESS dataDelay4_process;


  dataPipe5_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataPipe5_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        dataPipe5_1 <= dataDelay4_1;
      END IF;
    END IF;
  END PROCESS dataPipe5_process;


  multInPipe5_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      multInPipe5_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        multInPipe5_1 <= dataPipe5_1;
      END IF;
    END IF;
  END PROCESS multInPipe5_process;


  coeff5 <= to_signed(-16#5A82#, 16);

  mulOutput_8 <= multInPipe5_1 * coeff5;

  HwModeRegister_9_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      mulOutput_9 <= to_signed(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        mulOutput_9 <= mulOutput_8;
      END IF;
    END IF;
  END PROCESS HwModeRegister_9_process;


  alpha_add_add_cast_8 <= resize(sum4_2, 37);
  alpha_add_add_cast_9 <= resize(mulOutput_9, 37);
  sum5 <= alpha_add_add_cast_8 + alpha_add_add_cast_9;

  sum5_1 <= sum5(35 DOWNTO 0);

  HwModeRegister_10_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      sum5_2 <= to_signed(0, 36);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        sum5_2 <= sum5_1;
      END IF;
    END IF;
  END PROCESS HwModeRegister_10_process;


  dataDelay5_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataDelay5_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND validPipe5_1 = '1' THEN
        dataDelay5_1 <= dataPipe5_1;
      END IF;
    END IF;
  END PROCESS dataDelay5_process;


  dataPipe6_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataPipe6_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        dataPipe6_1 <= dataDelay5_1;
      END IF;
    END IF;
  END PROCESS dataPipe6_process;


  multInPipe6_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      multInPipe6_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        multInPipe6_1 <= dataPipe6_1;
      END IF;
    END IF;
  END PROCESS multInPipe6_process;


  coeff6 <= to_signed(16#5A82#, 16);

  mulOutput_10 <= multInPipe6_1 * coeff6;

  HwModeRegister_11_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      mulOutput_11 <= to_signed(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        mulOutput_11 <= mulOutput_10;
      END IF;
    END IF;
  END PROCESS HwModeRegister_11_process;


  alpha_add_add_cast_10 <= resize(sum5_2, 37);
  alpha_add_add_cast_11 <= resize(mulOutput_11, 37);
  sum6 <= alpha_add_add_cast_10 + alpha_add_add_cast_11;

  sum6_1 <= sum6(35 DOWNTO 0);

  HwModeRegister_12_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      sum6_2 <= to_signed(0, 36);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        sum6_2 <= sum6_1;
      END IF;
    END IF;
  END PROCESS HwModeRegister_12_process;


  dataDelay6_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataDelay6_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND validPipe6_1 = '1' THEN
        dataDelay6_1 <= dataPipe6_1;
      END IF;
    END IF;
  END PROCESS dataDelay6_process;


  dataPipe7_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataPipe7_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        dataPipe7_1 <= dataDelay6_1;
      END IF;
    END IF;
  END PROCESS dataPipe7_process;


  multInPipe7_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      multInPipe7_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        multInPipe7_1 <= dataPipe7_1;
      END IF;
    END IF;
  END PROCESS multInPipe7_process;


  coeff7 <= to_signed(-16#5A82#, 16);

  mulOutput_12 <= multInPipe7_1 * coeff7;

  HwModeRegister_13_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      mulOutput_13 <= to_signed(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        mulOutput_13 <= mulOutput_12;
      END IF;
    END IF;
  END PROCESS HwModeRegister_13_process;


  alpha_add_add_cast_12 <= resize(sum6_2, 37);
  alpha_add_add_cast_13 <= resize(mulOutput_13, 37);
  sum7 <= alpha_add_add_cast_12 + alpha_add_add_cast_13;

  sum7_1 <= sum7(35 DOWNTO 0);

  HwModeRegister_14_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      sum7_2 <= to_signed(0, 36);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        sum7_2 <= sum7_1;
      END IF;
    END IF;
  END PROCESS HwModeRegister_14_process;


  dataDelay7_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataDelay7_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND validPipe7_1 = '1' THEN
        dataDelay7_1 <= dataPipe7_1;
      END IF;
    END IF;
  END PROCESS dataDelay7_process;


  dataPipe8_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataPipe8_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        dataPipe8_1 <= dataDelay7_1;
      END IF;
    END IF;
  END PROCESS dataPipe8_process;


  multInPipe8_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      multInPipe8_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        multInPipe8_1 <= dataPipe8_1;
      END IF;
    END IF;
  END PROCESS multInPipe8_process;


  coeff8 <= to_signed(16#5A82#, 16);

  mulOutput_14 <= multInPipe8_1 * coeff8;

  HwModeRegister_15_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      mulOutput_15 <= to_signed(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        mulOutput_15 <= mulOutput_14;
      END IF;
    END IF;
  END PROCESS HwModeRegister_15_process;


  alpha_add_add_cast_14 <= resize(sum7_2, 37);
  alpha_add_add_cast_15 <= resize(mulOutput_15, 37);
  sum8 <= alpha_add_add_cast_14 + alpha_add_add_cast_15;

  sum8_1 <= sum8(35 DOWNTO 0);

  HwModeRegister_16_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      sum8_2 <= to_signed(0, 36);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        sum8_2 <= sum8_1;
      END IF;
    END IF;
  END PROCESS HwModeRegister_16_process;


  dataDelay8_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataDelay8_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND validPipe8_1 = '1' THEN
        dataDelay8_1 <= dataPipe8_1;
      END IF;
    END IF;
  END PROCESS dataDelay8_process;


  dataPipe9_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataPipe9_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        dataPipe9_1 <= dataDelay8_1;
      END IF;
    END IF;
  END PROCESS dataPipe9_process;


  multInPipe9_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      multInPipe9_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        multInPipe9_1 <= dataPipe9_1;
      END IF;
    END IF;
  END PROCESS multInPipe9_process;


  coeff9 <= to_signed(16#5A82#, 16);

  mulOutput_16 <= multInPipe9_1 * coeff9;

  HwModeRegister_17_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      mulOutput_17 <= to_signed(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        mulOutput_17 <= mulOutput_16;
      END IF;
    END IF;
  END PROCESS HwModeRegister_17_process;


  alpha_add_add_cast_16 <= resize(sum8_2, 37);
  alpha_add_add_cast_17 <= resize(mulOutput_17, 37);
  sum9 <= alpha_add_add_cast_16 + alpha_add_add_cast_17;

  sum9_1 <= sum9(35 DOWNTO 0);

  HwModeRegister_18_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      sum9_2 <= to_signed(0, 36);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        sum9_2 <= sum9_1;
      END IF;
    END IF;
  END PROCESS HwModeRegister_18_process;


  dataDelay9_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataDelay9_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND validPipe9_1 = '1' THEN
        dataDelay9_1 <= dataPipe9_1;
      END IF;
    END IF;
  END PROCESS dataDelay9_process;


  dataPipe10_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataPipe10_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        dataPipe10_1 <= dataDelay9_1;
      END IF;
    END IF;
  END PROCESS dataPipe10_process;


  multInPipe10_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      multInPipe10_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        multInPipe10_1 <= dataPipe10_1;
      END IF;
    END IF;
  END PROCESS multInPipe10_process;


  coeff10 <= to_signed(-16#5A82#, 16);

  mulOutput_18 <= multInPipe10_1 * coeff10;

  HwModeRegister_19_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      mulOutput_19 <= to_signed(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        mulOutput_19 <= mulOutput_18;
      END IF;
    END IF;
  END PROCESS HwModeRegister_19_process;


  alpha_add_add_cast_18 <= resize(sum9_2, 37);
  alpha_add_add_cast_19 <= resize(mulOutput_19, 37);
  sum10 <= alpha_add_add_cast_18 + alpha_add_add_cast_19;

  sum10_1 <= sum10(35 DOWNTO 0);

  HwModeRegister_20_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      sum10_2 <= to_signed(0, 36);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        sum10_2 <= sum10_1;
      END IF;
    END IF;
  END PROCESS HwModeRegister_20_process;


  dataDelay10_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataDelay10_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND validPipe10_1 = '1' THEN
        dataDelay10_1 <= dataPipe10_1;
      END IF;
    END IF;
  END PROCESS dataDelay10_process;


  dataPipe11_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataPipe11_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        dataPipe11_1 <= dataDelay10_1;
      END IF;
    END IF;
  END PROCESS dataPipe11_process;


  multInPipe11_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      multInPipe11_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        multInPipe11_1 <= dataPipe11_1;
      END IF;
    END IF;
  END PROCESS multInPipe11_process;


  coeff11 <= to_signed(16#5A82#, 16);

  mulOutput_20 <= multInPipe11_1 * coeff11;

  HwModeRegister_21_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      mulOutput_21 <= to_signed(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        mulOutput_21 <= mulOutput_20;
      END IF;
    END IF;
  END PROCESS HwModeRegister_21_process;


  alpha_add_add_cast_20 <= resize(sum10_2, 37);
  alpha_add_add_cast_21 <= resize(mulOutput_21, 37);
  sum11 <= alpha_add_add_cast_20 + alpha_add_add_cast_21;

  sum11_1 <= sum11(35 DOWNTO 0);

  HwModeRegister_22_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      sum11_2 <= to_signed(0, 36);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        sum11_2 <= sum11_1;
      END IF;
    END IF;
  END PROCESS HwModeRegister_22_process;


  dataDelay11_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataDelay11_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND validPipe11_1 = '1' THEN
        dataDelay11_1 <= dataPipe11_1;
      END IF;
    END IF;
  END PROCESS dataDelay11_process;


  dataPipe12_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataPipe12_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        dataPipe12_1 <= dataDelay11_1;
      END IF;
    END IF;
  END PROCESS dataPipe12_process;


  multInPipe12_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      multInPipe12_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        multInPipe12_1 <= dataPipe12_1;
      END IF;
    END IF;
  END PROCESS multInPipe12_process;


  coeff12 <= to_signed(16#5A82#, 16);

  mulOutput_22 <= multInPipe12_1 * coeff12;

  HwModeRegister_23_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      mulOutput_23 <= to_signed(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        mulOutput_23 <= mulOutput_22;
      END IF;
    END IF;
  END PROCESS HwModeRegister_23_process;


  alpha_add_add_cast_22 <= resize(sum11_2, 37);
  alpha_add_add_cast_23 <= resize(mulOutput_23, 37);
  sum12 <= alpha_add_add_cast_22 + alpha_add_add_cast_23;

  sum12_1 <= sum12(35 DOWNTO 0);

  HwModeRegister_24_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      sum12_2 <= to_signed(0, 36);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        sum12_2 <= sum12_1;
      END IF;
    END IF;
  END PROCESS HwModeRegister_24_process;


  dataDelay12_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataDelay12_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND validPipe12_1 = '1' THEN
        dataDelay12_1 <= dataPipe12_1;
      END IF;
    END IF;
  END PROCESS dataDelay12_process;


  dataPipe13_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataPipe13_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        dataPipe13_1 <= dataDelay12_1;
      END IF;
    END IF;
  END PROCESS dataPipe13_process;


  multInPipe13_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      multInPipe13_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        multInPipe13_1 <= dataPipe13_1;
      END IF;
    END IF;
  END PROCESS multInPipe13_process;


  coeff13 <= to_signed(16#5A82#, 16);

  mulOutput_24 <= multInPipe13_1 * coeff13;

  HwModeRegister_25_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      mulOutput_25 <= to_signed(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        mulOutput_25 <= mulOutput_24;
      END IF;
    END IF;
  END PROCESS HwModeRegister_25_process;


  alpha_add_add_cast_24 <= resize(sum12_2, 37);
  alpha_add_add_cast_25 <= resize(mulOutput_25, 37);
  sum13 <= alpha_add_add_cast_24 + alpha_add_add_cast_25;

  sum13_1 <= sum13(35 DOWNTO 0);

  HwModeRegister_26_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      sum13_2 <= to_signed(0, 36);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        sum13_2 <= sum13_1;
      END IF;
    END IF;
  END PROCESS HwModeRegister_26_process;


  dataDelay13_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataDelay13_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND validPipe13_1 = '1' THEN
        dataDelay13_1 <= dataPipe13_1;
      END IF;
    END IF;
  END PROCESS dataDelay13_process;


  dataPipe14_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataPipe14_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        dataPipe14_1 <= dataDelay13_1;
      END IF;
    END IF;
  END PROCESS dataPipe14_process;


  multInPipe14_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      multInPipe14_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        multInPipe14_1 <= dataPipe14_1;
      END IF;
    END IF;
  END PROCESS multInPipe14_process;


  coeff14 <= to_signed(-16#5A82#, 16);

  mulOutput_26 <= multInPipe14_1 * coeff14;

  HwModeRegister_27_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      mulOutput_27 <= to_signed(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        mulOutput_27 <= mulOutput_26;
      END IF;
    END IF;
  END PROCESS HwModeRegister_27_process;


  alpha_add_add_cast_26 <= resize(sum13_2, 37);
  alpha_add_add_cast_27 <= resize(mulOutput_27, 37);
  sum14 <= alpha_add_add_cast_26 + alpha_add_add_cast_27;

  sum14_1 <= sum14(35 DOWNTO 0);

  HwModeRegister_28_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      sum14_2 <= to_signed(0, 36);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        sum14_2 <= sum14_1;
      END IF;
    END IF;
  END PROCESS HwModeRegister_28_process;


  dataDelay14_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataDelay14_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND validPipe14_1 = '1' THEN
        dataDelay14_1 <= dataPipe14_1;
      END IF;
    END IF;
  END PROCESS dataDelay14_process;


  dataPipe15_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataPipe15_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        dataPipe15_1 <= dataDelay14_1;
      END IF;
    END IF;
  END PROCESS dataPipe15_process;


  multInPipe15_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      multInPipe15_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        multInPipe15_1 <= dataPipe15_1;
      END IF;
    END IF;
  END PROCESS multInPipe15_process;


  coeff15 <= to_signed(-16#5A82#, 16);

  mulOutput_28 <= multInPipe15_1 * coeff15;

  HwModeRegister_29_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      mulOutput_29 <= to_signed(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        mulOutput_29 <= mulOutput_28;
      END IF;
    END IF;
  END PROCESS HwModeRegister_29_process;


  alpha_add_add_cast_28 <= resize(sum14_2, 37);
  alpha_add_add_cast_29 <= resize(mulOutput_29, 37);
  sum15 <= alpha_add_add_cast_28 + alpha_add_add_cast_29;

  sum15_1 <= sum15(35 DOWNTO 0);

  HwModeRegister_30_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      sum15_2 <= to_signed(0, 36);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        sum15_2 <= sum15_1;
      END IF;
    END IF;
  END PROCESS HwModeRegister_30_process;


  dataDelay15_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataDelay15_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND validPipe15_1 = '1' THEN
        dataDelay15_1 <= dataPipe15_1;
      END IF;
    END IF;
  END PROCESS dataDelay15_process;


  dataPipe16_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataPipe16_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        dataPipe16_1 <= dataDelay15_1;
      END IF;
    END IF;
  END PROCESS dataPipe16_process;


  multInPipe16_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      multInPipe16_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        multInPipe16_1 <= dataPipe16_1;
      END IF;
    END IF;
  END PROCESS multInPipe16_process;


  coeff16 <= to_signed(-16#5A82#, 16);

  mulOutput_30 <= multInPipe16_1 * coeff16;

  HwModeRegister_31_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      mulOutput_31 <= to_signed(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        mulOutput_31 <= mulOutput_30;
      END IF;
    END IF;
  END PROCESS HwModeRegister_31_process;


  alpha_add_add_cast_30 <= resize(sum15_2, 37);
  alpha_add_add_cast_31 <= resize(mulOutput_31, 37);
  sum16 <= alpha_add_add_cast_30 + alpha_add_add_cast_31;

  sum16_1 <= sum16(35 DOWNTO 0);

  HwModeRegister_32_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      sum16_2 <= to_signed(0, 36);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        sum16_2 <= sum16_1;
      END IF;
    END IF;
  END PROCESS HwModeRegister_32_process;


  dataDelay16_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataDelay16_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND validPipe16_1 = '1' THEN
        dataDelay16_1 <= dataPipe16_1;
      END IF;
    END IF;
  END PROCESS dataDelay16_process;


  dataPipe17_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataPipe17_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        dataPipe17_1 <= dataDelay16_1;
      END IF;
    END IF;
  END PROCESS dataPipe17_process;


  multInPipe17_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      multInPipe17_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        multInPipe17_1 <= dataPipe17_1;
      END IF;
    END IF;
  END PROCESS multInPipe17_process;


  coeff17 <= to_signed(16#5A82#, 16);

  mulOutput_32 <= multInPipe17_1 * coeff17;

  HwModeRegister_33_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      mulOutput_33 <= to_signed(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        mulOutput_33 <= mulOutput_32;
      END IF;
    END IF;
  END PROCESS HwModeRegister_33_process;


  alpha_add_add_cast_32 <= resize(sum16_2, 37);
  alpha_add_add_cast_33 <= resize(mulOutput_33, 37);
  sum17 <= alpha_add_add_cast_32 + alpha_add_add_cast_33;

  sum17_1 <= sum17(35 DOWNTO 0);

  HwModeRegister_34_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      sum17_2 <= to_signed(0, 36);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        sum17_2 <= sum17_1;
      END IF;
    END IF;
  END PROCESS HwModeRegister_34_process;


  dataDelay17_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataDelay17_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND validPipe17_1 = '1' THEN
        dataDelay17_1 <= dataPipe17_1;
      END IF;
    END IF;
  END PROCESS dataDelay17_process;


  dataPipe18_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataPipe18_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        dataPipe18_1 <= dataDelay17_1;
      END IF;
    END IF;
  END PROCESS dataPipe18_process;


  multInPipe18_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      multInPipe18_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        multInPipe18_1 <= dataPipe18_1;
      END IF;
    END IF;
  END PROCESS multInPipe18_process;


  coeff18 <= to_signed(-16#5A82#, 16);

  mulOutput_34 <= multInPipe18_1 * coeff18;

  HwModeRegister_35_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      mulOutput_35 <= to_signed(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        mulOutput_35 <= mulOutput_34;
      END IF;
    END IF;
  END PROCESS HwModeRegister_35_process;


  alpha_add_add_cast_34 <= resize(sum17_2, 37);
  alpha_add_add_cast_35 <= resize(mulOutput_35, 37);
  sum18 <= alpha_add_add_cast_34 + alpha_add_add_cast_35;

  sum18_1 <= sum18(35 DOWNTO 0);

  HwModeRegister_36_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      sum18_2 <= to_signed(0, 36);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        sum18_2 <= sum18_1;
      END IF;
    END IF;
  END PROCESS HwModeRegister_36_process;


  dataDelay18_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataDelay18_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND validPipe18_1 = '1' THEN
        dataDelay18_1 <= dataPipe18_1;
      END IF;
    END IF;
  END PROCESS dataDelay18_process;


  dataPipe19_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataPipe19_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        dataPipe19_1 <= dataDelay18_1;
      END IF;
    END IF;
  END PROCESS dataPipe19_process;


  multInPipe19_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      multInPipe19_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        multInPipe19_1 <= dataPipe19_1;
      END IF;
    END IF;
  END PROCESS multInPipe19_process;


  coeff19 <= to_signed(16#5A82#, 16);

  mulOutput_36 <= multInPipe19_1 * coeff19;

  HwModeRegister_37_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      mulOutput_37 <= to_signed(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        mulOutput_37 <= mulOutput_36;
      END IF;
    END IF;
  END PROCESS HwModeRegister_37_process;


  alpha_add_add_cast_36 <= resize(sum18_2, 37);
  alpha_add_add_cast_37 <= resize(mulOutput_37, 37);
  sum19 <= alpha_add_add_cast_36 + alpha_add_add_cast_37;

  sum19_1 <= sum19(35 DOWNTO 0);

  HwModeRegister_38_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      sum19_2 <= to_signed(0, 36);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        sum19_2 <= sum19_1;
      END IF;
    END IF;
  END PROCESS HwModeRegister_38_process;


  dataDelay19_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataDelay19_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND validPipe19_1 = '1' THEN
        dataDelay19_1 <= dataPipe19_1;
      END IF;
    END IF;
  END PROCESS dataDelay19_process;


  dataPipe20_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataPipe20_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        dataPipe20_1 <= dataDelay19_1;
      END IF;
    END IF;
  END PROCESS dataPipe20_process;


  multInPipe20_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      multInPipe20_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        multInPipe20_1 <= dataPipe20_1;
      END IF;
    END IF;
  END PROCESS multInPipe20_process;


  coeff20 <= to_signed(16#5A82#, 16);

  mulOutput_38 <= multInPipe20_1 * coeff20;

  HwModeRegister_39_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      mulOutput_39 <= to_signed(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        mulOutput_39 <= mulOutput_38;
      END IF;
    END IF;
  END PROCESS HwModeRegister_39_process;


  alpha_add_add_cast_38 <= resize(sum19_2, 37);
  alpha_add_add_cast_39 <= resize(mulOutput_39, 37);
  sum20 <= alpha_add_add_cast_38 + alpha_add_add_cast_39;

  sum20_1 <= sum20(35 DOWNTO 0);

  HwModeRegister_40_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      sum20_2 <= to_signed(0, 36);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        sum20_2 <= sum20_1;
      END IF;
    END IF;
  END PROCESS HwModeRegister_40_process;


  dataDelay20_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataDelay20_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND validPipe20_1 = '1' THEN
        dataDelay20_1 <= dataPipe20_1;
      END IF;
    END IF;
  END PROCESS dataDelay20_process;


  dataPipe21_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataPipe21_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        dataPipe21_1 <= dataDelay20_1;
      END IF;
    END IF;
  END PROCESS dataPipe21_process;


  multInPipe21_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      multInPipe21_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        multInPipe21_1 <= dataPipe21_1;
      END IF;
    END IF;
  END PROCESS multInPipe21_process;


  coeff21 <= to_signed(-16#5A82#, 16);

  mulOutput_40 <= multInPipe21_1 * coeff21;

  HwModeRegister_41_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      mulOutput_41 <= to_signed(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        mulOutput_41 <= mulOutput_40;
      END IF;
    END IF;
  END PROCESS HwModeRegister_41_process;


  alpha_add_add_cast_40 <= resize(sum20_2, 37);
  alpha_add_add_cast_41 <= resize(mulOutput_41, 37);
  sum21 <= alpha_add_add_cast_40 + alpha_add_add_cast_41;

  sum21_1 <= sum21(35 DOWNTO 0);

  HwModeRegister_42_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      sum21_2 <= to_signed(0, 36);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        sum21_2 <= sum21_1;
      END IF;
    END IF;
  END PROCESS HwModeRegister_42_process;


  dataDelay21_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataDelay21_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND validPipe21_1 = '1' THEN
        dataDelay21_1 <= dataPipe21_1;
      END IF;
    END IF;
  END PROCESS dataDelay21_process;


  dataPipe22_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataPipe22_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        dataPipe22_1 <= dataDelay21_1;
      END IF;
    END IF;
  END PROCESS dataPipe22_process;


  multInPipe22_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      multInPipe22_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        multInPipe22_1 <= dataPipe22_1;
      END IF;
    END IF;
  END PROCESS multInPipe22_process;


  coeff22 <= to_signed(16#5A82#, 16);

  mulOutput_42 <= multInPipe22_1 * coeff22;

  HwModeRegister_43_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      mulOutput_43 <= to_signed(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        mulOutput_43 <= mulOutput_42;
      END IF;
    END IF;
  END PROCESS HwModeRegister_43_process;


  alpha_add_add_cast_42 <= resize(sum21_2, 37);
  alpha_add_add_cast_43 <= resize(mulOutput_43, 37);
  sum22 <= alpha_add_add_cast_42 + alpha_add_add_cast_43;

  sum22_1 <= sum22(35 DOWNTO 0);

  HwModeRegister_44_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      sum22_2 <= to_signed(0, 36);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        sum22_2 <= sum22_1;
      END IF;
    END IF;
  END PROCESS HwModeRegister_44_process;


  dataDelay22_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataDelay22_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND validPipe22_1 = '1' THEN
        dataDelay22_1 <= dataPipe22_1;
      END IF;
    END IF;
  END PROCESS dataDelay22_process;


  dataPipe23_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataPipe23_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        dataPipe23_1 <= dataDelay22_1;
      END IF;
    END IF;
  END PROCESS dataPipe23_process;


  multInPipe23_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      multInPipe23_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        multInPipe23_1 <= dataPipe23_1;
      END IF;
    END IF;
  END PROCESS multInPipe23_process;


  coeff23 <= to_signed(16#5A82#, 16);

  mulOutput_44 <= multInPipe23_1 * coeff23;

  HwModeRegister_45_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      mulOutput_45 <= to_signed(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        mulOutput_45 <= mulOutput_44;
      END IF;
    END IF;
  END PROCESS HwModeRegister_45_process;


  alpha_add_add_cast_44 <= resize(sum22_2, 37);
  alpha_add_add_cast_45 <= resize(mulOutput_45, 37);
  sum23 <= alpha_add_add_cast_44 + alpha_add_add_cast_45;

  sum23_1 <= sum23(35 DOWNTO 0);

  HwModeRegister_46_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      sum23_2 <= to_signed(0, 36);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        sum23_2 <= sum23_1;
      END IF;
    END IF;
  END PROCESS HwModeRegister_46_process;


  dataDelay23_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataDelay23_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND validPipe23_1 = '1' THEN
        dataDelay23_1 <= dataPipe23_1;
      END IF;
    END IF;
  END PROCESS dataDelay23_process;


  dataPipe24_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataPipe24_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        dataPipe24_1 <= dataDelay23_1;
      END IF;
    END IF;
  END PROCESS dataPipe24_process;


  multInPipe24_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      multInPipe24_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        multInPipe24_1 <= dataPipe24_1;
      END IF;
    END IF;
  END PROCESS multInPipe24_process;


  coeff24 <= to_signed(16#5A82#, 16);

  mulOutput_46 <= multInPipe24_1 * coeff24;

  HwModeRegister_47_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      mulOutput_47 <= to_signed(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        mulOutput_47 <= mulOutput_46;
      END IF;
    END IF;
  END PROCESS HwModeRegister_47_process;


  alpha_add_add_cast_46 <= resize(sum23_2, 37);
  alpha_add_add_cast_47 <= resize(mulOutput_47, 37);
  sum24 <= alpha_add_add_cast_46 + alpha_add_add_cast_47;

  sum24_1 <= sum24(35 DOWNTO 0);

  HwModeRegister_48_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      sum24_2 <= to_signed(0, 36);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        sum24_2 <= sum24_1;
      END IF;
    END IF;
  END PROCESS HwModeRegister_48_process;


  dataDelay24_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataDelay24_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND validPipe24_1 = '1' THEN
        dataDelay24_1 <= dataPipe24_1;
      END IF;
    END IF;
  END PROCESS dataDelay24_process;


  dataPipe25_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataPipe25_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        dataPipe25_1 <= dataDelay24_1;
      END IF;
    END IF;
  END PROCESS dataPipe25_process;


  multInPipe25_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      multInPipe25_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        multInPipe25_1 <= dataPipe25_1;
      END IF;
    END IF;
  END PROCESS multInPipe25_process;


  coeff25 <= to_signed(-16#5A82#, 16);

  mulOutput_48 <= multInPipe25_1 * coeff25;

  HwModeRegister_49_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      mulOutput_49 <= to_signed(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        mulOutput_49 <= mulOutput_48;
      END IF;
    END IF;
  END PROCESS HwModeRegister_49_process;


  alpha_add_add_cast_48 <= resize(sum24_2, 37);
  alpha_add_add_cast_49 <= resize(mulOutput_49, 37);
  sum25 <= alpha_add_add_cast_48 + alpha_add_add_cast_49;

  sum25_1 <= sum25(35 DOWNTO 0);

  HwModeRegister_50_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      sum25_2 <= to_signed(0, 36);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        sum25_2 <= sum25_1;
      END IF;
    END IF;
  END PROCESS HwModeRegister_50_process;


  dataDelay25_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataDelay25_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND validPipe25_1 = '1' THEN
        dataDelay25_1 <= dataPipe25_1;
      END IF;
    END IF;
  END PROCESS dataDelay25_process;


  dataPipe26_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataPipe26_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        dataPipe26_1 <= dataDelay25_1;
      END IF;
    END IF;
  END PROCESS dataPipe26_process;


  multInPipe26_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      multInPipe26_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        multInPipe26_1 <= dataPipe26_1;
      END IF;
    END IF;
  END PROCESS multInPipe26_process;


  coeff26 <= to_signed(-16#5A82#, 16);

  mulOutput_50 <= multInPipe26_1 * coeff26;

  HwModeRegister_51_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      mulOutput_51 <= to_signed(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        mulOutput_51 <= mulOutput_50;
      END IF;
    END IF;
  END PROCESS HwModeRegister_51_process;


  alpha_add_add_cast_50 <= resize(sum25_2, 37);
  alpha_add_add_cast_51 <= resize(mulOutput_51, 37);
  sum26 <= alpha_add_add_cast_50 + alpha_add_add_cast_51;

  sum26_1 <= sum26(35 DOWNTO 0);

  HwModeRegister_52_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      sum26_2 <= to_signed(0, 36);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        sum26_2 <= sum26_1;
      END IF;
    END IF;
  END PROCESS HwModeRegister_52_process;


  dataDelay26_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataDelay26_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND validPipe26_1 = '1' THEN
        dataDelay26_1 <= dataPipe26_1;
      END IF;
    END IF;
  END PROCESS dataDelay26_process;


  multInPipe27_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      multInPipe27_reg <= (OTHERS => to_signed(16#0000#, 16));
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        multInPipe27_reg(0) <= dataDelay26_1;
        multInPipe27_reg(1) <= multInPipe27_reg(0);
      END IF;
    END IF;
  END PROCESS multInPipe27_process;

  multInPipe27_1 <= multInPipe27_reg(1);

  coeff27 <= to_signed(-16#5A82#, 16);

  mulOutput_52 <= multInPipe27_1 * coeff27;

  HwModeRegister_53_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      mulOutput_53 <= to_signed(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        mulOutput_53 <= mulOutput_52;
      END IF;
    END IF;
  END PROCESS HwModeRegister_53_process;


  alpha_add_add_cast_52 <= resize(sum26_2, 37);
  alpha_add_add_cast_53 <= resize(mulOutput_53, 37);
  sum27 <= alpha_add_add_cast_52 + alpha_add_add_cast_53;

  sum27_1 <= sum27(35 DOWNTO 0);

  finalSumPipe_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      finalSumPipe_1 <= to_signed(0, 36);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        finalSumPipe_1 <= sum27_1;
      END IF;
    END IF;
  END PROCESS finalSumPipe_process;


  converterOut <= finalSumPipe_1(30 DOWNTO 15);

  finalDataPipe_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataOut_tmp <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND finalSumValid = '1' THEN
        dataOut_tmp <= converterOut;
      END IF;
    END IF;
  END PROCESS finalDataPipe_process;


  dataOut <= std_logic_vector(dataOut_tmp);

  finalValidPipe_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      validOut <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        validOut <= finalSumValid;
      END IF;
    END IF;
  END PROCESS finalValidPipe_process;


END rtl;

