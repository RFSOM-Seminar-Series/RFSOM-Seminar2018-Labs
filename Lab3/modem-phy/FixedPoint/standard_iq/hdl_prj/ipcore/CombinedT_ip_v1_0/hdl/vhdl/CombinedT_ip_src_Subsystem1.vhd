-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\combinedTxRx_StandardIQ\CombinedT_ip_src_Subsystem1.vhd
-- Created: 2018-02-01 11:49:53
-- 
-- Generated by MATLAB 9.3 and HDL Coder 3.11
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: CombinedT_ip_src_Subsystem1
-- Source Path: combinedTxRx_StandardIQ/Combined TX and RX/Transmitter HDL/Subsystem1
-- Hierarchy Level: 2
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY CombinedT_ip_src_Subsystem1 IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        enb_1_4_1                         :   IN    std_logic;
        In1                               :   IN    std_logic;
        Out1                              :   OUT   std_logic
        );
END CombinedT_ip_src_Subsystem1;


ARCHITECTURE rtl OF CombinedT_ip_src_Subsystem1 IS

  -- Signals
  SIGNAL In1_tap1                         : std_logic;
  SIGNAL In1_tap2                         : std_logic;
  SIGNAL In1_tap3                         : std_logic;
  SIGNAL Tapped_Delay_out1                : std_logic_vector(0 TO 3);  -- boolean [4]
  SIGNAL Downsample5_bypass_reg           : std_logic_vector(0 TO 3);  -- ufix1 [4]
  SIGNAL Downsample5_out1                 : std_logic_vector(0 TO 3);  -- boolean [4]
  SIGNAL Downsample5_out1_0               : std_logic;
  SIGNAL Downsample5_out1_1               : std_logic;
  SIGNAL Downsample5_out1_2               : std_logic;
  SIGNAL Downsample5_out1_3               : std_logic;
  SIGNAL Logical_Operator_out1            : std_logic;

BEGIN
  Tapped_Delay_tap1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      In1_tap1 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        In1_tap1 <= In1;
      END IF;
    END IF;
  END PROCESS Tapped_Delay_tap1_process;


  Tapped_Delay_tap2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      In1_tap2 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        In1_tap2 <= In1_tap1;
      END IF;
    END IF;
  END PROCESS Tapped_Delay_tap2_process;


  Tapped_Delay_tap3_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      In1_tap3 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        In1_tap3 <= In1_tap2;
      END IF;
    END IF;
  END PROCESS Tapped_Delay_tap3_process;


  Tapped_Delay_out1(0) <= In1_tap3;
  Tapped_Delay_out1(1) <= In1_tap2;
  Tapped_Delay_out1(2) <= In1_tap1;
  Tapped_Delay_out1(3) <= In1;

  -- Downsample5: Downsample by 4, Sample offset 0 
  -- Downsample bypass register
  Downsample5_bypass_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Downsample5_bypass_reg <= (OTHERS => '0');
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_4_1 = '1' THEN
        Downsample5_bypass_reg <= Tapped_Delay_out1;
      END IF;
    END IF;
  END PROCESS Downsample5_bypass_process;

  
  Downsample5_out1 <= Tapped_Delay_out1 WHEN enb_1_4_1 = '1' ELSE
      Downsample5_bypass_reg;

  Downsample5_out1_0 <= Downsample5_out1(0);

  Downsample5_out1_1 <= Downsample5_out1(1);

  Downsample5_out1_2 <= Downsample5_out1(2);

  Downsample5_out1_3 <= Downsample5_out1(3);

  Logical_Operator_out1 <= Downsample5_out1_3 OR (Downsample5_out1_2 OR (Downsample5_out1_0 OR Downsample5_out1_1));

  Out1 <= Logical_Operator_out1;

END rtl;

