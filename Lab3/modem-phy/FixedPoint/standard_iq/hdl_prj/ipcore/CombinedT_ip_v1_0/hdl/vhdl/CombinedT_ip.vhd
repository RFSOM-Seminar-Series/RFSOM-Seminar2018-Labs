-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\combinedTxRx_StandardIQ\CombinedT_ip.vhd
-- Created: 2018-02-01 11:49:59
-- 
-- Generated by MATLAB 9.3 and HDL Coder 3.11
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: -1
-- Target subsystem base rate: -1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: CombinedT_ip
-- Source Path: CombinedT_ip
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY CombinedT_ip IS
  PORT( IPCORE_CLK                        :   IN    std_logic;  -- ufix1
        IPCORE_RESETN                     :   IN    std_logic;  -- ufix1
        Rx_Data_I1_In                     :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
        Tx_Data_I1_In                     :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
        Rx_Data_Q1_In                     :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
        Tx_Data_Q1_In                     :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
        RXHDLDUT_Data_Valid_In            :   IN    std_logic;  -- ufix1
        TXHDLDUT_Data_Valid_In            :   IN    std_logic;  -- ufix1
        AXI4_Lite_ACLK                    :   IN    std_logic;  -- ufix1
        AXI4_Lite_ARESETN                 :   IN    std_logic;  -- ufix1
        AXI4_Lite_AWADDR                  :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
        AXI4_Lite_AWVALID                 :   IN    std_logic;  -- ufix1
        AXI4_Lite_WDATA                   :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        AXI4_Lite_WSTRB                   :   IN    std_logic_vector(3 DOWNTO 0);  -- ufix4
        AXI4_Lite_WVALID                  :   IN    std_logic;  -- ufix1
        AXI4_Lite_BREADY                  :   IN    std_logic;  -- ufix1
        AXI4_Lite_ARADDR                  :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
        AXI4_Lite_ARVALID                 :   IN    std_logic;  -- ufix1
        AXI4_Lite_RREADY                  :   IN    std_logic;  -- ufix1
        Rx_Data_I1_Out                    :   OUT   std_logic_vector(15 DOWNTO 0);  -- ufix16
        Tx_Data_I1_Out                    :   OUT   std_logic_vector(15 DOWNTO 0);  -- ufix16
        Rx_Data_Q1_Out                    :   OUT   std_logic_vector(15 DOWNTO 0);  -- ufix16
        Tx_Data_Q1_Out                    :   OUT   std_logic_vector(15 DOWNTO 0);  -- ufix16
        RXHDLDUT_Data_Valid_Out           :   OUT   std_logic;  -- ufix1
        TXHDLDUT_Data_Valid_Out           :   OUT   std_logic;  -- ufix1
        AXI4_Lite_AWREADY                 :   OUT   std_logic;  -- ufix1
        AXI4_Lite_WREADY                  :   OUT   std_logic;  -- ufix1
        AXI4_Lite_BRESP                   :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
        AXI4_Lite_BVALID                  :   OUT   std_logic;  -- ufix1
        AXI4_Lite_ARREADY                 :   OUT   std_logic;  -- ufix1
        AXI4_Lite_RDATA                   :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        AXI4_Lite_RRESP                   :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
        AXI4_Lite_RVALID                  :   OUT   std_logic  -- ufix1
        );
END CombinedT_ip;


ARCHITECTURE rtl OF CombinedT_ip IS

  -- Component Declarations
  COMPONENT CombinedT_ip_axi_lite
    PORT( reset                           :   IN    std_logic;
          AXI4_Lite_ACLK                  :   IN    std_logic;  -- ufix1
          AXI4_Lite_ARESETN               :   IN    std_logic;  -- ufix1
          AXI4_Lite_AWADDR                :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
          AXI4_Lite_AWVALID               :   IN    std_logic;  -- ufix1
          AXI4_Lite_WDATA                 :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          AXI4_Lite_WSTRB                 :   IN    std_logic_vector(3 DOWNTO 0);  -- ufix4
          AXI4_Lite_WVALID                :   IN    std_logic;  -- ufix1
          AXI4_Lite_BREADY                :   IN    std_logic;  -- ufix1
          AXI4_Lite_ARADDR                :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
          AXI4_Lite_ARVALID               :   IN    std_logic;  -- ufix1
          AXI4_Lite_RREADY                :   IN    std_logic;  -- ufix1
          read_ip_timestamp               :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          AXI4_Lite_AWREADY               :   OUT   std_logic;  -- ufix1
          AXI4_Lite_WREADY                :   OUT   std_logic;  -- ufix1
          AXI4_Lite_BRESP                 :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
          AXI4_Lite_BVALID                :   OUT   std_logic;  -- ufix1
          AXI4_Lite_ARREADY               :   OUT   std_logic;  -- ufix1
          AXI4_Lite_RDATA                 :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          AXI4_Lite_RRESP                 :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
          AXI4_Lite_RVALID                :   OUT   std_logic;  -- ufix1
          write_axi_enable                :   OUT   std_logic;  -- ufix1
          reset_internal                  :   OUT   std_logic  -- ufix1
          );
  END COMPONENT;

  COMPONENT CombinedT_ip_dut
    PORT( clk                             :   IN    std_logic;  -- ufix1
          reset                           :   IN    std_logic;
          dut_enable                      :   IN    std_logic;  -- ufix1
          ValidInTx                       :   IN    std_logic;  -- ufix1
          rInTx                           :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16
          iInTx                           :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16
          FromRadioR                      :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16
          FromRadioI                      :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16
          FromRadioValidIn                :   IN    std_logic;  -- ufix1
          ce_out                          :   OUT   std_logic;  -- ufix1
          ToRadioR                        :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          ToRadioI                        :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          ToRadioValid                    :   OUT   std_logic;  -- ufix1
          FromIPR                         :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16
          FromIPI                         :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16
          FromIPvalid                     :   OUT   std_logic  -- ufix1
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : CombinedT_ip_axi_lite
    USE ENTITY work.CombinedT_ip_axi_lite(rtl);

  FOR ALL : CombinedT_ip_dut
    USE ENTITY work.CombinedT_ip_dut(rtl);

  -- Signals
  SIGNAL reset                            : std_logic;
  SIGNAL ip_timestamp                     : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL reset_cm                         : std_logic;  -- ufix1
  SIGNAL reset_internal                   : std_logic;  -- ufix1
  SIGNAL AXI4_Lite_BRESP_tmp              : std_logic_vector(1 DOWNTO 0);  -- ufix2
  SIGNAL AXI4_Lite_RDATA_tmp              : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL AXI4_Lite_RRESP_tmp              : std_logic_vector(1 DOWNTO 0);  -- ufix2
  SIGNAL write_axi_enable                 : std_logic;  -- ufix1
  SIGNAL Tx_Data_I1_In_unsigned           : unsigned(15 DOWNTO 0);  -- ufix16
  SIGNAL rInTx_sig                        : signed(15 DOWNTO 0);  -- sfix16
  SIGNAL Tx_Data_Q1_In_unsigned           : unsigned(15 DOWNTO 0);  -- ufix16
  SIGNAL iInTx_sig                        : signed(15 DOWNTO 0);  -- sfix16
  SIGNAL Rx_Data_I1_In_unsigned           : unsigned(15 DOWNTO 0);  -- ufix16
  SIGNAL FromRadioR_sig                   : signed(15 DOWNTO 0);  -- sfix16
  SIGNAL Rx_Data_Q1_In_unsigned           : unsigned(15 DOWNTO 0);  -- ufix16
  SIGNAL FromRadioI_sig                   : signed(15 DOWNTO 0);  -- sfix16
  SIGNAL ce_out_sig                       : std_logic;  -- ufix1
  SIGNAL ToRadioR_sig                     : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL ToRadioI_sig                     : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL ToRadioValid_sig                 : std_logic;  -- ufix1
  SIGNAL FromIPR_sig                      : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL FromIPI_sig                      : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL FromIPvalid_sig                  : std_logic;  -- ufix1
  SIGNAL FromIPR_sig_signed               : signed(15 DOWNTO 0);  -- sfix16
  SIGNAL Rx_Data_I1_Out_tmp               : unsigned(15 DOWNTO 0);  -- ufix16
  SIGNAL ToRadioR_sig_signed              : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL Tx_Data_I1_Out_tmp               : unsigned(15 DOWNTO 0);  -- ufix16
  SIGNAL FromIPI_sig_signed               : signed(15 DOWNTO 0);  -- sfix16
  SIGNAL Rx_Data_Q1_Out_tmp               : unsigned(15 DOWNTO 0);  -- ufix16
  SIGNAL ToRadioI_sig_signed              : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL Tx_Data_Q1_Out_tmp               : unsigned(15 DOWNTO 0);  -- ufix16

BEGIN
  u_CombinedT_ip_axi_lite_inst : CombinedT_ip_axi_lite
    PORT MAP( reset => reset,
              AXI4_Lite_ACLK => AXI4_Lite_ACLK,  -- ufix1
              AXI4_Lite_ARESETN => AXI4_Lite_ARESETN,  -- ufix1
              AXI4_Lite_AWADDR => AXI4_Lite_AWADDR,  -- ufix16
              AXI4_Lite_AWVALID => AXI4_Lite_AWVALID,  -- ufix1
              AXI4_Lite_WDATA => AXI4_Lite_WDATA,  -- ufix32
              AXI4_Lite_WSTRB => AXI4_Lite_WSTRB,  -- ufix4
              AXI4_Lite_WVALID => AXI4_Lite_WVALID,  -- ufix1
              AXI4_Lite_BREADY => AXI4_Lite_BREADY,  -- ufix1
              AXI4_Lite_ARADDR => AXI4_Lite_ARADDR,  -- ufix16
              AXI4_Lite_ARVALID => AXI4_Lite_ARVALID,  -- ufix1
              AXI4_Lite_RREADY => AXI4_Lite_RREADY,  -- ufix1
              read_ip_timestamp => std_logic_vector(ip_timestamp),  -- ufix32
              AXI4_Lite_AWREADY => AXI4_Lite_AWREADY,  -- ufix1
              AXI4_Lite_WREADY => AXI4_Lite_WREADY,  -- ufix1
              AXI4_Lite_BRESP => AXI4_Lite_BRESP_tmp,  -- ufix2
              AXI4_Lite_BVALID => AXI4_Lite_BVALID,  -- ufix1
              AXI4_Lite_ARREADY => AXI4_Lite_ARREADY,  -- ufix1
              AXI4_Lite_RDATA => AXI4_Lite_RDATA_tmp,  -- ufix32
              AXI4_Lite_RRESP => AXI4_Lite_RRESP_tmp,  -- ufix2
              AXI4_Lite_RVALID => AXI4_Lite_RVALID,  -- ufix1
              write_axi_enable => write_axi_enable,  -- ufix1
              reset_internal => reset_internal  -- ufix1
              );

  u_CombinedT_ip_dut_inst : CombinedT_ip_dut
    PORT MAP( clk => IPCORE_CLK,  -- ufix1
              reset => reset,
              dut_enable => write_axi_enable,  -- ufix1
              ValidInTx => TXHDLDUT_Data_Valid_In,  -- ufix1
              rInTx => std_logic_vector(rInTx_sig),  -- sfix16
              iInTx => std_logic_vector(iInTx_sig),  -- sfix16
              FromRadioR => std_logic_vector(FromRadioR_sig),  -- sfix16
              FromRadioI => std_logic_vector(FromRadioI_sig),  -- sfix16
              FromRadioValidIn => RXHDLDUT_Data_Valid_In,  -- ufix1
              ce_out => ce_out_sig,  -- ufix1
              ToRadioR => ToRadioR_sig,  -- sfix16_En14
              ToRadioI => ToRadioI_sig,  -- sfix16_En14
              ToRadioValid => ToRadioValid_sig,  -- ufix1
              FromIPR => FromIPR_sig,  -- sfix16
              FromIPI => FromIPI_sig,  -- sfix16
              FromIPvalid => FromIPvalid_sig  -- ufix1
              );

  ip_timestamp <= to_unsigned(1802011149, 32);

  reset_cm <=  NOT IPCORE_RESETN;

  reset <= reset_cm OR reset_internal;

  Tx_Data_I1_In_unsigned <= unsigned(Tx_Data_I1_In);

  rInTx_sig <= signed(Tx_Data_I1_In_unsigned);

  Tx_Data_Q1_In_unsigned <= unsigned(Tx_Data_Q1_In);

  iInTx_sig <= signed(Tx_Data_Q1_In_unsigned);

  Rx_Data_I1_In_unsigned <= unsigned(Rx_Data_I1_In);

  FromRadioR_sig <= signed(Rx_Data_I1_In_unsigned);

  Rx_Data_Q1_In_unsigned <= unsigned(Rx_Data_Q1_In);

  FromRadioI_sig <= signed(Rx_Data_Q1_In_unsigned);

  FromIPR_sig_signed <= signed(FromIPR_sig);

  Rx_Data_I1_Out_tmp <= unsigned(FromIPR_sig_signed);

  Rx_Data_I1_Out <= std_logic_vector(Rx_Data_I1_Out_tmp);

  ToRadioR_sig_signed <= signed(ToRadioR_sig);

  Tx_Data_I1_Out_tmp <= unsigned(ToRadioR_sig_signed);

  Tx_Data_I1_Out <= std_logic_vector(Tx_Data_I1_Out_tmp);

  FromIPI_sig_signed <= signed(FromIPI_sig);

  Rx_Data_Q1_Out_tmp <= unsigned(FromIPI_sig_signed);

  Rx_Data_Q1_Out <= std_logic_vector(Rx_Data_Q1_Out_tmp);

  ToRadioI_sig_signed <= signed(ToRadioI_sig);

  Tx_Data_Q1_Out_tmp <= unsigned(ToRadioI_sig_signed);

  Tx_Data_Q1_Out <= std_logic_vector(Tx_Data_Q1_Out_tmp);

  RXHDLDUT_Data_Valid_Out <= FromIPvalid_sig;

  TXHDLDUT_Data_Valid_Out <= ToRadioValid_sig;

  AXI4_Lite_BRESP <= AXI4_Lite_BRESP_tmp;

  AXI4_Lite_RDATA <= AXI4_Lite_RDATA_tmp;

  AXI4_Lite_RRESP <= AXI4_Lite_RRESP_tmp;

END rtl;

