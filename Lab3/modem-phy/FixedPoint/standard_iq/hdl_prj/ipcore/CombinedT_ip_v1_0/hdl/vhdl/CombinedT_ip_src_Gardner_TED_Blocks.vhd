-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\combinedTxRx_StandardIQ\CombinedT_ip_src_Gardner_TED_Blocks.vhd
-- Created: 2018-02-01 11:49:52
-- 
-- Generated by MATLAB 9.3 and HDL Coder 3.11
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: CombinedT_ip_src_Gardner_TED_Blocks
-- Source Path: combinedTxRx_StandardIQ/Combined TX and RX/Receiver HDL/Frame Recover/Gardner Timing Recovery/Gardner 
-- TED Block
-- Hierarchy Level: 4
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.CombinedT_ip_src_Combined_TX_and_RX_pkg.ALL;

ENTITY CombinedT_ip_src_Gardner_TED_Blocks IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        data_re                           :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En10
        data_im                           :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En10
        strobe                            :   IN    std_logic;
        Enable_out2                       :   IN    std_logic;
        e                                 :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
        );
END CombinedT_ip_src_Gardner_TED_Blocks;


ARCHITECTURE rtl OF CombinedT_ip_src_Gardner_TED_Blocks IS

  -- Component Declarations
  COMPONENT CombinedT_ip_src_Real_Error
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          data                            :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En10
          strobe_sum                      :   IN    std_logic_vector(7 DOWNTO 0);  -- uint8
          Enable_out2                     :   IN    std_logic;
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En12
          );
  END COMPONENT;

  COMPONENT CombinedT_ip_src_Imag_Error
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          data                            :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En10
          strobe_sum                      :   IN    std_logic_vector(7 DOWNTO 0);  -- uint8
          Enable_out2                     :   IN    std_logic;
          Out1                            :   OUT   std_logic_vector(31 DOWNTO 0)  -- sfix32_En20
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : CombinedT_ip_src_Real_Error
    USE ENTITY work.CombinedT_ip_src_Real_Error(rtl);

  FOR ALL : CombinedT_ip_src_Imag_Error
    USE ENTITY work.CombinedT_ip_src_Imag_Error(rtl);

  -- Constants
  CONSTANT nc                             : vector_of_unsigned8(0 TO 4) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#01#, 8), to_unsigned(16#02#, 8), to_unsigned(16#02#, 8),
     to_unsigned(16#02#, 8));  -- ufix8 [5]

  -- Signals
  SIGNAL enb_gated                        : std_logic;
  SIGNAL strobe_tap1                      : std_logic;
  SIGNAL enb_gated_1                      : std_logic;
  SIGNAL strobe_tap2                      : std_logic;
  SIGNAL enb_gated_2                      : std_logic;
  SIGNAL strobe_tap3                      : std_logic;
  SIGNAL Strobe_Buffer1_out1              : std_logic_vector(0 TO 3);  -- boolean [4]
  SIGNAL Sum_of_Elements1_add_cast        : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL Sum_of_Elements1_add_cast_1      : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL Sum_of_Elements1_add_temp        : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL Sum_of_Elements1_add_cast_2      : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL Sum_of_Elements1_add_temp_1      : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL Sum_of_Elements1_add_cast_3      : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL Sum_of_Elements1_add_temp_2      : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL Sum_of_Elements1_out1            : signed(7 DOWNTO 0);  -- int8
  SIGNAL Check_Only_Strobe_Condition_out1 : std_logic;
  SIGNAL Logical_Operator_out1            : std_logic;
  SIGNAL Map_0_1_2_3_4_to_0_1_2_2_2_out1  : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Constant_out1                    : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL Real_Error_out1                  : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Real_Error_out1_signed           : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL Imag_Error_out1                  : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Imag_Error_out1_signed           : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL Add_add_cast                     : signed(32 DOWNTO 0);  -- sfix33_En20
  SIGNAL Add_add_cast_1                   : signed(32 DOWNTO 0);  -- sfix33_En20
  SIGNAL Add_add_temp                     : signed(32 DOWNTO 0);  -- sfix33_En20
  SIGNAL Add_out1                         : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL Switch_out1                      : signed(15 DOWNTO 0);  -- sfix16_En15

BEGIN
  -- An input of 4 should not 
  -- happen unless the input is all zeros
  -- 
  -- This is for QPSK and 4 SamplesPerSymbol ONLY

  u_Real_Error : CombinedT_ip_src_Real_Error
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              data => data_re,  -- sfix16_En10
              strobe_sum => std_logic_vector(Map_0_1_2_3_4_to_0_1_2_2_2_out1),  -- uint8
              Enable_out2 => Enable_out2,
              Out1 => Real_Error_out1  -- sfix16_En12
              );

  u_Imag_Error : CombinedT_ip_src_Imag_Error
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              data => data_im,  -- sfix16_En10
              strobe_sum => std_logic_vector(Map_0_1_2_3_4_to_0_1_2_2_2_out1),  -- uint8
              Enable_out2 => Enable_out2,
              Out1 => Imag_Error_out1  -- sfix32_En20
              );

  enb_gated <= Enable_out2 AND enb;

  Strobe_Buffer1_tap1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      strobe_tap1 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_gated = '1' THEN
        strobe_tap1 <= strobe;
      END IF;
    END IF;
  END PROCESS Strobe_Buffer1_tap1_process;


  enb_gated_1 <= Enable_out2 AND enb;

  Strobe_Buffer1_tap2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      strobe_tap2 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_gated_1 = '1' THEN
        strobe_tap2 <= strobe_tap1;
      END IF;
    END IF;
  END PROCESS Strobe_Buffer1_tap2_process;


  enb_gated_2 <= Enable_out2 AND enb;

  Strobe_Buffer1_tap3_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      strobe_tap3 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_gated_2 = '1' THEN
        strobe_tap3 <= strobe_tap2;
      END IF;
    END IF;
  END PROCESS Strobe_Buffer1_tap3_process;


  Strobe_Buffer1_out1(0) <= strobe_tap3;
  Strobe_Buffer1_out1(1) <= strobe_tap2;
  Strobe_Buffer1_out1(2) <= strobe_tap1;
  Strobe_Buffer1_out1(3) <= strobe;

  Sum_of_Elements1_add_cast <= '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & Strobe_Buffer1_out1(0);
  Sum_of_Elements1_add_cast_1 <= '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & Strobe_Buffer1_out1(1);
  Sum_of_Elements1_add_temp <= Sum_of_Elements1_add_cast + Sum_of_Elements1_add_cast_1;
  Sum_of_Elements1_add_cast_2 <= '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & Strobe_Buffer1_out1(2);
  Sum_of_Elements1_add_temp_1 <= Sum_of_Elements1_add_temp + Sum_of_Elements1_add_cast_2;
  Sum_of_Elements1_add_cast_3 <= '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & Strobe_Buffer1_out1(3);
  Sum_of_Elements1_add_temp_2 <= Sum_of_Elements1_add_temp_1 + Sum_of_Elements1_add_cast_3;
  Sum_of_Elements1_out1 <= signed(Sum_of_Elements1_add_temp_2(7 DOWNTO 0));

  
  Check_Only_Strobe_Condition_out1 <= '1' WHEN Sum_of_Elements1_out1 = to_signed(16#01#, 8) ELSE
      '0';

  Logical_Operator_out1 <= Check_Only_Strobe_Condition_out1 AND strobe;

  Map_0_1_2_3_4_to_0_1_2_2_2_out1 <= nc(to_integer(Sum_of_Elements1_out1));

  Constant_out1 <= to_signed(16#0000#, 16);

  Real_Error_out1_signed <= signed(Real_Error_out1);

  Imag_Error_out1_signed <= signed(Imag_Error_out1);

  Add_add_cast <= resize(Real_Error_out1_signed & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 33);
  Add_add_cast_1 <= resize(Imag_Error_out1_signed, 33);
  Add_add_temp <= Add_add_cast + Add_add_cast_1;
  Add_out1 <= Add_add_temp(20 DOWNTO 5);

  
  Switch_out1 <= Constant_out1 WHEN Logical_Operator_out1 = '0' ELSE
      Add_out1;

  e <= std_logic_vector(Switch_out1);


END rtl;

