-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\combinedTxRx_StandardIQ\CombinedT_ip_src_Discrete_FIR_Filter_HDL_Optimized.vhd
-- Created: 2018-02-01 11:49:52
-- 
-- Generated by MATLAB 9.3 and HDL Coder 3.11
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: CombinedT_ip_src_Discrete_FIR_Filter_HDL_Optimized
-- Source Path: combinedTxRx_StandardIQ/Combined TX and RX/Receiver HDL/Frame Recover/Barker Locate/HDL Opt Complex 
-- FIR/Discrete FIR Filter HDL Optimize
-- Hierarchy Level: 5
-- 
-- Discrete FIR Filter HDL Optimized
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.CombinedT_ip_src_Combined_TX_and_RX_pkg.ALL;

ENTITY CombinedT_ip_src_Discrete_FIR_Filter_HDL_Optimized IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        dataIn_re                         :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
        dataIn_im                         :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
        validIn                           :   IN    std_logic;
        dataOut_re                        :   OUT   std_logic_vector(14 DOWNTO 0);  -- sfix15
        dataOut_im                        :   OUT   std_logic_vector(14 DOWNTO 0);  -- sfix15
        validOut                          :   OUT   std_logic
        );
END CombinedT_ip_src_Discrete_FIR_Filter_HDL_Optimized;


ARCHITECTURE rtl OF CombinedT_ip_src_Discrete_FIR_Filter_HDL_Optimized IS

  -- Signals
  SIGNAL validPipe0_1                     : std_logic;
  SIGNAL validPipe1_1                     : std_logic;
  SIGNAL validPipe2_1                     : std_logic;
  SIGNAL validPipe3_1                     : std_logic;
  SIGNAL validPipe4_1                     : std_logic;
  SIGNAL validPipe5_1                     : std_logic;
  SIGNAL validPipe6_1                     : std_logic;
  SIGNAL validPipe7_1                     : std_logic;
  SIGNAL validPipe8_1                     : std_logic;
  SIGNAL validPipe9_1                     : std_logic;
  SIGNAL validPipe10_1                    : std_logic;
  SIGNAL validPipe11_1                    : std_logic;
  SIGNAL validPipe12_1                    : std_logic;
  SIGNAL validPipe13_1                    : std_logic;
  SIGNAL validPipe14_1                    : std_logic;
  SIGNAL validPipe15_1                    : std_logic;
  SIGNAL validPipe16_1                    : std_logic;
  SIGNAL validPipe17_1                    : std_logic;
  SIGNAL validPipe18_1                    : std_logic;
  SIGNAL validPipe19_1                    : std_logic;
  SIGNAL validPipe20_1                    : std_logic;
  SIGNAL validPipe21_1                    : std_logic;
  SIGNAL validPipe22_1                    : std_logic;
  SIGNAL validPipe23_1                    : std_logic;
  SIGNAL validPipe24_1                    : std_logic;
  SIGNAL validPipe25_1                    : std_logic;
  SIGNAL validPipe26_1                    : std_logic;
  SIGNAL finalSumValidPipe_reg            : std_logic_vector(0 TO 3);  -- ufix1 [4]
  SIGNAL finalSumValid                    : std_logic;
  SIGNAL dataIn_re_signed                 : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataIn_im_signed                 : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataPipe0_re                     : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataPipe0_im                     : signed(15 DOWNTO 0);  -- int16
  SIGNAL multInPipe0_re                   : signed(15 DOWNTO 0);  -- int16
  SIGNAL multInPipe0_im                   : signed(15 DOWNTO 0);  -- int16
  SIGNAL coeff0                           : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL product0_re                      : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL product0_im                      : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL productPipe0_re                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL productPipe0_im                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL sum0_re                          : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum0_im                          : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum0_re_1                        : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum0_im_1                        : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL dataDelay0_re                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataDelay0_im                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataPipe1_re                     : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataPipe1_im                     : signed(15 DOWNTO 0);  -- int16
  SIGNAL multInPipe1_re                   : signed(15 DOWNTO 0);  -- int16
  SIGNAL multInPipe1_im                   : signed(15 DOWNTO 0);  -- int16
  SIGNAL coeff1                           : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL mulOutput_re                     : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_im                     : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_re_1                   : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_im_1                   : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL alpha_add_add_cast               : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_1             : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_2             : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_3             : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum1_re                          : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum1_im                          : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum1_re_1                        : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum1_im_1                        : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum1_re_2                        : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum1_im_2                        : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL dataDelay1_re                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataDelay1_im                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataPipe2_re                     : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataPipe2_im                     : signed(15 DOWNTO 0);  -- int16
  SIGNAL multInPipe2_re                   : signed(15 DOWNTO 0);  -- int16
  SIGNAL multInPipe2_im                   : signed(15 DOWNTO 0);  -- int16
  SIGNAL coeff2                           : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL mulOutput_re_2                   : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_im_2                   : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_re_3                   : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_im_3                   : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL alpha_add_add_cast_4             : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_5             : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_6             : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_7             : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum2_re                          : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum2_im                          : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum2_re_1                        : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum2_im_1                        : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum2_re_2                        : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum2_im_2                        : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL dataDelay2_re                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataDelay2_im                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataPipe3_re                     : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataPipe3_im                     : signed(15 DOWNTO 0);  -- int16
  SIGNAL multInPipe3_re                   : signed(15 DOWNTO 0);  -- int16
  SIGNAL multInPipe3_im                   : signed(15 DOWNTO 0);  -- int16
  SIGNAL coeff3                           : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL mulOutput_re_4                   : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_im_4                   : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_re_5                   : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_im_5                   : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL alpha_add_add_cast_8             : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_9             : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_10            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_11            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum3_re                          : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum3_im                          : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum3_re_1                        : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum3_im_1                        : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum3_re_2                        : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum3_im_2                        : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL dataDelay3_re                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataDelay3_im                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataPipe4_re                     : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataPipe4_im                     : signed(15 DOWNTO 0);  -- int16
  SIGNAL multInPipe4_re                   : signed(15 DOWNTO 0);  -- int16
  SIGNAL multInPipe4_im                   : signed(15 DOWNTO 0);  -- int16
  SIGNAL coeff4                           : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL mulOutput_re_6                   : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_im_6                   : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_re_7                   : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_im_7                   : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL alpha_add_add_cast_12            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_13            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_14            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_15            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum4_re                          : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum4_im                          : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum4_re_1                        : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum4_im_1                        : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum4_re_2                        : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum4_im_2                        : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL dataDelay4_re                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataDelay4_im                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataPipe5_re                     : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataPipe5_im                     : signed(15 DOWNTO 0);  -- int16
  SIGNAL multInPipe5_re                   : signed(15 DOWNTO 0);  -- int16
  SIGNAL multInPipe5_im                   : signed(15 DOWNTO 0);  -- int16
  SIGNAL coeff5                           : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL mulOutput_re_8                   : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_im_8                   : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_re_9                   : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_im_9                   : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL alpha_add_add_cast_16            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_17            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_18            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_19            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum5_re                          : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum5_im                          : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum5_re_1                        : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum5_im_1                        : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum5_re_2                        : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum5_im_2                        : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL dataDelay5_re                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataDelay5_im                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataPipe6_re                     : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataPipe6_im                     : signed(15 DOWNTO 0);  -- int16
  SIGNAL multInPipe6_re                   : signed(15 DOWNTO 0);  -- int16
  SIGNAL multInPipe6_im                   : signed(15 DOWNTO 0);  -- int16
  SIGNAL coeff6                           : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL mulOutput_re_10                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_im_10                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_re_11                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_im_11                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL alpha_add_add_cast_20            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_21            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_22            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_23            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum6_re                          : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum6_im                          : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum6_re_1                        : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum6_im_1                        : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum6_re_2                        : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum6_im_2                        : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL dataDelay6_re                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataDelay6_im                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataPipe7_re                     : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataPipe7_im                     : signed(15 DOWNTO 0);  -- int16
  SIGNAL multInPipe7_re                   : signed(15 DOWNTO 0);  -- int16
  SIGNAL multInPipe7_im                   : signed(15 DOWNTO 0);  -- int16
  SIGNAL coeff7                           : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL mulOutput_re_12                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_im_12                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_re_13                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_im_13                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL alpha_add_add_cast_24            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_25            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_26            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_27            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum7_re                          : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum7_im                          : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum7_re_1                        : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum7_im_1                        : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum7_re_2                        : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum7_im_2                        : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL dataDelay7_re                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataDelay7_im                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataPipe8_re                     : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataPipe8_im                     : signed(15 DOWNTO 0);  -- int16
  SIGNAL multInPipe8_re                   : signed(15 DOWNTO 0);  -- int16
  SIGNAL multInPipe8_im                   : signed(15 DOWNTO 0);  -- int16
  SIGNAL coeff8                           : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL mulOutput_re_14                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_im_14                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_re_15                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_im_15                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL alpha_add_add_cast_28            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_29            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_30            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_31            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum8_re                          : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum8_im                          : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum8_re_1                        : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum8_im_1                        : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum8_re_2                        : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum8_im_2                        : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL dataDelay8_re                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataDelay8_im                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataPipe9_re                     : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataPipe9_im                     : signed(15 DOWNTO 0);  -- int16
  SIGNAL multInPipe9_re                   : signed(15 DOWNTO 0);  -- int16
  SIGNAL multInPipe9_im                   : signed(15 DOWNTO 0);  -- int16
  SIGNAL coeff9                           : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL mulOutput_re_16                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_im_16                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_re_17                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_im_17                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL alpha_add_add_cast_32            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_33            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_34            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_35            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum9_re                          : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum9_im                          : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum9_re_1                        : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum9_im_1                        : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum9_re_2                        : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum9_im_2                        : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL dataDelay9_re                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataDelay9_im                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataPipe10_re                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataPipe10_im                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL multInPipe10_re                  : signed(15 DOWNTO 0);  -- int16
  SIGNAL multInPipe10_im                  : signed(15 DOWNTO 0);  -- int16
  SIGNAL coeff10                          : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL mulOutput_re_18                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_im_18                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_re_19                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_im_19                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL alpha_add_add_cast_36            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_37            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_38            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_39            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum10_re                         : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum10_im                         : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum10_re_1                       : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum10_im_1                       : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum10_re_2                       : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum10_im_2                       : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL dataDelay10_re                   : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataDelay10_im                   : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataPipe11_re                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataPipe11_im                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL multInPipe11_re                  : signed(15 DOWNTO 0);  -- int16
  SIGNAL multInPipe11_im                  : signed(15 DOWNTO 0);  -- int16
  SIGNAL coeff11                          : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL mulOutput_re_20                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_im_20                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_re_21                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_im_21                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL alpha_add_add_cast_40            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_41            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_42            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_43            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum11_re                         : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum11_im                         : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum11_re_1                       : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum11_im_1                       : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum11_re_2                       : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum11_im_2                       : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL dataDelay11_re                   : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataDelay11_im                   : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataPipe12_re                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataPipe12_im                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL multInPipe12_re                  : signed(15 DOWNTO 0);  -- int16
  SIGNAL multInPipe12_im                  : signed(15 DOWNTO 0);  -- int16
  SIGNAL coeff12                          : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL mulOutput_re_22                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_im_22                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_re_23                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_im_23                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL alpha_add_add_cast_44            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_45            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_46            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_47            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum12_re                         : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum12_im                         : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum12_re_1                       : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum12_im_1                       : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum12_re_2                       : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum12_im_2                       : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL dataDelay12_re                   : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataDelay12_im                   : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataPipe13_re                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataPipe13_im                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL multInPipe13_re                  : signed(15 DOWNTO 0);  -- int16
  SIGNAL multInPipe13_im                  : signed(15 DOWNTO 0);  -- int16
  SIGNAL coeff13                          : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL mulOutput_re_24                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_im_24                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_re_25                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_im_25                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL alpha_add_add_cast_48            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_49            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_50            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_51            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum13_re                         : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum13_im                         : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum13_re_1                       : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum13_im_1                       : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum13_re_2                       : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum13_im_2                       : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL dataDelay13_re                   : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataDelay13_im                   : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataPipe14_re                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataPipe14_im                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL multInPipe14_re                  : signed(15 DOWNTO 0);  -- int16
  SIGNAL multInPipe14_im                  : signed(15 DOWNTO 0);  -- int16
  SIGNAL coeff14                          : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL mulOutput_re_26                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_im_26                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_re_27                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_im_27                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL alpha_add_add_cast_52            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_53            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_54            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_55            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum14_re                         : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum14_im                         : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum14_re_1                       : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum14_im_1                       : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum14_re_2                       : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum14_im_2                       : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL dataDelay14_re                   : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataDelay14_im                   : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataPipe15_re                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataPipe15_im                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL multInPipe15_re                  : signed(15 DOWNTO 0);  -- int16
  SIGNAL multInPipe15_im                  : signed(15 DOWNTO 0);  -- int16
  SIGNAL coeff15                          : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL mulOutput_re_28                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_im_28                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_re_29                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_im_29                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL alpha_add_add_cast_56            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_57            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_58            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_59            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum15_re                         : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum15_im                         : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum15_re_1                       : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum15_im_1                       : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum15_re_2                       : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum15_im_2                       : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL dataDelay15_re                   : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataDelay15_im                   : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataPipe16_re                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataPipe16_im                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL multInPipe16_re                  : signed(15 DOWNTO 0);  -- int16
  SIGNAL multInPipe16_im                  : signed(15 DOWNTO 0);  -- int16
  SIGNAL coeff16                          : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL mulOutput_re_30                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_im_30                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_re_31                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_im_31                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL alpha_add_add_cast_60            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_61            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_62            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_63            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum16_re                         : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum16_im                         : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum16_re_1                       : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum16_im_1                       : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum16_re_2                       : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum16_im_2                       : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL dataDelay16_re                   : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataDelay16_im                   : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataPipe17_re                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataPipe17_im                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL multInPipe17_re                  : signed(15 DOWNTO 0);  -- int16
  SIGNAL multInPipe17_im                  : signed(15 DOWNTO 0);  -- int16
  SIGNAL coeff17                          : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL mulOutput_re_32                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_im_32                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_re_33                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_im_33                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL alpha_add_add_cast_64            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_65            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_66            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_67            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum17_re                         : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum17_im                         : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum17_re_1                       : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum17_im_1                       : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum17_re_2                       : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum17_im_2                       : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL dataDelay17_re                   : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataDelay17_im                   : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataPipe18_re                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataPipe18_im                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL multInPipe18_re                  : signed(15 DOWNTO 0);  -- int16
  SIGNAL multInPipe18_im                  : signed(15 DOWNTO 0);  -- int16
  SIGNAL coeff18                          : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL mulOutput_re_34                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_im_34                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_re_35                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_im_35                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL alpha_add_add_cast_68            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_69            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_70            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_71            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum18_re                         : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum18_im                         : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum18_re_1                       : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum18_im_1                       : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum18_re_2                       : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum18_im_2                       : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL dataDelay18_re                   : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataDelay18_im                   : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataPipe19_re                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataPipe19_im                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL multInPipe19_re                  : signed(15 DOWNTO 0);  -- int16
  SIGNAL multInPipe19_im                  : signed(15 DOWNTO 0);  -- int16
  SIGNAL coeff19                          : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL mulOutput_re_36                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_im_36                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_re_37                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_im_37                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL alpha_add_add_cast_72            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_73            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_74            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_75            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum19_re                         : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum19_im                         : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum19_re_1                       : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum19_im_1                       : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum19_re_2                       : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum19_im_2                       : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL dataDelay19_re                   : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataDelay19_im                   : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataPipe20_re                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataPipe20_im                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL multInPipe20_re                  : signed(15 DOWNTO 0);  -- int16
  SIGNAL multInPipe20_im                  : signed(15 DOWNTO 0);  -- int16
  SIGNAL coeff20                          : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL mulOutput_re_38                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_im_38                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_re_39                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_im_39                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL alpha_add_add_cast_76            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_77            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_78            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_79            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum20_re                         : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum20_im                         : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum20_re_1                       : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum20_im_1                       : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum20_re_2                       : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum20_im_2                       : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL dataDelay20_re                   : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataDelay20_im                   : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataPipe21_re                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataPipe21_im                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL multInPipe21_re                  : signed(15 DOWNTO 0);  -- int16
  SIGNAL multInPipe21_im                  : signed(15 DOWNTO 0);  -- int16
  SIGNAL coeff21                          : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL mulOutput_re_40                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_im_40                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_re_41                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_im_41                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL alpha_add_add_cast_80            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_81            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_82            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_83            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum21_re                         : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum21_im                         : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum21_re_1                       : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum21_im_1                       : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum21_re_2                       : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum21_im_2                       : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL dataDelay21_re                   : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataDelay21_im                   : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataPipe22_re                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataPipe22_im                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL multInPipe22_re                  : signed(15 DOWNTO 0);  -- int16
  SIGNAL multInPipe22_im                  : signed(15 DOWNTO 0);  -- int16
  SIGNAL coeff22                          : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL mulOutput_re_42                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_im_42                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_re_43                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_im_43                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL alpha_add_add_cast_84            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_85            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_86            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_87            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum22_re                         : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum22_im                         : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum22_re_1                       : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum22_im_1                       : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum22_re_2                       : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum22_im_2                       : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL dataDelay22_re                   : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataDelay22_im                   : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataPipe23_re                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataPipe23_im                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL multInPipe23_re                  : signed(15 DOWNTO 0);  -- int16
  SIGNAL multInPipe23_im                  : signed(15 DOWNTO 0);  -- int16
  SIGNAL coeff23                          : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL mulOutput_re_44                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_im_44                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_re_45                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_im_45                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL alpha_add_add_cast_88            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_89            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_90            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_91            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum23_re                         : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum23_im                         : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum23_re_1                       : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum23_im_1                       : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum23_re_2                       : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum23_im_2                       : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL dataDelay23_re                   : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataDelay23_im                   : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataPipe24_re                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataPipe24_im                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL multInPipe24_re                  : signed(15 DOWNTO 0);  -- int16
  SIGNAL multInPipe24_im                  : signed(15 DOWNTO 0);  -- int16
  SIGNAL coeff24                          : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL mulOutput_re_46                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_im_46                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_re_47                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_im_47                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL alpha_add_add_cast_92            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_93            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_94            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_95            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum24_re                         : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum24_im                         : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum24_re_1                       : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum24_im_1                       : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum24_re_2                       : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum24_im_2                       : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL dataDelay24_re                   : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataDelay24_im                   : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataPipe25_re                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataPipe25_im                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL multInPipe25_re                  : signed(15 DOWNTO 0);  -- int16
  SIGNAL multInPipe25_im                  : signed(15 DOWNTO 0);  -- int16
  SIGNAL coeff25                          : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL mulOutput_re_48                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_im_48                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_re_49                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_im_49                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL alpha_add_add_cast_96            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_97            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_98            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_99            : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum25_re                         : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum25_im                         : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum25_re_1                       : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum25_im_1                       : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum25_re_2                       : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum25_im_2                       : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL dataDelay25_re                   : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataDelay25_im                   : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataPipe26_re                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataPipe26_im                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL multInPipe26_re                  : signed(15 DOWNTO 0);  -- int16
  SIGNAL multInPipe26_im                  : signed(15 DOWNTO 0);  -- int16
  SIGNAL coeff26                          : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL mulOutput_re_50                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_im_50                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_re_51                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_im_51                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL alpha_add_add_cast_100           : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_101           : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_102           : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_103           : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum26_re                         : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum26_im                         : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum26_re_1                       : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum26_im_1                       : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum26_re_2                       : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum26_im_2                       : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL dataDelay26_re                   : signed(15 DOWNTO 0);  -- int16
  SIGNAL dataDelay26_im                   : signed(15 DOWNTO 0);  -- int16
  SIGNAL multInPipe27_reg_re              : vector_of_signed16(0 TO 1);  -- sfix16 [2]
  SIGNAL multInPipe27_reg_im              : vector_of_signed16(0 TO 1);  -- sfix16 [2]
  SIGNAL multInPipe27_re                  : signed(15 DOWNTO 0);  -- int16
  SIGNAL multInPipe27_im                  : signed(15 DOWNTO 0);  -- int16
  SIGNAL coeff27                          : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL mulOutput_re_52                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_im_52                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_re_53                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mulOutput_im_53                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL alpha_add_add_cast_104           : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_105           : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_106           : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL alpha_add_add_cast_107           : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum27_re                         : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum27_im                         : signed(36 DOWNTO 0);  -- sfix37_En15
  SIGNAL sum27_re_1                       : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL sum27_im_1                       : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL finalSumPipe_re                  : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL finalSumPipe_im                  : signed(35 DOWNTO 0);  -- sfix36_En15
  SIGNAL converterOut_re                  : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL converterOut_im                  : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL dataOut_re_tmp                   : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL dataOut_im_tmp                   : signed(14 DOWNTO 0);  -- sfix15

  ATTRIBUTE use_dsp48 : string;

  ATTRIBUTE use_dsp48 OF mulOutput_re : SIGNAL IS "yes";
  ATTRIBUTE use_dsp48 OF mulOutput_im : SIGNAL IS "yes";
  ATTRIBUTE use_dsp48 OF mulOutput_re_2 : SIGNAL IS "yes";
  ATTRIBUTE use_dsp48 OF mulOutput_im_2 : SIGNAL IS "yes";
  ATTRIBUTE use_dsp48 OF mulOutput_re_4 : SIGNAL IS "yes";
  ATTRIBUTE use_dsp48 OF mulOutput_im_4 : SIGNAL IS "yes";
  ATTRIBUTE use_dsp48 OF mulOutput_re_6 : SIGNAL IS "yes";
  ATTRIBUTE use_dsp48 OF mulOutput_im_6 : SIGNAL IS "yes";
  ATTRIBUTE use_dsp48 OF mulOutput_re_8 : SIGNAL IS "yes";
  ATTRIBUTE use_dsp48 OF mulOutput_im_8 : SIGNAL IS "yes";
  ATTRIBUTE use_dsp48 OF mulOutput_re_10 : SIGNAL IS "yes";
  ATTRIBUTE use_dsp48 OF mulOutput_im_10 : SIGNAL IS "yes";
  ATTRIBUTE use_dsp48 OF mulOutput_re_12 : SIGNAL IS "yes";
  ATTRIBUTE use_dsp48 OF mulOutput_im_12 : SIGNAL IS "yes";
  ATTRIBUTE use_dsp48 OF mulOutput_re_14 : SIGNAL IS "yes";
  ATTRIBUTE use_dsp48 OF mulOutput_im_14 : SIGNAL IS "yes";
  ATTRIBUTE use_dsp48 OF mulOutput_re_16 : SIGNAL IS "yes";
  ATTRIBUTE use_dsp48 OF mulOutput_im_16 : SIGNAL IS "yes";
  ATTRIBUTE use_dsp48 OF mulOutput_re_18 : SIGNAL IS "yes";
  ATTRIBUTE use_dsp48 OF mulOutput_im_18 : SIGNAL IS "yes";
  ATTRIBUTE use_dsp48 OF mulOutput_re_20 : SIGNAL IS "yes";
  ATTRIBUTE use_dsp48 OF mulOutput_im_20 : SIGNAL IS "yes";
  ATTRIBUTE use_dsp48 OF mulOutput_re_22 : SIGNAL IS "yes";
  ATTRIBUTE use_dsp48 OF mulOutput_im_22 : SIGNAL IS "yes";
  ATTRIBUTE use_dsp48 OF mulOutput_re_24 : SIGNAL IS "yes";
  ATTRIBUTE use_dsp48 OF mulOutput_im_24 : SIGNAL IS "yes";
  ATTRIBUTE use_dsp48 OF mulOutput_re_26 : SIGNAL IS "yes";
  ATTRIBUTE use_dsp48 OF mulOutput_im_26 : SIGNAL IS "yes";
  ATTRIBUTE use_dsp48 OF mulOutput_re_28 : SIGNAL IS "yes";
  ATTRIBUTE use_dsp48 OF mulOutput_im_28 : SIGNAL IS "yes";
  ATTRIBUTE use_dsp48 OF mulOutput_re_30 : SIGNAL IS "yes";
  ATTRIBUTE use_dsp48 OF mulOutput_im_30 : SIGNAL IS "yes";
  ATTRIBUTE use_dsp48 OF mulOutput_re_32 : SIGNAL IS "yes";
  ATTRIBUTE use_dsp48 OF mulOutput_im_32 : SIGNAL IS "yes";
  ATTRIBUTE use_dsp48 OF mulOutput_re_34 : SIGNAL IS "yes";
  ATTRIBUTE use_dsp48 OF mulOutput_im_34 : SIGNAL IS "yes";
  ATTRIBUTE use_dsp48 OF mulOutput_re_36 : SIGNAL IS "yes";
  ATTRIBUTE use_dsp48 OF mulOutput_im_36 : SIGNAL IS "yes";
  ATTRIBUTE use_dsp48 OF mulOutput_re_38 : SIGNAL IS "yes";
  ATTRIBUTE use_dsp48 OF mulOutput_im_38 : SIGNAL IS "yes";
  ATTRIBUTE use_dsp48 OF mulOutput_re_40 : SIGNAL IS "yes";
  ATTRIBUTE use_dsp48 OF mulOutput_im_40 : SIGNAL IS "yes";
  ATTRIBUTE use_dsp48 OF mulOutput_re_42 : SIGNAL IS "yes";
  ATTRIBUTE use_dsp48 OF mulOutput_im_42 : SIGNAL IS "yes";
  ATTRIBUTE use_dsp48 OF mulOutput_re_44 : SIGNAL IS "yes";
  ATTRIBUTE use_dsp48 OF mulOutput_im_44 : SIGNAL IS "yes";
  ATTRIBUTE use_dsp48 OF mulOutput_re_46 : SIGNAL IS "yes";
  ATTRIBUTE use_dsp48 OF mulOutput_im_46 : SIGNAL IS "yes";
  ATTRIBUTE use_dsp48 OF mulOutput_re_48 : SIGNAL IS "yes";
  ATTRIBUTE use_dsp48 OF mulOutput_im_48 : SIGNAL IS "yes";
  ATTRIBUTE use_dsp48 OF mulOutput_re_50 : SIGNAL IS "yes";
  ATTRIBUTE use_dsp48 OF mulOutput_im_50 : SIGNAL IS "yes";
  ATTRIBUTE use_dsp48 OF mulOutput_re_52 : SIGNAL IS "yes";
  ATTRIBUTE use_dsp48 OF mulOutput_im_52 : SIGNAL IS "yes";

BEGIN
  validPipe0_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      validPipe0_1 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        validPipe0_1 <= validIn;
      END IF;
    END IF;
  END PROCESS validPipe0_process;


  validPipe1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      validPipe1_1 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        validPipe1_1 <= validPipe0_1;
      END IF;
    END IF;
  END PROCESS validPipe1_process;


  validPipe2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      validPipe2_1 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        validPipe2_1 <= validPipe1_1;
      END IF;
    END IF;
  END PROCESS validPipe2_process;


  validPipe3_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      validPipe3_1 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        validPipe3_1 <= validPipe2_1;
      END IF;
    END IF;
  END PROCESS validPipe3_process;


  validPipe4_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      validPipe4_1 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        validPipe4_1 <= validPipe3_1;
      END IF;
    END IF;
  END PROCESS validPipe4_process;


  validPipe5_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      validPipe5_1 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        validPipe5_1 <= validPipe4_1;
      END IF;
    END IF;
  END PROCESS validPipe5_process;


  validPipe6_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      validPipe6_1 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        validPipe6_1 <= validPipe5_1;
      END IF;
    END IF;
  END PROCESS validPipe6_process;


  validPipe7_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      validPipe7_1 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        validPipe7_1 <= validPipe6_1;
      END IF;
    END IF;
  END PROCESS validPipe7_process;


  validPipe8_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      validPipe8_1 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        validPipe8_1 <= validPipe7_1;
      END IF;
    END IF;
  END PROCESS validPipe8_process;


  validPipe9_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      validPipe9_1 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        validPipe9_1 <= validPipe8_1;
      END IF;
    END IF;
  END PROCESS validPipe9_process;


  validPipe10_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      validPipe10_1 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        validPipe10_1 <= validPipe9_1;
      END IF;
    END IF;
  END PROCESS validPipe10_process;


  validPipe11_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      validPipe11_1 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        validPipe11_1 <= validPipe10_1;
      END IF;
    END IF;
  END PROCESS validPipe11_process;


  validPipe12_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      validPipe12_1 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        validPipe12_1 <= validPipe11_1;
      END IF;
    END IF;
  END PROCESS validPipe12_process;


  validPipe13_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      validPipe13_1 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        validPipe13_1 <= validPipe12_1;
      END IF;
    END IF;
  END PROCESS validPipe13_process;


  validPipe14_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      validPipe14_1 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        validPipe14_1 <= validPipe13_1;
      END IF;
    END IF;
  END PROCESS validPipe14_process;


  validPipe15_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      validPipe15_1 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        validPipe15_1 <= validPipe14_1;
      END IF;
    END IF;
  END PROCESS validPipe15_process;


  validPipe16_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      validPipe16_1 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        validPipe16_1 <= validPipe15_1;
      END IF;
    END IF;
  END PROCESS validPipe16_process;


  validPipe17_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      validPipe17_1 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        validPipe17_1 <= validPipe16_1;
      END IF;
    END IF;
  END PROCESS validPipe17_process;


  validPipe18_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      validPipe18_1 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        validPipe18_1 <= validPipe17_1;
      END IF;
    END IF;
  END PROCESS validPipe18_process;


  validPipe19_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      validPipe19_1 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        validPipe19_1 <= validPipe18_1;
      END IF;
    END IF;
  END PROCESS validPipe19_process;


  validPipe20_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      validPipe20_1 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        validPipe20_1 <= validPipe19_1;
      END IF;
    END IF;
  END PROCESS validPipe20_process;


  validPipe21_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      validPipe21_1 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        validPipe21_1 <= validPipe20_1;
      END IF;
    END IF;
  END PROCESS validPipe21_process;


  validPipe22_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      validPipe22_1 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        validPipe22_1 <= validPipe21_1;
      END IF;
    END IF;
  END PROCESS validPipe22_process;


  validPipe23_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      validPipe23_1 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        validPipe23_1 <= validPipe22_1;
      END IF;
    END IF;
  END PROCESS validPipe23_process;


  validPipe24_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      validPipe24_1 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        validPipe24_1 <= validPipe23_1;
      END IF;
    END IF;
  END PROCESS validPipe24_process;


  validPipe25_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      validPipe25_1 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        validPipe25_1 <= validPipe24_1;
      END IF;
    END IF;
  END PROCESS validPipe25_process;


  validPipe26_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      validPipe26_1 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        validPipe26_1 <= validPipe25_1;
      END IF;
    END IF;
  END PROCESS validPipe26_process;


  finalSumValidPipe_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      finalSumValidPipe_reg <= (OTHERS => '0');
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        finalSumValidPipe_reg(0) <= validPipe26_1;
        finalSumValidPipe_reg(1 TO 3) <= finalSumValidPipe_reg(0 TO 2);
      END IF;
    END IF;
  END PROCESS finalSumValidPipe_process;

  finalSumValid <= finalSumValidPipe_reg(3);

  dataIn_re_signed <= signed(dataIn_re);

  dataIn_im_signed <= signed(dataIn_im);

  dataPipe0_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataPipe0_re <= to_signed(16#0000#, 16);
      dataPipe0_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        dataPipe0_re <= dataIn_re_signed;
        dataPipe0_im <= dataIn_im_signed;
      END IF;
    END IF;
  END PROCESS dataPipe0_process;


  multInPipe0_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      multInPipe0_re <= to_signed(16#0000#, 16);
      multInPipe0_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        multInPipe0_re <= dataPipe0_re;
        multInPipe0_im <= dataPipe0_im;
      END IF;
    END IF;
  END PROCESS multInPipe0_process;


  coeff0 <= to_signed(-16#5A82#, 16);

  product0_re <= multInPipe0_re * coeff0;
  product0_im <= multInPipe0_im * coeff0;

  multOutPipe0_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      productPipe0_re <= to_signed(0, 32);
      productPipe0_im <= to_signed(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        productPipe0_re <= product0_re;
        productPipe0_im <= product0_im;
      END IF;
    END IF;
  END PROCESS multOutPipe0_process;


  sum0_re <= resize(productPipe0_re, 36);
  sum0_im <= resize(productPipe0_im, 36);

  HwModeRegister_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      sum0_re_1 <= to_signed(0, 36);
      sum0_im_1 <= to_signed(0, 36);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        sum0_re_1 <= sum0_re;
        sum0_im_1 <= sum0_im;
      END IF;
    END IF;
  END PROCESS HwModeRegister_process;


  dataDelay0_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataDelay0_re <= to_signed(16#0000#, 16);
      dataDelay0_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND validPipe0_1 = '1' THEN
        dataDelay0_re <= dataPipe0_re;
        dataDelay0_im <= dataPipe0_im;
      END IF;
    END IF;
  END PROCESS dataDelay0_process;


  dataPipe1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataPipe1_re <= to_signed(16#0000#, 16);
      dataPipe1_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        dataPipe1_re <= dataDelay0_re;
        dataPipe1_im <= dataDelay0_im;
      END IF;
    END IF;
  END PROCESS dataPipe1_process;


  multInPipe1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      multInPipe1_re <= to_signed(16#0000#, 16);
      multInPipe1_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        multInPipe1_re <= dataPipe1_re;
        multInPipe1_im <= dataPipe1_im;
      END IF;
    END IF;
  END PROCESS multInPipe1_process;


  coeff1 <= to_signed(-16#5A82#, 16);

  mulOutput_re <= multInPipe1_re * coeff1;
  mulOutput_im <= multInPipe1_im * coeff1;

  HwModeRegister_1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      mulOutput_re_1 <= to_signed(0, 32);
      mulOutput_im_1 <= to_signed(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        mulOutput_re_1 <= mulOutput_re;
        mulOutput_im_1 <= mulOutput_im;
      END IF;
    END IF;
  END PROCESS HwModeRegister_1_process;


  alpha_add_add_cast <= resize(sum0_re_1, 37);
  alpha_add_add_cast_1 <= resize(mulOutput_re_1, 37);
  sum1_re <= alpha_add_add_cast + alpha_add_add_cast_1;
  alpha_add_add_cast_2 <= resize(sum0_im_1, 37);
  alpha_add_add_cast_3 <= resize(mulOutput_im_1, 37);
  sum1_im <= alpha_add_add_cast_2 + alpha_add_add_cast_3;

  sum1_re_1 <= sum1_re(35 DOWNTO 0);
  sum1_im_1 <= sum1_im(35 DOWNTO 0);

  HwModeRegister_2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      sum1_re_2 <= to_signed(0, 36);
      sum1_im_2 <= to_signed(0, 36);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        sum1_re_2 <= sum1_re_1;
        sum1_im_2 <= sum1_im_1;
      END IF;
    END IF;
  END PROCESS HwModeRegister_2_process;


  dataDelay1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataDelay1_re <= to_signed(16#0000#, 16);
      dataDelay1_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND validPipe1_1 = '1' THEN
        dataDelay1_re <= dataPipe1_re;
        dataDelay1_im <= dataPipe1_im;
      END IF;
    END IF;
  END PROCESS dataDelay1_process;


  dataPipe2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataPipe2_re <= to_signed(16#0000#, 16);
      dataPipe2_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        dataPipe2_re <= dataDelay1_re;
        dataPipe2_im <= dataDelay1_im;
      END IF;
    END IF;
  END PROCESS dataPipe2_process;


  multInPipe2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      multInPipe2_re <= to_signed(16#0000#, 16);
      multInPipe2_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        multInPipe2_re <= dataPipe2_re;
        multInPipe2_im <= dataPipe2_im;
      END IF;
    END IF;
  END PROCESS multInPipe2_process;


  coeff2 <= to_signed(-16#5A82#, 16);

  mulOutput_re_2 <= multInPipe2_re * coeff2;
  mulOutput_im_2 <= multInPipe2_im * coeff2;

  HwModeRegister_3_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      mulOutput_re_3 <= to_signed(0, 32);
      mulOutput_im_3 <= to_signed(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        mulOutput_re_3 <= mulOutput_re_2;
        mulOutput_im_3 <= mulOutput_im_2;
      END IF;
    END IF;
  END PROCESS HwModeRegister_3_process;


  alpha_add_add_cast_4 <= resize(sum1_re_2, 37);
  alpha_add_add_cast_5 <= resize(mulOutput_re_3, 37);
  sum2_re <= alpha_add_add_cast_4 + alpha_add_add_cast_5;
  alpha_add_add_cast_6 <= resize(sum1_im_2, 37);
  alpha_add_add_cast_7 <= resize(mulOutput_im_3, 37);
  sum2_im <= alpha_add_add_cast_6 + alpha_add_add_cast_7;

  sum2_re_1 <= sum2_re(35 DOWNTO 0);
  sum2_im_1 <= sum2_im(35 DOWNTO 0);

  HwModeRegister_4_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      sum2_re_2 <= to_signed(0, 36);
      sum2_im_2 <= to_signed(0, 36);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        sum2_re_2 <= sum2_re_1;
        sum2_im_2 <= sum2_im_1;
      END IF;
    END IF;
  END PROCESS HwModeRegister_4_process;


  dataDelay2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataDelay2_re <= to_signed(16#0000#, 16);
      dataDelay2_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND validPipe2_1 = '1' THEN
        dataDelay2_re <= dataPipe2_re;
        dataDelay2_im <= dataPipe2_im;
      END IF;
    END IF;
  END PROCESS dataDelay2_process;


  dataPipe3_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataPipe3_re <= to_signed(16#0000#, 16);
      dataPipe3_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        dataPipe3_re <= dataDelay2_re;
        dataPipe3_im <= dataDelay2_im;
      END IF;
    END IF;
  END PROCESS dataPipe3_process;


  multInPipe3_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      multInPipe3_re <= to_signed(16#0000#, 16);
      multInPipe3_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        multInPipe3_re <= dataPipe3_re;
        multInPipe3_im <= dataPipe3_im;
      END IF;
    END IF;
  END PROCESS multInPipe3_process;


  coeff3 <= to_signed(16#5A82#, 16);

  mulOutput_re_4 <= multInPipe3_re * coeff3;
  mulOutput_im_4 <= multInPipe3_im * coeff3;

  HwModeRegister_5_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      mulOutput_re_5 <= to_signed(0, 32);
      mulOutput_im_5 <= to_signed(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        mulOutput_re_5 <= mulOutput_re_4;
        mulOutput_im_5 <= mulOutput_im_4;
      END IF;
    END IF;
  END PROCESS HwModeRegister_5_process;


  alpha_add_add_cast_8 <= resize(sum2_re_2, 37);
  alpha_add_add_cast_9 <= resize(mulOutput_re_5, 37);
  sum3_re <= alpha_add_add_cast_8 + alpha_add_add_cast_9;
  alpha_add_add_cast_10 <= resize(sum2_im_2, 37);
  alpha_add_add_cast_11 <= resize(mulOutput_im_5, 37);
  sum3_im <= alpha_add_add_cast_10 + alpha_add_add_cast_11;

  sum3_re_1 <= sum3_re(35 DOWNTO 0);
  sum3_im_1 <= sum3_im(35 DOWNTO 0);

  HwModeRegister_6_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      sum3_re_2 <= to_signed(0, 36);
      sum3_im_2 <= to_signed(0, 36);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        sum3_re_2 <= sum3_re_1;
        sum3_im_2 <= sum3_im_1;
      END IF;
    END IF;
  END PROCESS HwModeRegister_6_process;


  dataDelay3_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataDelay3_re <= to_signed(16#0000#, 16);
      dataDelay3_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND validPipe3_1 = '1' THEN
        dataDelay3_re <= dataPipe3_re;
        dataDelay3_im <= dataPipe3_im;
      END IF;
    END IF;
  END PROCESS dataDelay3_process;


  dataPipe4_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataPipe4_re <= to_signed(16#0000#, 16);
      dataPipe4_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        dataPipe4_re <= dataDelay3_re;
        dataPipe4_im <= dataDelay3_im;
      END IF;
    END IF;
  END PROCESS dataPipe4_process;


  multInPipe4_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      multInPipe4_re <= to_signed(16#0000#, 16);
      multInPipe4_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        multInPipe4_re <= dataPipe4_re;
        multInPipe4_im <= dataPipe4_im;
      END IF;
    END IF;
  END PROCESS multInPipe4_process;


  coeff4 <= to_signed(16#5A82#, 16);

  mulOutput_re_6 <= multInPipe4_re * coeff4;
  mulOutput_im_6 <= multInPipe4_im * coeff4;

  HwModeRegister_7_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      mulOutput_re_7 <= to_signed(0, 32);
      mulOutput_im_7 <= to_signed(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        mulOutput_re_7 <= mulOutput_re_6;
        mulOutput_im_7 <= mulOutput_im_6;
      END IF;
    END IF;
  END PROCESS HwModeRegister_7_process;


  alpha_add_add_cast_12 <= resize(sum3_re_2, 37);
  alpha_add_add_cast_13 <= resize(mulOutput_re_7, 37);
  sum4_re <= alpha_add_add_cast_12 + alpha_add_add_cast_13;
  alpha_add_add_cast_14 <= resize(sum3_im_2, 37);
  alpha_add_add_cast_15 <= resize(mulOutput_im_7, 37);
  sum4_im <= alpha_add_add_cast_14 + alpha_add_add_cast_15;

  sum4_re_1 <= sum4_re(35 DOWNTO 0);
  sum4_im_1 <= sum4_im(35 DOWNTO 0);

  HwModeRegister_8_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      sum4_re_2 <= to_signed(0, 36);
      sum4_im_2 <= to_signed(0, 36);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        sum4_re_2 <= sum4_re_1;
        sum4_im_2 <= sum4_im_1;
      END IF;
    END IF;
  END PROCESS HwModeRegister_8_process;


  dataDelay4_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataDelay4_re <= to_signed(16#0000#, 16);
      dataDelay4_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND validPipe4_1 = '1' THEN
        dataDelay4_re <= dataPipe4_re;
        dataDelay4_im <= dataPipe4_im;
      END IF;
    END IF;
  END PROCESS dataDelay4_process;


  dataPipe5_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataPipe5_re <= to_signed(16#0000#, 16);
      dataPipe5_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        dataPipe5_re <= dataDelay4_re;
        dataPipe5_im <= dataDelay4_im;
      END IF;
    END IF;
  END PROCESS dataPipe5_process;


  multInPipe5_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      multInPipe5_re <= to_signed(16#0000#, 16);
      multInPipe5_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        multInPipe5_re <= dataPipe5_re;
        multInPipe5_im <= dataPipe5_im;
      END IF;
    END IF;
  END PROCESS multInPipe5_process;


  coeff5 <= to_signed(16#5A82#, 16);

  mulOutput_re_8 <= multInPipe5_re * coeff5;
  mulOutput_im_8 <= multInPipe5_im * coeff5;

  HwModeRegister_9_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      mulOutput_re_9 <= to_signed(0, 32);
      mulOutput_im_9 <= to_signed(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        mulOutput_re_9 <= mulOutput_re_8;
        mulOutput_im_9 <= mulOutput_im_8;
      END IF;
    END IF;
  END PROCESS HwModeRegister_9_process;


  alpha_add_add_cast_16 <= resize(sum4_re_2, 37);
  alpha_add_add_cast_17 <= resize(mulOutput_re_9, 37);
  sum5_re <= alpha_add_add_cast_16 + alpha_add_add_cast_17;
  alpha_add_add_cast_18 <= resize(sum4_im_2, 37);
  alpha_add_add_cast_19 <= resize(mulOutput_im_9, 37);
  sum5_im <= alpha_add_add_cast_18 + alpha_add_add_cast_19;

  sum5_re_1 <= sum5_re(35 DOWNTO 0);
  sum5_im_1 <= sum5_im(35 DOWNTO 0);

  HwModeRegister_10_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      sum5_re_2 <= to_signed(0, 36);
      sum5_im_2 <= to_signed(0, 36);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        sum5_re_2 <= sum5_re_1;
        sum5_im_2 <= sum5_im_1;
      END IF;
    END IF;
  END PROCESS HwModeRegister_10_process;


  dataDelay5_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataDelay5_re <= to_signed(16#0000#, 16);
      dataDelay5_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND validPipe5_1 = '1' THEN
        dataDelay5_re <= dataPipe5_re;
        dataDelay5_im <= dataPipe5_im;
      END IF;
    END IF;
  END PROCESS dataDelay5_process;


  dataPipe6_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataPipe6_re <= to_signed(16#0000#, 16);
      dataPipe6_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        dataPipe6_re <= dataDelay5_re;
        dataPipe6_im <= dataDelay5_im;
      END IF;
    END IF;
  END PROCESS dataPipe6_process;


  multInPipe6_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      multInPipe6_re <= to_signed(16#0000#, 16);
      multInPipe6_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        multInPipe6_re <= dataPipe6_re;
        multInPipe6_im <= dataPipe6_im;
      END IF;
    END IF;
  END PROCESS multInPipe6_process;


  coeff6 <= to_signed(-16#5A82#, 16);

  mulOutput_re_10 <= multInPipe6_re * coeff6;
  mulOutput_im_10 <= multInPipe6_im * coeff6;

  HwModeRegister_11_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      mulOutput_re_11 <= to_signed(0, 32);
      mulOutput_im_11 <= to_signed(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        mulOutput_re_11 <= mulOutput_re_10;
        mulOutput_im_11 <= mulOutput_im_10;
      END IF;
    END IF;
  END PROCESS HwModeRegister_11_process;


  alpha_add_add_cast_20 <= resize(sum5_re_2, 37);
  alpha_add_add_cast_21 <= resize(mulOutput_re_11, 37);
  sum6_re <= alpha_add_add_cast_20 + alpha_add_add_cast_21;
  alpha_add_add_cast_22 <= resize(sum5_im_2, 37);
  alpha_add_add_cast_23 <= resize(mulOutput_im_11, 37);
  sum6_im <= alpha_add_add_cast_22 + alpha_add_add_cast_23;

  sum6_re_1 <= sum6_re(35 DOWNTO 0);
  sum6_im_1 <= sum6_im(35 DOWNTO 0);

  HwModeRegister_12_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      sum6_re_2 <= to_signed(0, 36);
      sum6_im_2 <= to_signed(0, 36);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        sum6_re_2 <= sum6_re_1;
        sum6_im_2 <= sum6_im_1;
      END IF;
    END IF;
  END PROCESS HwModeRegister_12_process;


  dataDelay6_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataDelay6_re <= to_signed(16#0000#, 16);
      dataDelay6_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND validPipe6_1 = '1' THEN
        dataDelay6_re <= dataPipe6_re;
        dataDelay6_im <= dataPipe6_im;
      END IF;
    END IF;
  END PROCESS dataDelay6_process;


  dataPipe7_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataPipe7_re <= to_signed(16#0000#, 16);
      dataPipe7_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        dataPipe7_re <= dataDelay6_re;
        dataPipe7_im <= dataDelay6_im;
      END IF;
    END IF;
  END PROCESS dataPipe7_process;


  multInPipe7_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      multInPipe7_re <= to_signed(16#0000#, 16);
      multInPipe7_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        multInPipe7_re <= dataPipe7_re;
        multInPipe7_im <= dataPipe7_im;
      END IF;
    END IF;
  END PROCESS multInPipe7_process;


  coeff7 <= to_signed(16#5A82#, 16);

  mulOutput_re_12 <= multInPipe7_re * coeff7;
  mulOutput_im_12 <= multInPipe7_im * coeff7;

  HwModeRegister_13_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      mulOutput_re_13 <= to_signed(0, 32);
      mulOutput_im_13 <= to_signed(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        mulOutput_re_13 <= mulOutput_re_12;
        mulOutput_im_13 <= mulOutput_im_12;
      END IF;
    END IF;
  END PROCESS HwModeRegister_13_process;


  alpha_add_add_cast_24 <= resize(sum6_re_2, 37);
  alpha_add_add_cast_25 <= resize(mulOutput_re_13, 37);
  sum7_re <= alpha_add_add_cast_24 + alpha_add_add_cast_25;
  alpha_add_add_cast_26 <= resize(sum6_im_2, 37);
  alpha_add_add_cast_27 <= resize(mulOutput_im_13, 37);
  sum7_im <= alpha_add_add_cast_26 + alpha_add_add_cast_27;

  sum7_re_1 <= sum7_re(35 DOWNTO 0);
  sum7_im_1 <= sum7_im(35 DOWNTO 0);

  HwModeRegister_14_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      sum7_re_2 <= to_signed(0, 36);
      sum7_im_2 <= to_signed(0, 36);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        sum7_re_2 <= sum7_re_1;
        sum7_im_2 <= sum7_im_1;
      END IF;
    END IF;
  END PROCESS HwModeRegister_14_process;


  dataDelay7_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataDelay7_re <= to_signed(16#0000#, 16);
      dataDelay7_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND validPipe7_1 = '1' THEN
        dataDelay7_re <= dataPipe7_re;
        dataDelay7_im <= dataPipe7_im;
      END IF;
    END IF;
  END PROCESS dataDelay7_process;


  dataPipe8_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataPipe8_re <= to_signed(16#0000#, 16);
      dataPipe8_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        dataPipe8_re <= dataDelay7_re;
        dataPipe8_im <= dataDelay7_im;
      END IF;
    END IF;
  END PROCESS dataPipe8_process;


  multInPipe8_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      multInPipe8_re <= to_signed(16#0000#, 16);
      multInPipe8_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        multInPipe8_re <= dataPipe8_re;
        multInPipe8_im <= dataPipe8_im;
      END IF;
    END IF;
  END PROCESS multInPipe8_process;


  coeff8 <= to_signed(-16#5A82#, 16);

  mulOutput_re_14 <= multInPipe8_re * coeff8;
  mulOutput_im_14 <= multInPipe8_im * coeff8;

  HwModeRegister_15_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      mulOutput_re_15 <= to_signed(0, 32);
      mulOutput_im_15 <= to_signed(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        mulOutput_re_15 <= mulOutput_re_14;
        mulOutput_im_15 <= mulOutput_im_14;
      END IF;
    END IF;
  END PROCESS HwModeRegister_15_process;


  alpha_add_add_cast_28 <= resize(sum7_re_2, 37);
  alpha_add_add_cast_29 <= resize(mulOutput_re_15, 37);
  sum8_re <= alpha_add_add_cast_28 + alpha_add_add_cast_29;
  alpha_add_add_cast_30 <= resize(sum7_im_2, 37);
  alpha_add_add_cast_31 <= resize(mulOutput_im_15, 37);
  sum8_im <= alpha_add_add_cast_30 + alpha_add_add_cast_31;

  sum8_re_1 <= sum8_re(35 DOWNTO 0);
  sum8_im_1 <= sum8_im(35 DOWNTO 0);

  HwModeRegister_16_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      sum8_re_2 <= to_signed(0, 36);
      sum8_im_2 <= to_signed(0, 36);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        sum8_re_2 <= sum8_re_1;
        sum8_im_2 <= sum8_im_1;
      END IF;
    END IF;
  END PROCESS HwModeRegister_16_process;


  dataDelay8_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataDelay8_re <= to_signed(16#0000#, 16);
      dataDelay8_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND validPipe8_1 = '1' THEN
        dataDelay8_re <= dataPipe8_re;
        dataDelay8_im <= dataPipe8_im;
      END IF;
    END IF;
  END PROCESS dataDelay8_process;


  dataPipe9_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataPipe9_re <= to_signed(16#0000#, 16);
      dataPipe9_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        dataPipe9_re <= dataDelay8_re;
        dataPipe9_im <= dataDelay8_im;
      END IF;
    END IF;
  END PROCESS dataPipe9_process;


  multInPipe9_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      multInPipe9_re <= to_signed(16#0000#, 16);
      multInPipe9_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        multInPipe9_re <= dataPipe9_re;
        multInPipe9_im <= dataPipe9_im;
      END IF;
    END IF;
  END PROCESS multInPipe9_process;


  coeff9 <= to_signed(-16#5A82#, 16);

  mulOutput_re_16 <= multInPipe9_re * coeff9;
  mulOutput_im_16 <= multInPipe9_im * coeff9;

  HwModeRegister_17_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      mulOutput_re_17 <= to_signed(0, 32);
      mulOutput_im_17 <= to_signed(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        mulOutput_re_17 <= mulOutput_re_16;
        mulOutput_im_17 <= mulOutput_im_16;
      END IF;
    END IF;
  END PROCESS HwModeRegister_17_process;


  alpha_add_add_cast_32 <= resize(sum8_re_2, 37);
  alpha_add_add_cast_33 <= resize(mulOutput_re_17, 37);
  sum9_re <= alpha_add_add_cast_32 + alpha_add_add_cast_33;
  alpha_add_add_cast_34 <= resize(sum8_im_2, 37);
  alpha_add_add_cast_35 <= resize(mulOutput_im_17, 37);
  sum9_im <= alpha_add_add_cast_34 + alpha_add_add_cast_35;

  sum9_re_1 <= sum9_re(35 DOWNTO 0);
  sum9_im_1 <= sum9_im(35 DOWNTO 0);

  HwModeRegister_18_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      sum9_re_2 <= to_signed(0, 36);
      sum9_im_2 <= to_signed(0, 36);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        sum9_re_2 <= sum9_re_1;
        sum9_im_2 <= sum9_im_1;
      END IF;
    END IF;
  END PROCESS HwModeRegister_18_process;


  dataDelay9_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataDelay9_re <= to_signed(16#0000#, 16);
      dataDelay9_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND validPipe9_1 = '1' THEN
        dataDelay9_re <= dataPipe9_re;
        dataDelay9_im <= dataPipe9_im;
      END IF;
    END IF;
  END PROCESS dataDelay9_process;


  dataPipe10_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataPipe10_re <= to_signed(16#0000#, 16);
      dataPipe10_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        dataPipe10_re <= dataDelay9_re;
        dataPipe10_im <= dataDelay9_im;
      END IF;
    END IF;
  END PROCESS dataPipe10_process;


  multInPipe10_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      multInPipe10_re <= to_signed(16#0000#, 16);
      multInPipe10_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        multInPipe10_re <= dataPipe10_re;
        multInPipe10_im <= dataPipe10_im;
      END IF;
    END IF;
  END PROCESS multInPipe10_process;


  coeff10 <= to_signed(16#5A82#, 16);

  mulOutput_re_18 <= multInPipe10_re * coeff10;
  mulOutput_im_18 <= multInPipe10_im * coeff10;

  HwModeRegister_19_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      mulOutput_re_19 <= to_signed(0, 32);
      mulOutput_im_19 <= to_signed(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        mulOutput_re_19 <= mulOutput_re_18;
        mulOutput_im_19 <= mulOutput_im_18;
      END IF;
    END IF;
  END PROCESS HwModeRegister_19_process;


  alpha_add_add_cast_36 <= resize(sum9_re_2, 37);
  alpha_add_add_cast_37 <= resize(mulOutput_re_19, 37);
  sum10_re <= alpha_add_add_cast_36 + alpha_add_add_cast_37;
  alpha_add_add_cast_38 <= resize(sum9_im_2, 37);
  alpha_add_add_cast_39 <= resize(mulOutput_im_19, 37);
  sum10_im <= alpha_add_add_cast_38 + alpha_add_add_cast_39;

  sum10_re_1 <= sum10_re(35 DOWNTO 0);
  sum10_im_1 <= sum10_im(35 DOWNTO 0);

  HwModeRegister_20_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      sum10_re_2 <= to_signed(0, 36);
      sum10_im_2 <= to_signed(0, 36);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        sum10_re_2 <= sum10_re_1;
        sum10_im_2 <= sum10_im_1;
      END IF;
    END IF;
  END PROCESS HwModeRegister_20_process;


  dataDelay10_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataDelay10_re <= to_signed(16#0000#, 16);
      dataDelay10_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND validPipe10_1 = '1' THEN
        dataDelay10_re <= dataPipe10_re;
        dataDelay10_im <= dataPipe10_im;
      END IF;
    END IF;
  END PROCESS dataDelay10_process;


  dataPipe11_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataPipe11_re <= to_signed(16#0000#, 16);
      dataPipe11_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        dataPipe11_re <= dataDelay10_re;
        dataPipe11_im <= dataDelay10_im;
      END IF;
    END IF;
  END PROCESS dataPipe11_process;


  multInPipe11_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      multInPipe11_re <= to_signed(16#0000#, 16);
      multInPipe11_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        multInPipe11_re <= dataPipe11_re;
        multInPipe11_im <= dataPipe11_im;
      END IF;
    END IF;
  END PROCESS multInPipe11_process;


  coeff11 <= to_signed(-16#5A82#, 16);

  mulOutput_re_20 <= multInPipe11_re * coeff11;
  mulOutput_im_20 <= multInPipe11_im * coeff11;

  HwModeRegister_21_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      mulOutput_re_21 <= to_signed(0, 32);
      mulOutput_im_21 <= to_signed(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        mulOutput_re_21 <= mulOutput_re_20;
        mulOutput_im_21 <= mulOutput_im_20;
      END IF;
    END IF;
  END PROCESS HwModeRegister_21_process;


  alpha_add_add_cast_40 <= resize(sum10_re_2, 37);
  alpha_add_add_cast_41 <= resize(mulOutput_re_21, 37);
  sum11_re <= alpha_add_add_cast_40 + alpha_add_add_cast_41;
  alpha_add_add_cast_42 <= resize(sum10_im_2, 37);
  alpha_add_add_cast_43 <= resize(mulOutput_im_21, 37);
  sum11_im <= alpha_add_add_cast_42 + alpha_add_add_cast_43;

  sum11_re_1 <= sum11_re(35 DOWNTO 0);
  sum11_im_1 <= sum11_im(35 DOWNTO 0);

  HwModeRegister_22_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      sum11_re_2 <= to_signed(0, 36);
      sum11_im_2 <= to_signed(0, 36);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        sum11_re_2 <= sum11_re_1;
        sum11_im_2 <= sum11_im_1;
      END IF;
    END IF;
  END PROCESS HwModeRegister_22_process;


  dataDelay11_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataDelay11_re <= to_signed(16#0000#, 16);
      dataDelay11_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND validPipe11_1 = '1' THEN
        dataDelay11_re <= dataPipe11_re;
        dataDelay11_im <= dataPipe11_im;
      END IF;
    END IF;
  END PROCESS dataDelay11_process;


  dataPipe12_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataPipe12_re <= to_signed(16#0000#, 16);
      dataPipe12_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        dataPipe12_re <= dataDelay11_re;
        dataPipe12_im <= dataDelay11_im;
      END IF;
    END IF;
  END PROCESS dataPipe12_process;


  multInPipe12_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      multInPipe12_re <= to_signed(16#0000#, 16);
      multInPipe12_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        multInPipe12_re <= dataPipe12_re;
        multInPipe12_im <= dataPipe12_im;
      END IF;
    END IF;
  END PROCESS multInPipe12_process;


  coeff12 <= to_signed(-16#5A82#, 16);

  mulOutput_re_22 <= multInPipe12_re * coeff12;
  mulOutput_im_22 <= multInPipe12_im * coeff12;

  HwModeRegister_23_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      mulOutput_re_23 <= to_signed(0, 32);
      mulOutput_im_23 <= to_signed(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        mulOutput_re_23 <= mulOutput_re_22;
        mulOutput_im_23 <= mulOutput_im_22;
      END IF;
    END IF;
  END PROCESS HwModeRegister_23_process;


  alpha_add_add_cast_44 <= resize(sum11_re_2, 37);
  alpha_add_add_cast_45 <= resize(mulOutput_re_23, 37);
  sum12_re <= alpha_add_add_cast_44 + alpha_add_add_cast_45;
  alpha_add_add_cast_46 <= resize(sum11_im_2, 37);
  alpha_add_add_cast_47 <= resize(mulOutput_im_23, 37);
  sum12_im <= alpha_add_add_cast_46 + alpha_add_add_cast_47;

  sum12_re_1 <= sum12_re(35 DOWNTO 0);
  sum12_im_1 <= sum12_im(35 DOWNTO 0);

  HwModeRegister_24_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      sum12_re_2 <= to_signed(0, 36);
      sum12_im_2 <= to_signed(0, 36);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        sum12_re_2 <= sum12_re_1;
        sum12_im_2 <= sum12_im_1;
      END IF;
    END IF;
  END PROCESS HwModeRegister_24_process;


  dataDelay12_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataDelay12_re <= to_signed(16#0000#, 16);
      dataDelay12_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND validPipe12_1 = '1' THEN
        dataDelay12_re <= dataPipe12_re;
        dataDelay12_im <= dataPipe12_im;
      END IF;
    END IF;
  END PROCESS dataDelay12_process;


  dataPipe13_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataPipe13_re <= to_signed(16#0000#, 16);
      dataPipe13_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        dataPipe13_re <= dataDelay12_re;
        dataPipe13_im <= dataDelay12_im;
      END IF;
    END IF;
  END PROCESS dataPipe13_process;


  multInPipe13_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      multInPipe13_re <= to_signed(16#0000#, 16);
      multInPipe13_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        multInPipe13_re <= dataPipe13_re;
        multInPipe13_im <= dataPipe13_im;
      END IF;
    END IF;
  END PROCESS multInPipe13_process;


  coeff13 <= to_signed(-16#5A82#, 16);

  mulOutput_re_24 <= multInPipe13_re * coeff13;
  mulOutput_im_24 <= multInPipe13_im * coeff13;

  HwModeRegister_25_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      mulOutput_re_25 <= to_signed(0, 32);
      mulOutput_im_25 <= to_signed(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        mulOutput_re_25 <= mulOutput_re_24;
        mulOutput_im_25 <= mulOutput_im_24;
      END IF;
    END IF;
  END PROCESS HwModeRegister_25_process;


  alpha_add_add_cast_48 <= resize(sum12_re_2, 37);
  alpha_add_add_cast_49 <= resize(mulOutput_re_25, 37);
  sum13_re <= alpha_add_add_cast_48 + alpha_add_add_cast_49;
  alpha_add_add_cast_50 <= resize(sum12_im_2, 37);
  alpha_add_add_cast_51 <= resize(mulOutput_im_25, 37);
  sum13_im <= alpha_add_add_cast_50 + alpha_add_add_cast_51;

  sum13_re_1 <= sum13_re(35 DOWNTO 0);
  sum13_im_1 <= sum13_im(35 DOWNTO 0);

  HwModeRegister_26_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      sum13_re_2 <= to_signed(0, 36);
      sum13_im_2 <= to_signed(0, 36);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        sum13_re_2 <= sum13_re_1;
        sum13_im_2 <= sum13_im_1;
      END IF;
    END IF;
  END PROCESS HwModeRegister_26_process;


  dataDelay13_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataDelay13_re <= to_signed(16#0000#, 16);
      dataDelay13_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND validPipe13_1 = '1' THEN
        dataDelay13_re <= dataPipe13_re;
        dataDelay13_im <= dataPipe13_im;
      END IF;
    END IF;
  END PROCESS dataDelay13_process;


  dataPipe14_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataPipe14_re <= to_signed(16#0000#, 16);
      dataPipe14_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        dataPipe14_re <= dataDelay13_re;
        dataPipe14_im <= dataDelay13_im;
      END IF;
    END IF;
  END PROCESS dataPipe14_process;


  multInPipe14_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      multInPipe14_re <= to_signed(16#0000#, 16);
      multInPipe14_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        multInPipe14_re <= dataPipe14_re;
        multInPipe14_im <= dataPipe14_im;
      END IF;
    END IF;
  END PROCESS multInPipe14_process;


  coeff14 <= to_signed(16#5A82#, 16);

  mulOutput_re_26 <= multInPipe14_re * coeff14;
  mulOutput_im_26 <= multInPipe14_im * coeff14;

  HwModeRegister_27_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      mulOutput_re_27 <= to_signed(0, 32);
      mulOutput_im_27 <= to_signed(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        mulOutput_re_27 <= mulOutput_re_26;
        mulOutput_im_27 <= mulOutput_im_26;
      END IF;
    END IF;
  END PROCESS HwModeRegister_27_process;


  alpha_add_add_cast_52 <= resize(sum13_re_2, 37);
  alpha_add_add_cast_53 <= resize(mulOutput_re_27, 37);
  sum14_re <= alpha_add_add_cast_52 + alpha_add_add_cast_53;
  alpha_add_add_cast_54 <= resize(sum13_im_2, 37);
  alpha_add_add_cast_55 <= resize(mulOutput_im_27, 37);
  sum14_im <= alpha_add_add_cast_54 + alpha_add_add_cast_55;

  sum14_re_1 <= sum14_re(35 DOWNTO 0);
  sum14_im_1 <= sum14_im(35 DOWNTO 0);

  HwModeRegister_28_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      sum14_re_2 <= to_signed(0, 36);
      sum14_im_2 <= to_signed(0, 36);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        sum14_re_2 <= sum14_re_1;
        sum14_im_2 <= sum14_im_1;
      END IF;
    END IF;
  END PROCESS HwModeRegister_28_process;


  dataDelay14_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataDelay14_re <= to_signed(16#0000#, 16);
      dataDelay14_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND validPipe14_1 = '1' THEN
        dataDelay14_re <= dataPipe14_re;
        dataDelay14_im <= dataPipe14_im;
      END IF;
    END IF;
  END PROCESS dataDelay14_process;


  dataPipe15_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataPipe15_re <= to_signed(16#0000#, 16);
      dataPipe15_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        dataPipe15_re <= dataDelay14_re;
        dataPipe15_im <= dataDelay14_im;
      END IF;
    END IF;
  END PROCESS dataPipe15_process;


  multInPipe15_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      multInPipe15_re <= to_signed(16#0000#, 16);
      multInPipe15_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        multInPipe15_re <= dataPipe15_re;
        multInPipe15_im <= dataPipe15_im;
      END IF;
    END IF;
  END PROCESS multInPipe15_process;


  coeff15 <= to_signed(16#5A82#, 16);

  mulOutput_re_28 <= multInPipe15_re * coeff15;
  mulOutput_im_28 <= multInPipe15_im * coeff15;

  HwModeRegister_29_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      mulOutput_re_29 <= to_signed(0, 32);
      mulOutput_im_29 <= to_signed(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        mulOutput_re_29 <= mulOutput_re_28;
        mulOutput_im_29 <= mulOutput_im_28;
      END IF;
    END IF;
  END PROCESS HwModeRegister_29_process;


  alpha_add_add_cast_56 <= resize(sum14_re_2, 37);
  alpha_add_add_cast_57 <= resize(mulOutput_re_29, 37);
  sum15_re <= alpha_add_add_cast_56 + alpha_add_add_cast_57;
  alpha_add_add_cast_58 <= resize(sum14_im_2, 37);
  alpha_add_add_cast_59 <= resize(mulOutput_im_29, 37);
  sum15_im <= alpha_add_add_cast_58 + alpha_add_add_cast_59;

  sum15_re_1 <= sum15_re(35 DOWNTO 0);
  sum15_im_1 <= sum15_im(35 DOWNTO 0);

  HwModeRegister_30_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      sum15_re_2 <= to_signed(0, 36);
      sum15_im_2 <= to_signed(0, 36);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        sum15_re_2 <= sum15_re_1;
        sum15_im_2 <= sum15_im_1;
      END IF;
    END IF;
  END PROCESS HwModeRegister_30_process;


  dataDelay15_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataDelay15_re <= to_signed(16#0000#, 16);
      dataDelay15_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND validPipe15_1 = '1' THEN
        dataDelay15_re <= dataPipe15_re;
        dataDelay15_im <= dataPipe15_im;
      END IF;
    END IF;
  END PROCESS dataDelay15_process;


  dataPipe16_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataPipe16_re <= to_signed(16#0000#, 16);
      dataPipe16_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        dataPipe16_re <= dataDelay15_re;
        dataPipe16_im <= dataDelay15_im;
      END IF;
    END IF;
  END PROCESS dataPipe16_process;


  multInPipe16_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      multInPipe16_re <= to_signed(16#0000#, 16);
      multInPipe16_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        multInPipe16_re <= dataPipe16_re;
        multInPipe16_im <= dataPipe16_im;
      END IF;
    END IF;
  END PROCESS multInPipe16_process;


  coeff16 <= to_signed(16#5A82#, 16);

  mulOutput_re_30 <= multInPipe16_re * coeff16;
  mulOutput_im_30 <= multInPipe16_im * coeff16;

  HwModeRegister_31_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      mulOutput_re_31 <= to_signed(0, 32);
      mulOutput_im_31 <= to_signed(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        mulOutput_re_31 <= mulOutput_re_30;
        mulOutput_im_31 <= mulOutput_im_30;
      END IF;
    END IF;
  END PROCESS HwModeRegister_31_process;


  alpha_add_add_cast_60 <= resize(sum15_re_2, 37);
  alpha_add_add_cast_61 <= resize(mulOutput_re_31, 37);
  sum16_re <= alpha_add_add_cast_60 + alpha_add_add_cast_61;
  alpha_add_add_cast_62 <= resize(sum15_im_2, 37);
  alpha_add_add_cast_63 <= resize(mulOutput_im_31, 37);
  sum16_im <= alpha_add_add_cast_62 + alpha_add_add_cast_63;

  sum16_re_1 <= sum16_re(35 DOWNTO 0);
  sum16_im_1 <= sum16_im(35 DOWNTO 0);

  HwModeRegister_32_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      sum16_re_2 <= to_signed(0, 36);
      sum16_im_2 <= to_signed(0, 36);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        sum16_re_2 <= sum16_re_1;
        sum16_im_2 <= sum16_im_1;
      END IF;
    END IF;
  END PROCESS HwModeRegister_32_process;


  dataDelay16_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataDelay16_re <= to_signed(16#0000#, 16);
      dataDelay16_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND validPipe16_1 = '1' THEN
        dataDelay16_re <= dataPipe16_re;
        dataDelay16_im <= dataPipe16_im;
      END IF;
    END IF;
  END PROCESS dataDelay16_process;


  dataPipe17_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataPipe17_re <= to_signed(16#0000#, 16);
      dataPipe17_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        dataPipe17_re <= dataDelay16_re;
        dataPipe17_im <= dataDelay16_im;
      END IF;
    END IF;
  END PROCESS dataPipe17_process;


  multInPipe17_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      multInPipe17_re <= to_signed(16#0000#, 16);
      multInPipe17_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        multInPipe17_re <= dataPipe17_re;
        multInPipe17_im <= dataPipe17_im;
      END IF;
    END IF;
  END PROCESS multInPipe17_process;


  coeff17 <= to_signed(-16#5A82#, 16);

  mulOutput_re_32 <= multInPipe17_re * coeff17;
  mulOutput_im_32 <= multInPipe17_im * coeff17;

  HwModeRegister_33_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      mulOutput_re_33 <= to_signed(0, 32);
      mulOutput_im_33 <= to_signed(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        mulOutput_re_33 <= mulOutput_re_32;
        mulOutput_im_33 <= mulOutput_im_32;
      END IF;
    END IF;
  END PROCESS HwModeRegister_33_process;


  alpha_add_add_cast_64 <= resize(sum16_re_2, 37);
  alpha_add_add_cast_65 <= resize(mulOutput_re_33, 37);
  sum17_re <= alpha_add_add_cast_64 + alpha_add_add_cast_65;
  alpha_add_add_cast_66 <= resize(sum16_im_2, 37);
  alpha_add_add_cast_67 <= resize(mulOutput_im_33, 37);
  sum17_im <= alpha_add_add_cast_66 + alpha_add_add_cast_67;

  sum17_re_1 <= sum17_re(35 DOWNTO 0);
  sum17_im_1 <= sum17_im(35 DOWNTO 0);

  HwModeRegister_34_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      sum17_re_2 <= to_signed(0, 36);
      sum17_im_2 <= to_signed(0, 36);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        sum17_re_2 <= sum17_re_1;
        sum17_im_2 <= sum17_im_1;
      END IF;
    END IF;
  END PROCESS HwModeRegister_34_process;


  dataDelay17_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataDelay17_re <= to_signed(16#0000#, 16);
      dataDelay17_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND validPipe17_1 = '1' THEN
        dataDelay17_re <= dataPipe17_re;
        dataDelay17_im <= dataPipe17_im;
      END IF;
    END IF;
  END PROCESS dataDelay17_process;


  dataPipe18_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataPipe18_re <= to_signed(16#0000#, 16);
      dataPipe18_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        dataPipe18_re <= dataDelay17_re;
        dataPipe18_im <= dataDelay17_im;
      END IF;
    END IF;
  END PROCESS dataPipe18_process;


  multInPipe18_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      multInPipe18_re <= to_signed(16#0000#, 16);
      multInPipe18_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        multInPipe18_re <= dataPipe18_re;
        multInPipe18_im <= dataPipe18_im;
      END IF;
    END IF;
  END PROCESS multInPipe18_process;


  coeff18 <= to_signed(16#5A82#, 16);

  mulOutput_re_34 <= multInPipe18_re * coeff18;
  mulOutput_im_34 <= multInPipe18_im * coeff18;

  HwModeRegister_35_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      mulOutput_re_35 <= to_signed(0, 32);
      mulOutput_im_35 <= to_signed(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        mulOutput_re_35 <= mulOutput_re_34;
        mulOutput_im_35 <= mulOutput_im_34;
      END IF;
    END IF;
  END PROCESS HwModeRegister_35_process;


  alpha_add_add_cast_68 <= resize(sum17_re_2, 37);
  alpha_add_add_cast_69 <= resize(mulOutput_re_35, 37);
  sum18_re <= alpha_add_add_cast_68 + alpha_add_add_cast_69;
  alpha_add_add_cast_70 <= resize(sum17_im_2, 37);
  alpha_add_add_cast_71 <= resize(mulOutput_im_35, 37);
  sum18_im <= alpha_add_add_cast_70 + alpha_add_add_cast_71;

  sum18_re_1 <= sum18_re(35 DOWNTO 0);
  sum18_im_1 <= sum18_im(35 DOWNTO 0);

  HwModeRegister_36_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      sum18_re_2 <= to_signed(0, 36);
      sum18_im_2 <= to_signed(0, 36);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        sum18_re_2 <= sum18_re_1;
        sum18_im_2 <= sum18_im_1;
      END IF;
    END IF;
  END PROCESS HwModeRegister_36_process;


  dataDelay18_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataDelay18_re <= to_signed(16#0000#, 16);
      dataDelay18_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND validPipe18_1 = '1' THEN
        dataDelay18_re <= dataPipe18_re;
        dataDelay18_im <= dataPipe18_im;
      END IF;
    END IF;
  END PROCESS dataDelay18_process;


  dataPipe19_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataPipe19_re <= to_signed(16#0000#, 16);
      dataPipe19_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        dataPipe19_re <= dataDelay18_re;
        dataPipe19_im <= dataDelay18_im;
      END IF;
    END IF;
  END PROCESS dataPipe19_process;


  multInPipe19_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      multInPipe19_re <= to_signed(16#0000#, 16);
      multInPipe19_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        multInPipe19_re <= dataPipe19_re;
        multInPipe19_im <= dataPipe19_im;
      END IF;
    END IF;
  END PROCESS multInPipe19_process;


  coeff19 <= to_signed(-16#5A82#, 16);

  mulOutput_re_36 <= multInPipe19_re * coeff19;
  mulOutput_im_36 <= multInPipe19_im * coeff19;

  HwModeRegister_37_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      mulOutput_re_37 <= to_signed(0, 32);
      mulOutput_im_37 <= to_signed(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        mulOutput_re_37 <= mulOutput_re_36;
        mulOutput_im_37 <= mulOutput_im_36;
      END IF;
    END IF;
  END PROCESS HwModeRegister_37_process;


  alpha_add_add_cast_72 <= resize(sum18_re_2, 37);
  alpha_add_add_cast_73 <= resize(mulOutput_re_37, 37);
  sum19_re <= alpha_add_add_cast_72 + alpha_add_add_cast_73;
  alpha_add_add_cast_74 <= resize(sum18_im_2, 37);
  alpha_add_add_cast_75 <= resize(mulOutput_im_37, 37);
  sum19_im <= alpha_add_add_cast_74 + alpha_add_add_cast_75;

  sum19_re_1 <= sum19_re(35 DOWNTO 0);
  sum19_im_1 <= sum19_im(35 DOWNTO 0);

  HwModeRegister_38_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      sum19_re_2 <= to_signed(0, 36);
      sum19_im_2 <= to_signed(0, 36);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        sum19_re_2 <= sum19_re_1;
        sum19_im_2 <= sum19_im_1;
      END IF;
    END IF;
  END PROCESS HwModeRegister_38_process;


  dataDelay19_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataDelay19_re <= to_signed(16#0000#, 16);
      dataDelay19_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND validPipe19_1 = '1' THEN
        dataDelay19_re <= dataPipe19_re;
        dataDelay19_im <= dataPipe19_im;
      END IF;
    END IF;
  END PROCESS dataDelay19_process;


  dataPipe20_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataPipe20_re <= to_signed(16#0000#, 16);
      dataPipe20_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        dataPipe20_re <= dataDelay19_re;
        dataPipe20_im <= dataDelay19_im;
      END IF;
    END IF;
  END PROCESS dataPipe20_process;


  multInPipe20_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      multInPipe20_re <= to_signed(16#0000#, 16);
      multInPipe20_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        multInPipe20_re <= dataPipe20_re;
        multInPipe20_im <= dataPipe20_im;
      END IF;
    END IF;
  END PROCESS multInPipe20_process;


  coeff20 <= to_signed(-16#5A82#, 16);

  mulOutput_re_38 <= multInPipe20_re * coeff20;
  mulOutput_im_38 <= multInPipe20_im * coeff20;

  HwModeRegister_39_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      mulOutput_re_39 <= to_signed(0, 32);
      mulOutput_im_39 <= to_signed(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        mulOutput_re_39 <= mulOutput_re_38;
        mulOutput_im_39 <= mulOutput_im_38;
      END IF;
    END IF;
  END PROCESS HwModeRegister_39_process;


  alpha_add_add_cast_76 <= resize(sum19_re_2, 37);
  alpha_add_add_cast_77 <= resize(mulOutput_re_39, 37);
  sum20_re <= alpha_add_add_cast_76 + alpha_add_add_cast_77;
  alpha_add_add_cast_78 <= resize(sum19_im_2, 37);
  alpha_add_add_cast_79 <= resize(mulOutput_im_39, 37);
  sum20_im <= alpha_add_add_cast_78 + alpha_add_add_cast_79;

  sum20_re_1 <= sum20_re(35 DOWNTO 0);
  sum20_im_1 <= sum20_im(35 DOWNTO 0);

  HwModeRegister_40_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      sum20_re_2 <= to_signed(0, 36);
      sum20_im_2 <= to_signed(0, 36);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        sum20_re_2 <= sum20_re_1;
        sum20_im_2 <= sum20_im_1;
      END IF;
    END IF;
  END PROCESS HwModeRegister_40_process;


  dataDelay20_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataDelay20_re <= to_signed(16#0000#, 16);
      dataDelay20_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND validPipe20_1 = '1' THEN
        dataDelay20_re <= dataPipe20_re;
        dataDelay20_im <= dataPipe20_im;
      END IF;
    END IF;
  END PROCESS dataDelay20_process;


  dataPipe21_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataPipe21_re <= to_signed(16#0000#, 16);
      dataPipe21_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        dataPipe21_re <= dataDelay20_re;
        dataPipe21_im <= dataDelay20_im;
      END IF;
    END IF;
  END PROCESS dataPipe21_process;


  multInPipe21_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      multInPipe21_re <= to_signed(16#0000#, 16);
      multInPipe21_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        multInPipe21_re <= dataPipe21_re;
        multInPipe21_im <= dataPipe21_im;
      END IF;
    END IF;
  END PROCESS multInPipe21_process;


  coeff21 <= to_signed(16#5A82#, 16);

  mulOutput_re_40 <= multInPipe21_re * coeff21;
  mulOutput_im_40 <= multInPipe21_im * coeff21;

  HwModeRegister_41_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      mulOutput_re_41 <= to_signed(0, 32);
      mulOutput_im_41 <= to_signed(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        mulOutput_re_41 <= mulOutput_re_40;
        mulOutput_im_41 <= mulOutput_im_40;
      END IF;
    END IF;
  END PROCESS HwModeRegister_41_process;


  alpha_add_add_cast_80 <= resize(sum20_re_2, 37);
  alpha_add_add_cast_81 <= resize(mulOutput_re_41, 37);
  sum21_re <= alpha_add_add_cast_80 + alpha_add_add_cast_81;
  alpha_add_add_cast_82 <= resize(sum20_im_2, 37);
  alpha_add_add_cast_83 <= resize(mulOutput_im_41, 37);
  sum21_im <= alpha_add_add_cast_82 + alpha_add_add_cast_83;

  sum21_re_1 <= sum21_re(35 DOWNTO 0);
  sum21_im_1 <= sum21_im(35 DOWNTO 0);

  HwModeRegister_42_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      sum21_re_2 <= to_signed(0, 36);
      sum21_im_2 <= to_signed(0, 36);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        sum21_re_2 <= sum21_re_1;
        sum21_im_2 <= sum21_im_1;
      END IF;
    END IF;
  END PROCESS HwModeRegister_42_process;


  dataDelay21_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataDelay21_re <= to_signed(16#0000#, 16);
      dataDelay21_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND validPipe21_1 = '1' THEN
        dataDelay21_re <= dataPipe21_re;
        dataDelay21_im <= dataPipe21_im;
      END IF;
    END IF;
  END PROCESS dataDelay21_process;


  dataPipe22_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataPipe22_re <= to_signed(16#0000#, 16);
      dataPipe22_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        dataPipe22_re <= dataDelay21_re;
        dataPipe22_im <= dataDelay21_im;
      END IF;
    END IF;
  END PROCESS dataPipe22_process;


  multInPipe22_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      multInPipe22_re <= to_signed(16#0000#, 16);
      multInPipe22_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        multInPipe22_re <= dataPipe22_re;
        multInPipe22_im <= dataPipe22_im;
      END IF;
    END IF;
  END PROCESS multInPipe22_process;


  coeff22 <= to_signed(-16#5A82#, 16);

  mulOutput_re_42 <= multInPipe22_re * coeff22;
  mulOutput_im_42 <= multInPipe22_im * coeff22;

  HwModeRegister_43_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      mulOutput_re_43 <= to_signed(0, 32);
      mulOutput_im_43 <= to_signed(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        mulOutput_re_43 <= mulOutput_re_42;
        mulOutput_im_43 <= mulOutput_im_42;
      END IF;
    END IF;
  END PROCESS HwModeRegister_43_process;


  alpha_add_add_cast_84 <= resize(sum21_re_2, 37);
  alpha_add_add_cast_85 <= resize(mulOutput_re_43, 37);
  sum22_re <= alpha_add_add_cast_84 + alpha_add_add_cast_85;
  alpha_add_add_cast_86 <= resize(sum21_im_2, 37);
  alpha_add_add_cast_87 <= resize(mulOutput_im_43, 37);
  sum22_im <= alpha_add_add_cast_86 + alpha_add_add_cast_87;

  sum22_re_1 <= sum22_re(35 DOWNTO 0);
  sum22_im_1 <= sum22_im(35 DOWNTO 0);

  HwModeRegister_44_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      sum22_re_2 <= to_signed(0, 36);
      sum22_im_2 <= to_signed(0, 36);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        sum22_re_2 <= sum22_re_1;
        sum22_im_2 <= sum22_im_1;
      END IF;
    END IF;
  END PROCESS HwModeRegister_44_process;


  dataDelay22_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataDelay22_re <= to_signed(16#0000#, 16);
      dataDelay22_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND validPipe22_1 = '1' THEN
        dataDelay22_re <= dataPipe22_re;
        dataDelay22_im <= dataPipe22_im;
      END IF;
    END IF;
  END PROCESS dataDelay22_process;


  dataPipe23_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataPipe23_re <= to_signed(16#0000#, 16);
      dataPipe23_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        dataPipe23_re <= dataDelay22_re;
        dataPipe23_im <= dataDelay22_im;
      END IF;
    END IF;
  END PROCESS dataPipe23_process;


  multInPipe23_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      multInPipe23_re <= to_signed(16#0000#, 16);
      multInPipe23_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        multInPipe23_re <= dataPipe23_re;
        multInPipe23_im <= dataPipe23_im;
      END IF;
    END IF;
  END PROCESS multInPipe23_process;


  coeff23 <= to_signed(-16#5A82#, 16);

  mulOutput_re_44 <= multInPipe23_re * coeff23;
  mulOutput_im_44 <= multInPipe23_im * coeff23;

  HwModeRegister_45_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      mulOutput_re_45 <= to_signed(0, 32);
      mulOutput_im_45 <= to_signed(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        mulOutput_re_45 <= mulOutput_re_44;
        mulOutput_im_45 <= mulOutput_im_44;
      END IF;
    END IF;
  END PROCESS HwModeRegister_45_process;


  alpha_add_add_cast_88 <= resize(sum22_re_2, 37);
  alpha_add_add_cast_89 <= resize(mulOutput_re_45, 37);
  sum23_re <= alpha_add_add_cast_88 + alpha_add_add_cast_89;
  alpha_add_add_cast_90 <= resize(sum22_im_2, 37);
  alpha_add_add_cast_91 <= resize(mulOutput_im_45, 37);
  sum23_im <= alpha_add_add_cast_90 + alpha_add_add_cast_91;

  sum23_re_1 <= sum23_re(35 DOWNTO 0);
  sum23_im_1 <= sum23_im(35 DOWNTO 0);

  HwModeRegister_46_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      sum23_re_2 <= to_signed(0, 36);
      sum23_im_2 <= to_signed(0, 36);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        sum23_re_2 <= sum23_re_1;
        sum23_im_2 <= sum23_im_1;
      END IF;
    END IF;
  END PROCESS HwModeRegister_46_process;


  dataDelay23_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataDelay23_re <= to_signed(16#0000#, 16);
      dataDelay23_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND validPipe23_1 = '1' THEN
        dataDelay23_re <= dataPipe23_re;
        dataDelay23_im <= dataPipe23_im;
      END IF;
    END IF;
  END PROCESS dataDelay23_process;


  dataPipe24_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataPipe24_re <= to_signed(16#0000#, 16);
      dataPipe24_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        dataPipe24_re <= dataDelay23_re;
        dataPipe24_im <= dataDelay23_im;
      END IF;
    END IF;
  END PROCESS dataPipe24_process;


  multInPipe24_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      multInPipe24_re <= to_signed(16#0000#, 16);
      multInPipe24_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        multInPipe24_re <= dataPipe24_re;
        multInPipe24_im <= dataPipe24_im;
      END IF;
    END IF;
  END PROCESS multInPipe24_process;


  coeff24 <= to_signed(-16#5A82#, 16);

  mulOutput_re_46 <= multInPipe24_re * coeff24;
  mulOutput_im_46 <= multInPipe24_im * coeff24;

  HwModeRegister_47_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      mulOutput_re_47 <= to_signed(0, 32);
      mulOutput_im_47 <= to_signed(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        mulOutput_re_47 <= mulOutput_re_46;
        mulOutput_im_47 <= mulOutput_im_46;
      END IF;
    END IF;
  END PROCESS HwModeRegister_47_process;


  alpha_add_add_cast_92 <= resize(sum23_re_2, 37);
  alpha_add_add_cast_93 <= resize(mulOutput_re_47, 37);
  sum24_re <= alpha_add_add_cast_92 + alpha_add_add_cast_93;
  alpha_add_add_cast_94 <= resize(sum23_im_2, 37);
  alpha_add_add_cast_95 <= resize(mulOutput_im_47, 37);
  sum24_im <= alpha_add_add_cast_94 + alpha_add_add_cast_95;

  sum24_re_1 <= sum24_re(35 DOWNTO 0);
  sum24_im_1 <= sum24_im(35 DOWNTO 0);

  HwModeRegister_48_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      sum24_re_2 <= to_signed(0, 36);
      sum24_im_2 <= to_signed(0, 36);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        sum24_re_2 <= sum24_re_1;
        sum24_im_2 <= sum24_im_1;
      END IF;
    END IF;
  END PROCESS HwModeRegister_48_process;


  dataDelay24_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataDelay24_re <= to_signed(16#0000#, 16);
      dataDelay24_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND validPipe24_1 = '1' THEN
        dataDelay24_re <= dataPipe24_re;
        dataDelay24_im <= dataPipe24_im;
      END IF;
    END IF;
  END PROCESS dataDelay24_process;


  dataPipe25_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataPipe25_re <= to_signed(16#0000#, 16);
      dataPipe25_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        dataPipe25_re <= dataDelay24_re;
        dataPipe25_im <= dataDelay24_im;
      END IF;
    END IF;
  END PROCESS dataPipe25_process;


  multInPipe25_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      multInPipe25_re <= to_signed(16#0000#, 16);
      multInPipe25_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        multInPipe25_re <= dataPipe25_re;
        multInPipe25_im <= dataPipe25_im;
      END IF;
    END IF;
  END PROCESS multInPipe25_process;


  coeff25 <= to_signed(16#5A82#, 16);

  mulOutput_re_48 <= multInPipe25_re * coeff25;
  mulOutput_im_48 <= multInPipe25_im * coeff25;

  HwModeRegister_49_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      mulOutput_re_49 <= to_signed(0, 32);
      mulOutput_im_49 <= to_signed(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        mulOutput_re_49 <= mulOutput_re_48;
        mulOutput_im_49 <= mulOutput_im_48;
      END IF;
    END IF;
  END PROCESS HwModeRegister_49_process;


  alpha_add_add_cast_96 <= resize(sum24_re_2, 37);
  alpha_add_add_cast_97 <= resize(mulOutput_re_49, 37);
  sum25_re <= alpha_add_add_cast_96 + alpha_add_add_cast_97;
  alpha_add_add_cast_98 <= resize(sum24_im_2, 37);
  alpha_add_add_cast_99 <= resize(mulOutput_im_49, 37);
  sum25_im <= alpha_add_add_cast_98 + alpha_add_add_cast_99;

  sum25_re_1 <= sum25_re(35 DOWNTO 0);
  sum25_im_1 <= sum25_im(35 DOWNTO 0);

  HwModeRegister_50_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      sum25_re_2 <= to_signed(0, 36);
      sum25_im_2 <= to_signed(0, 36);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        sum25_re_2 <= sum25_re_1;
        sum25_im_2 <= sum25_im_1;
      END IF;
    END IF;
  END PROCESS HwModeRegister_50_process;


  dataDelay25_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataDelay25_re <= to_signed(16#0000#, 16);
      dataDelay25_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND validPipe25_1 = '1' THEN
        dataDelay25_re <= dataPipe25_re;
        dataDelay25_im <= dataPipe25_im;
      END IF;
    END IF;
  END PROCESS dataDelay25_process;


  dataPipe26_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataPipe26_re <= to_signed(16#0000#, 16);
      dataPipe26_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        dataPipe26_re <= dataDelay25_re;
        dataPipe26_im <= dataDelay25_im;
      END IF;
    END IF;
  END PROCESS dataPipe26_process;


  multInPipe26_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      multInPipe26_re <= to_signed(16#0000#, 16);
      multInPipe26_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        multInPipe26_re <= dataPipe26_re;
        multInPipe26_im <= dataPipe26_im;
      END IF;
    END IF;
  END PROCESS multInPipe26_process;


  coeff26 <= to_signed(16#5A82#, 16);

  mulOutput_re_50 <= multInPipe26_re * coeff26;
  mulOutput_im_50 <= multInPipe26_im * coeff26;

  HwModeRegister_51_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      mulOutput_re_51 <= to_signed(0, 32);
      mulOutput_im_51 <= to_signed(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        mulOutput_re_51 <= mulOutput_re_50;
        mulOutput_im_51 <= mulOutput_im_50;
      END IF;
    END IF;
  END PROCESS HwModeRegister_51_process;


  alpha_add_add_cast_100 <= resize(sum25_re_2, 37);
  alpha_add_add_cast_101 <= resize(mulOutput_re_51, 37);
  sum26_re <= alpha_add_add_cast_100 + alpha_add_add_cast_101;
  alpha_add_add_cast_102 <= resize(sum25_im_2, 37);
  alpha_add_add_cast_103 <= resize(mulOutput_im_51, 37);
  sum26_im <= alpha_add_add_cast_102 + alpha_add_add_cast_103;

  sum26_re_1 <= sum26_re(35 DOWNTO 0);
  sum26_im_1 <= sum26_im(35 DOWNTO 0);

  HwModeRegister_52_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      sum26_re_2 <= to_signed(0, 36);
      sum26_im_2 <= to_signed(0, 36);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        sum26_re_2 <= sum26_re_1;
        sum26_im_2 <= sum26_im_1;
      END IF;
    END IF;
  END PROCESS HwModeRegister_52_process;


  dataDelay26_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataDelay26_re <= to_signed(16#0000#, 16);
      dataDelay26_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND validPipe26_1 = '1' THEN
        dataDelay26_re <= dataPipe26_re;
        dataDelay26_im <= dataPipe26_im;
      END IF;
    END IF;
  END PROCESS dataDelay26_process;


  multInPipe27_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      multInPipe27_reg_re <= (OTHERS => to_signed(16#0000#, 16));
      multInPipe27_reg_im <= (OTHERS => to_signed(16#0000#, 16));
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        multInPipe27_reg_im(0) <= dataDelay26_im;
        multInPipe27_reg_im(1) <= multInPipe27_reg_im(0);
        multInPipe27_reg_re(0) <= dataDelay26_re;
        multInPipe27_reg_re(1) <= multInPipe27_reg_re(0);
      END IF;
    END IF;
  END PROCESS multInPipe27_process;

  multInPipe27_re <= multInPipe27_reg_re(1);
  multInPipe27_im <= multInPipe27_reg_im(1);

  coeff27 <= to_signed(16#5A82#, 16);

  mulOutput_re_52 <= multInPipe27_re * coeff27;
  mulOutput_im_52 <= multInPipe27_im * coeff27;

  HwModeRegister_53_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      mulOutput_re_53 <= to_signed(0, 32);
      mulOutput_im_53 <= to_signed(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        mulOutput_re_53 <= mulOutput_re_52;
        mulOutput_im_53 <= mulOutput_im_52;
      END IF;
    END IF;
  END PROCESS HwModeRegister_53_process;


  alpha_add_add_cast_104 <= resize(sum26_re_2, 37);
  alpha_add_add_cast_105 <= resize(mulOutput_re_53, 37);
  sum27_re <= alpha_add_add_cast_104 + alpha_add_add_cast_105;
  alpha_add_add_cast_106 <= resize(sum26_im_2, 37);
  alpha_add_add_cast_107 <= resize(mulOutput_im_53, 37);
  sum27_im <= alpha_add_add_cast_106 + alpha_add_add_cast_107;

  sum27_re_1 <= sum27_re(35 DOWNTO 0);
  sum27_im_1 <= sum27_im(35 DOWNTO 0);

  finalSumPipe_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      finalSumPipe_re <= to_signed(0, 36);
      finalSumPipe_im <= to_signed(0, 36);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        finalSumPipe_re <= sum27_re_1;
        finalSumPipe_im <= sum27_im_1;
      END IF;
    END IF;
  END PROCESS finalSumPipe_process;


  converterOut_re <= finalSumPipe_re(29 DOWNTO 15);
  converterOut_im <= finalSumPipe_im(29 DOWNTO 15);

  finalDataPipe_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataOut_re_tmp <= to_signed(16#0000#, 15);
      dataOut_im_tmp <= to_signed(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND finalSumValid = '1' THEN
        dataOut_re_tmp <= converterOut_re;
        dataOut_im_tmp <= converterOut_im;
      END IF;
    END IF;
  END PROCESS finalDataPipe_process;


  dataOut_re <= std_logic_vector(dataOut_re_tmp);

  dataOut_im <= std_logic_vector(dataOut_im_tmp);

  finalValidPipe_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      validOut <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        validOut <= finalSumValid;
      END IF;
    END IF;
  END PROCESS finalValidPipe_process;


END rtl;

