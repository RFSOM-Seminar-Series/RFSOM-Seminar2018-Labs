-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\combinedTxRx_ExternalMode\CombinedT_ip_src_Subsystem_block.vhd
-- Created: 2018-02-01 13:20:10
-- 
-- Generated by MATLAB 9.3 and HDL Coder 3.11
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: CombinedT_ip_src_Subsystem_block
-- Source Path: combinedTxRx_ExternalMode/Combined TX and RX/Transmitter HDL/Subsystem
-- Hierarchy Level: 2
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.CombinedT_ip_src_Combined_TX_and_RX_pkg.ALL;

ENTITY CombinedT_ip_src_Subsystem_block IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        enb_1_4_1                         :   IN    std_logic;
        In1                               :   IN    std_logic_vector(63 DOWNTO 0);  -- ufix64
        Out1                              :   OUT   std_logic_vector(63 DOWNTO 0)  -- ufix64
        );
END CombinedT_ip_src_Subsystem_block;


ARCHITECTURE rtl OF CombinedT_ip_src_Subsystem_block IS

  -- Signals
  SIGNAL In1_unsigned                     : unsigned(63 DOWNTO 0);  -- ufix64
  SIGNAL In1_tap1                         : unsigned(63 DOWNTO 0);  -- ufix64
  SIGNAL In1_tap2                         : unsigned(63 DOWNTO 0);  -- ufix64
  SIGNAL In1_tap3                         : unsigned(63 DOWNTO 0);  -- ufix64
  SIGNAL Tapped_Delay_out1                : vector_of_unsigned64(0 TO 3);  -- ufix64 [4]
  SIGNAL Downsample5_bypass_reg           : vector_of_unsigned64(0 TO 3);  -- ufix64 [4]
  SIGNAL Downsample5_out1                 : vector_of_unsigned64(0 TO 3);  -- ufix64 [4]
  SIGNAL Sum_of_Elements_add_temp         : unsigned(63 DOWNTO 0);  -- ufix64
  SIGNAL Sum_of_Elements_add_temp_1       : unsigned(63 DOWNTO 0);  -- ufix64
  SIGNAL Sum_of_Elements_out1             : unsigned(63 DOWNTO 0);  -- ufix64

BEGIN
  In1_unsigned <= unsigned(In1);

  Tapped_Delay_tap1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      In1_tap1 <= to_unsigned(0, 64);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        In1_tap1 <= In1_unsigned;
      END IF;
    END IF;
  END PROCESS Tapped_Delay_tap1_process;


  Tapped_Delay_tap2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      In1_tap2 <= to_unsigned(0, 64);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        In1_tap2 <= In1_tap1;
      END IF;
    END IF;
  END PROCESS Tapped_Delay_tap2_process;


  Tapped_Delay_tap3_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      In1_tap3 <= to_unsigned(0, 64);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        In1_tap3 <= In1_tap2;
      END IF;
    END IF;
  END PROCESS Tapped_Delay_tap3_process;


  Tapped_Delay_out1(0) <= In1_tap3;
  Tapped_Delay_out1(1) <= In1_tap2;
  Tapped_Delay_out1(2) <= In1_tap1;
  Tapped_Delay_out1(3) <= unsigned(In1);

  -- Downsample5: Downsample by 4, Sample offset 0 
  -- Downsample bypass register
  Downsample5_bypass_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Downsample5_bypass_reg <= (OTHERS => to_unsigned(0, 64));
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_4_1 = '1' THEN
        Downsample5_bypass_reg <= Tapped_Delay_out1;
      END IF;
    END IF;
  END PROCESS Downsample5_bypass_process;

  
  Downsample5_out1 <= Tapped_Delay_out1 WHEN enb_1_4_1 = '1' ELSE
      Downsample5_bypass_reg;

  Sum_of_Elements_add_temp <= Downsample5_out1(0) + Downsample5_out1(1);
  Sum_of_Elements_add_temp_1 <= Sum_of_Elements_add_temp + Downsample5_out1(2);
  Sum_of_Elements_out1 <= Sum_of_Elements_add_temp_1 + Downsample5_out1(3);

  Out1 <= std_logic_vector(Sum_of_Elements_out1);

END rtl;

