-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\combinedTxRx_ExternalMode\CombinedT_ip_src_Buffer_Manage.vhd
-- Created: 2018-02-01 13:20:10
-- 
-- Generated by MATLAB 9.3 and HDL Coder 3.11
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: CombinedT_ip_src_Buffer_Manage
-- Source Path: combinedTxRx_ExternalMode/Combined TX and RX/Transmitter HDL/Packet Generation/Payload/HDL Scrambler 
-- 2 bits/Buffer Manag
-- Hierarchy Level: 5
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY CombinedT_ip_src_Buffer_Manage IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb_1_4_0                         :   IN    std_logic;
        bit1                              :   IN    std_logic;
        bit2                              :   IN    std_logic;
        reset_1                           :   IN    std_logic;
        outBuffer                         :   OUT   std_logic_vector(0 TO 6)  -- boolean [7]
        );
END CombinedT_ip_src_Buffer_Manage;


ARCHITECTURE rtl OF CombinedT_ip_src_Buffer_Manage IS

  -- Constants
  CONSTANT nc                             : std_logic_vector(0 TO 6) := 
    ('0', '1', '0', '0', '0', '1', '0');  -- boolean [7]
  CONSTANT init_buffer                    : std_logic_vector(0 TO 6) := 
    ('0', '1', '0', '0', '0', '1', '0');  -- boolean [7]

  -- Signals
  SIGNAL buffer_rsvd                      : std_logic_vector(0 TO 6);  -- boolean [7]
  SIGNAL buffer_next                      : std_logic_vector(0 TO 6);  -- boolean [7]

BEGIN
  RxTxFixedPointLibrary_c20_Buffer_Manage_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      buffer_rsvd <= nc;
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_4_0 = '1' THEN
        buffer_rsvd <= buffer_next;
      END IF;
    END IF;
  END PROCESS RxTxFixedPointLibrary_c20_Buffer_Manage_process;

  RxTxFixedPointLibrary_c20_Buffer_Manage_output : PROCESS (bit1, bit2, reset_1, buffer_rsvd)
  BEGIN
    buffer_next <= buffer_rsvd;
    IF reset_1 = '1' THEN 
      outBuffer <= init_buffer;
      buffer_next <= init_buffer;
      --outBuffer = [init_buffer(3:end),bit1,bit2];
      --buffer = [buffer(3:end),bit1,bit2];    
    ELSE 
      outBuffer(0) <= bit2;
      outBuffer(1) <= bit1;
      buffer_next(0) <= bit2;
      buffer_next(1) <= bit1;
      outBuffer(2 TO 6) <= buffer_rsvd(0 TO 4);
      buffer_next(2 TO 6) <= buffer_rsvd(0 TO 4);
    END IF;
  END PROCESS RxTxFixedPointLibrary_c20_Buffer_Manage_output;


END rtl;

