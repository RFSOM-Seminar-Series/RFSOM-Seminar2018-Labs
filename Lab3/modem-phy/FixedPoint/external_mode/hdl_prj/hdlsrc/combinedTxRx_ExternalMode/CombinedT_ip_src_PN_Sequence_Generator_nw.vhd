-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\combinedTxRx_ExternalMode\CombinedT_ip_src_PN_Sequence_Generator_nw.vhd
-- Created: 2018-02-01 13:20:09
-- 
-- Generated by MATLAB 9.3 and HDL Coder 3.11
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: CombinedT_ip_src_PN_Sequence_Generator_nw
-- Source Path: 
-- Hierarchy Level: 5
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.CombinedT_ip_src_Combined_TX_and_RX_pkg.ALL;

ENTITY CombinedT_ip_src_PN_Sequence_Generator_nw IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        in0                               :   IN    std_logic;
        Enable_out4                       :   IN    std_logic;
        out0                              :   OUT   std_logic_vector(1 DOWNTO 0)  -- ufix2
        );
END CombinedT_ip_src_PN_Sequence_Generator_nw;


ARCHITECTURE rtl OF CombinedT_ip_src_PN_Sequence_Generator_nw IS

  -- Constants
  CONSTANT C_PNGEN_REG_INIT_VAL           : unsigned(4 DOWNTO 0) := 
    "11100";  -- ufix5

  -- Signals
  SIGNAL Trigger                          : std_logic;
  SIGNAL enb_gated                        : std_logic;
  SIGNAL PN_Sequence_Generator_out1       : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL pn_reg                           : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL pn_out                           : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL pn_xorout                        : std_logic_vector(0 TO 1);  -- boolean [2]
  SIGNAL pn_newvalue                      : vector_of_unsigned5(0 TO 2);  -- ufix5 [3]
  SIGNAL pn_value_shifted                 : vector_of_unsigned4(0 TO 1);  -- ufix4_E1 [2]

BEGIN
  Trigger <= in0;

  enb_gated <= Enable_out4 AND enb;

  pn_newvalue(0) <= C_PNGEN_REG_INIT_VAL WHEN ( Trigger = '1' ) ELSE
                    pn_reg;

--**stage 1
  pn_xorout(0) <= pn_newvalue(0)(0) XOR pn_newvalue(0)(1) XOR pn_newvalue(0)(3);

  pn_value_shifted(0) <= pn_newvalue(0)(4 DOWNTO 1);

  pn_newvalue(1) <= pn_xorout(0) & pn_value_shifted(0);

  pn_out(1) <= pn_newvalue(0)(0);

--**stage 2
  pn_xorout(1) <= pn_newvalue(1)(0) XOR pn_newvalue(1)(1) XOR pn_newvalue(1)(3);

  pn_value_shifted(1) <= pn_newvalue(1)(4 DOWNTO 1);

  pn_newvalue(2) <= pn_xorout(1) & pn_value_shifted(1);

  pn_out(0) <= pn_newvalue(1)(0);

  PN_generation_temp_process1 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      pn_reg <= to_unsigned(28, 5);
    ELSIF clk'event AND clk = '1' THEN
      IF enb_gated = '1' THEN
        pn_reg <= pn_newvalue(2);
      END IF;
    END IF; 
  END PROCESS PN_generation_temp_process1;

  PN_Sequence_Generator_out1 <= pn_out;


  out0 <= std_logic_vector(PN_Sequence_Generator_out1);

END rtl;

