-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\combinedTxRx_ExternalMode\CombinedT_ip_src_MATLAB_Function_block2.vhd
-- Created: 2018-02-01 13:20:09
-- 
-- Generated by MATLAB 9.3 and HDL Coder 3.11
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: CombinedT_ip_src_MATLAB_Function_block2
-- Source Path: combinedTxRx_ExternalMode/Combined TX and RX/Receiver HDL/Viterbi Decode/Buffer/MATLAB Function
-- Hierarchy Level: 4
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY CombinedT_ip_src_MATLAB_Function_block2 IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        valid                             :   IN    std_logic;
        start                             :   IN    std_logic;
        crcEnd                            :   IN    std_logic;
        enable                            :   OUT   std_logic
        );
END CombinedT_ip_src_MATLAB_Function_block2;


ARCHITECTURE rtl OF CombinedT_ip_src_MATLAB_Function_block2 IS

  -- Signals
  SIGNAL state                            : std_logic;
  SIGNAL state_next                       : std_logic;

BEGIN
  RxTxFixedPointLibrary_c26_MATLAB_Function_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      state <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        state <= state_next;
      END IF;
    END IF;
  END PROCESS RxTxFixedPointLibrary_c26_MATLAB_Function_process;

  RxTxFixedPointLibrary_c26_MATLAB_Function_output : PROCESS (valid, start, crcEnd, state)
    VARIABLE enable1 : std_logic;
    VARIABLE enable_0 : std_logic;
  BEGIN
    state_next <= state;
    IF start = '1' THEN 
      enable_0 := valid;
      enable <= enable_0;
      state_next <= '1';
    ELSIF crcEnd = '1' THEN 
      enable1 := valid;
      enable <= enable1;
      state_next <= '0';
    ELSE 
      enable <= state AND valid;
    END IF;
  END PROCESS RxTxFixedPointLibrary_c26_MATLAB_Function_output;


END rtl;

