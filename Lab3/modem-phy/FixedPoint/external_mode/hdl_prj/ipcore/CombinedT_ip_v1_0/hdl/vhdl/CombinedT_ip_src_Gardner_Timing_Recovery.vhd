-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\combinedTxRx_ExternalMode\CombinedT_ip_src_Gardner_Timing_Recovery.vhd
-- Created: 2018-02-01 13:20:09
-- 
-- Generated by MATLAB 9.3 and HDL Coder 3.11
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: CombinedT_ip_src_Gardner_Timing_Recovery
-- Source Path: combinedTxRx_ExternalMode/Combined TX and RX/Receiver HDL/Frame Recover/Gardner Timing Recovery
-- Hierarchy Level: 3
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.CombinedT_ip_src_Combined_TX_and_RX_pkg.ALL;

ENTITY CombinedT_ip_src_Gardner_Timing_Recovery IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        In1_re                            :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En13
        In1_im                            :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En13
        Enable                            :   IN    std_logic;
        Out1_re                           :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En10
        Out1_im                           :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En10
        strobe                            :   OUT   std_logic;
        lock                              :   OUT   std_logic
        );
END CombinedT_ip_src_Gardner_Timing_Recovery;


ARCHITECTURE rtl OF CombinedT_ip_src_Gardner_Timing_Recovery IS

  -- Component Declarations
  COMPONENT CombinedT_ip_src_Gardner_TED_Blocks
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          data_re                         :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En10
          data_im                         :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En10
          strobe                          :   IN    std_logic;
          Enable_out2                     :   IN    std_logic;
          e                               :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT CombinedT_ip_src_LoopFilter1
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          e                               :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          Enable_out2                     :   IN    std_logic;
          v                               :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En24
          );
  END COMPONENT;

  COMPONENT CombinedT_ip_src_InterpControl_Blocks1
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          e                               :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En24
          Enable_out2                     :   IN    std_logic;
          strobe                          :   OUT   std_logic;
          mu                              :   OUT   std_logic_vector(14 DOWNTO 0)  -- ufix15_En14
          );
  END COMPONENT;

  COMPONENT CombinedT_ip_src_Interpolator
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1_re                          :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En13
          In1_im                          :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En13
          mu                              :   IN    std_logic_vector(14 DOWNTO 0);  -- ufix15_En14
          Enable_out2                     :   IN    std_logic;
          Out1_re                         :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En10
          Out1_im                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En10
          );
  END COMPONENT;

  COMPONENT CombinedT_ip_src_TED_Lock_Detector
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          ted                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          Enable_out2                     :   IN    std_logic;
          lock                            :   OUT   std_logic
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : CombinedT_ip_src_Gardner_TED_Blocks
    USE ENTITY work.CombinedT_ip_src_Gardner_TED_Blocks(rtl);

  FOR ALL : CombinedT_ip_src_LoopFilter1
    USE ENTITY work.CombinedT_ip_src_LoopFilter1(rtl);

  FOR ALL : CombinedT_ip_src_InterpControl_Blocks1
    USE ENTITY work.CombinedT_ip_src_InterpControl_Blocks1(rtl);

  FOR ALL : CombinedT_ip_src_Interpolator
    USE ENTITY work.CombinedT_ip_src_Interpolator(rtl);

  FOR ALL : CombinedT_ip_src_TED_Lock_Detector
    USE ENTITY work.CombinedT_ip_src_TED_Lock_Detector(rtl);

  -- Signals
  SIGNAL Enable_out2                      : std_logic;
  SIGNAL In1_re_signed                    : signed(15 DOWNTO 0);  -- sfix16_En13
  SIGNAL In1_im_signed                    : signed(15 DOWNTO 0);  -- sfix16_En13
  SIGNAL enb_gated                        : std_logic;
  SIGNAL Delay2_reg_re                    : vector_of_signed16(0 TO 5);  -- sfix16_En13 [6]
  SIGNAL Delay2_reg_im                    : vector_of_signed16(0 TO 5);  -- sfix16_En13 [6]
  SIGNAL Delay2_out1_re                   : signed(15 DOWNTO 0);  -- sfix16_En13
  SIGNAL Delay2_out1_im                   : signed(15 DOWNTO 0);  -- sfix16_En13
  SIGNAL enb_gated_1                      : std_logic;
  SIGNAL enb_gated_2                      : std_logic;
  SIGNAL InterpControl_Blocks1_out1       : std_logic;
  SIGNAL Delay1_out1                      : std_logic;
  SIGNAL Interpolator_out1_re             : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Interpolator_out1_im             : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Gardner_TED_Blocks_out1          : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL LoopFilter1_out1                 : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL InterpControl_Blocks1_out2       : std_logic_vector(14 DOWNTO 0);  -- ufix15
  SIGNAL InterpControl_Blocks1_out2_unsigned : unsigned(14 DOWNTO 0);  -- ufix15_En14
  SIGNAL Delay_out1                       : unsigned(14 DOWNTO 0);  -- ufix15_En14
  SIGNAL TED_Lock_Detector_out1           : std_logic;

BEGIN
  u_Gardner_TED_Blocks : CombinedT_ip_src_Gardner_TED_Blocks
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              data_re => Interpolator_out1_re,  -- sfix16_En10
              data_im => Interpolator_out1_im,  -- sfix16_En10
              strobe => Delay1_out1,
              Enable_out2 => Enable_out2,
              e => Gardner_TED_Blocks_out1  -- sfix16_En15
              );

  u_LoopFilter1 : CombinedT_ip_src_LoopFilter1
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              e => Gardner_TED_Blocks_out1,  -- sfix16_En15
              Enable_out2 => Enable_out2,
              v => LoopFilter1_out1  -- sfix16_En24
              );

  u_InterpControl_Blocks1 : CombinedT_ip_src_InterpControl_Blocks1
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              e => LoopFilter1_out1,  -- sfix16_En24
              Enable_out2 => Enable_out2,
              strobe => InterpControl_Blocks1_out1,
              mu => InterpControl_Blocks1_out2  -- ufix15_En14
              );

  u_Interpolator : CombinedT_ip_src_Interpolator
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1_re => std_logic_vector(Delay2_out1_re),  -- sfix16_En13
              In1_im => std_logic_vector(Delay2_out1_im),  -- sfix16_En13
              mu => std_logic_vector(Delay_out1),  -- ufix15_En14
              Enable_out2 => Enable_out2,
              Out1_re => Interpolator_out1_re,  -- sfix16_En10
              Out1_im => Interpolator_out1_im  -- sfix16_En10
              );

  u_TED_Lock_Detector : CombinedT_ip_src_TED_Lock_Detector
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              ted => Gardner_TED_Blocks_out1,  -- sfix16_En15
              Enable_out2 => Enable_out2,
              lock => TED_Lock_Detector_out1
              );

  Enable_out2 <= Enable;

  In1_re_signed <= signed(In1_re);

  In1_im_signed <= signed(In1_im);

  enb_gated <= Enable_out2 AND enb;

  Delay2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay2_reg_re <= (OTHERS => to_signed(16#0000#, 16));
      Delay2_reg_im <= (OTHERS => to_signed(16#0000#, 16));
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_gated = '1' THEN
        Delay2_reg_im(0) <= In1_im_signed;
        Delay2_reg_im(1 TO 5) <= Delay2_reg_im(0 TO 4);
        Delay2_reg_re(0) <= In1_re_signed;
        Delay2_reg_re(1 TO 5) <= Delay2_reg_re(0 TO 4);
      END IF;
    END IF;
  END PROCESS Delay2_process;

  Delay2_out1_re <= Delay2_reg_re(5);
  Delay2_out1_im <= Delay2_reg_im(5);

  enb_gated_1 <= Enable_out2 AND enb;

  enb_gated_2 <= Enable_out2 AND enb;

  Delay1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay1_out1 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_gated_1 = '1' THEN
        Delay1_out1 <= InterpControl_Blocks1_out1;
      END IF;
    END IF;
  END PROCESS Delay1_process;


  InterpControl_Blocks1_out2_unsigned <= unsigned(InterpControl_Blocks1_out2);

  Delay_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay_out1 <= to_unsigned(16#0000#, 15);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_gated_2 = '1' THEN
        Delay_out1 <= InterpControl_Blocks1_out2_unsigned;
      END IF;
    END IF;
  END PROCESS Delay_process;


  Out1_re <= Interpolator_out1_re;

  Out1_im <= Interpolator_out1_im;

  strobe <= Delay1_out1;

  lock <= TED_Lock_Detector_out1;

END rtl;

