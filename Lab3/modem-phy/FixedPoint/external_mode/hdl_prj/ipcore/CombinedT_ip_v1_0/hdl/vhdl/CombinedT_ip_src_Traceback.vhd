-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\combinedTxRx_ExternalMode\CombinedT_ip_src_Traceback.vhd
-- Created: 2018-02-01 13:20:10
-- 
-- Generated by MATLAB 9.3 and HDL Coder 3.11
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: CombinedT_ip_src_Traceback
-- Source Path: combinedTxRx_ExternalMode/Combined TX and RX/Receiver HDL/Viterbi Decode/Viterbi Decoder/Traceback
-- Hierarchy Level: 4
-- 
-- Traceback Decoding
-- Connects traceback units and adds 8 pipeline registers
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY CombinedT_ip_src_Traceback IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        dec                               :   IN    std_logic_vector(0 TO 63);  -- ufix1 [64]
        idx                               :   IN    std_logic_vector(5 DOWNTO 0);  -- ufix6
        tb_rst                            :   IN    std_logic;  -- ufix1
        decoded                           :   OUT   std_logic  -- ufix1
        );
END CombinedT_ip_src_Traceback;


ARCHITECTURE rtl OF CombinedT_ip_src_Traceback IS

  -- Component Declarations
  COMPONENT CombinedT_ip_src_TracebackUnit
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          dec_in                          :   IN    std_logic_vector(0 TO 63);  -- ufix1 [64]
          idx_in                          :   IN    std_logic_vector(5 DOWNTO 0);  -- ufix6
          tb_reset                        :   IN    std_logic;  -- ufix1
          dec_out                         :   OUT   std_logic_vector(0 TO 63);  -- ufix1 [64]
          idx_out                         :   OUT   std_logic_vector(5 DOWNTO 0)  -- ufix6
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : CombinedT_ip_src_TracebackUnit
    USE ENTITY work.CombinedT_ip_src_TracebackUnit(rtl);

  -- Signals
  SIGNAL rst_delay_register_reg           : std_logic_vector(0 TO 10);  -- ufix1 [11]
  SIGNAL tb_rst_delay                     : std_logic;  -- ufix1
  SIGNAL rst_tapdelay_register_reg        : std_logic_vector(0 TO 7);  -- ufix1 [8]
  SIGNAL tb_rst_tapdelay                  : std_logic_vector(0 TO 8);  -- ufix1 [9]
  SIGNAL tb_rst_tapdelay_8                : std_logic;  -- ufix1
  SIGNAL tb_rst_tapdelay_7                : std_logic;  -- ufix1
  SIGNAL tb_rst_tapdelay_6                : std_logic;  -- ufix1
  SIGNAL tb_rst_tapdelay_5                : std_logic;  -- ufix1
  SIGNAL tb_rst_tapdelay_4                : std_logic;  -- ufix1
  SIGNAL tb_rst_tapdelay_3                : std_logic;  -- ufix1
  SIGNAL tb_rst_tapdelay_2                : std_logic;  -- ufix1
  SIGNAL tb_rst_tapdelay_1                : std_logic;  -- ufix1
  SIGNAL dec1                             : std_logic_vector(0 TO 63);  -- ufix1 [64]
  SIGNAL idx1                             : std_logic_vector(5 DOWNTO 0);  -- ufix6
  SIGNAL dec2                             : std_logic_vector(0 TO 63);  -- ufix1 [64]
  SIGNAL idx2                             : std_logic_vector(5 DOWNTO 0);  -- ufix6
  SIGNAL dec3                             : std_logic_vector(0 TO 63);  -- ufix1 [64]
  SIGNAL idx3                             : std_logic_vector(5 DOWNTO 0);  -- ufix6
  SIGNAL dec4                             : std_logic_vector(0 TO 63);  -- ufix1 [64]
  SIGNAL idx4                             : std_logic_vector(5 DOWNTO 0);  -- ufix6
  SIGNAL idx4_unsigned                    : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL decpipereg1                      : std_logic_vector(0 TO 63);  -- ufix1 [64]
  SIGNAL idxpipereg1                      : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL dec5                             : std_logic_vector(0 TO 63);  -- ufix1 [64]
  SIGNAL idx5                             : std_logic_vector(5 DOWNTO 0);  -- ufix6
  SIGNAL dec6                             : std_logic_vector(0 TO 63);  -- ufix1 [64]
  SIGNAL idx6                             : std_logic_vector(5 DOWNTO 0);  -- ufix6
  SIGNAL dec7                             : std_logic_vector(0 TO 63);  -- ufix1 [64]
  SIGNAL idx7                             : std_logic_vector(5 DOWNTO 0);  -- ufix6
  SIGNAL dec8                             : std_logic_vector(0 TO 63);  -- ufix1 [64]
  SIGNAL idx8                             : std_logic_vector(5 DOWNTO 0);  -- ufix6
  SIGNAL idx8_unsigned                    : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL decpipereg2                      : std_logic_vector(0 TO 63);  -- ufix1 [64]
  SIGNAL idxpipereg2                      : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL dec9                             : std_logic_vector(0 TO 63);  -- ufix1 [64]
  SIGNAL idx9                             : std_logic_vector(5 DOWNTO 0);  -- ufix6
  SIGNAL dec10                            : std_logic_vector(0 TO 63);  -- ufix1 [64]
  SIGNAL idx10                            : std_logic_vector(5 DOWNTO 0);  -- ufix6
  SIGNAL dec11                            : std_logic_vector(0 TO 63);  -- ufix1 [64]
  SIGNAL idx11                            : std_logic_vector(5 DOWNTO 0);  -- ufix6
  SIGNAL dec12                            : std_logic_vector(0 TO 63);  -- ufix1 [64]
  SIGNAL idx12                            : std_logic_vector(5 DOWNTO 0);  -- ufix6
  SIGNAL idx12_unsigned                   : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL decpipereg3                      : std_logic_vector(0 TO 63);  -- ufix1 [64]
  SIGNAL idxpipereg3                      : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL dec13                            : std_logic_vector(0 TO 63);  -- ufix1 [64]
  SIGNAL idx13                            : std_logic_vector(5 DOWNTO 0);  -- ufix6
  SIGNAL dec14                            : std_logic_vector(0 TO 63);  -- ufix1 [64]
  SIGNAL idx14                            : std_logic_vector(5 DOWNTO 0);  -- ufix6
  SIGNAL dec15                            : std_logic_vector(0 TO 63);  -- ufix1 [64]
  SIGNAL idx15                            : std_logic_vector(5 DOWNTO 0);  -- ufix6
  SIGNAL dec16                            : std_logic_vector(0 TO 63);  -- ufix1 [64]
  SIGNAL idx16                            : std_logic_vector(5 DOWNTO 0);  -- ufix6
  SIGNAL idx16_unsigned                   : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL decpipereg4                      : std_logic_vector(0 TO 63);  -- ufix1 [64]
  SIGNAL idxpipereg4                      : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL dec17                            : std_logic_vector(0 TO 63);  -- ufix1 [64]
  SIGNAL idx17                            : std_logic_vector(5 DOWNTO 0);  -- ufix6
  SIGNAL dec18                            : std_logic_vector(0 TO 63);  -- ufix1 [64]
  SIGNAL idx18                            : std_logic_vector(5 DOWNTO 0);  -- ufix6
  SIGNAL dec19                            : std_logic_vector(0 TO 63);  -- ufix1 [64]
  SIGNAL idx19                            : std_logic_vector(5 DOWNTO 0);  -- ufix6
  SIGNAL dec20                            : std_logic_vector(0 TO 63);  -- ufix1 [64]
  SIGNAL idx20                            : std_logic_vector(5 DOWNTO 0);  -- ufix6
  SIGNAL idx20_unsigned                   : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL decpipereg5                      : std_logic_vector(0 TO 63);  -- ufix1 [64]
  SIGNAL idxpipereg5                      : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL dec21                            : std_logic_vector(0 TO 63);  -- ufix1 [64]
  SIGNAL idx21                            : std_logic_vector(5 DOWNTO 0);  -- ufix6
  SIGNAL dec22                            : std_logic_vector(0 TO 63);  -- ufix1 [64]
  SIGNAL idx22                            : std_logic_vector(5 DOWNTO 0);  -- ufix6
  SIGNAL dec23                            : std_logic_vector(0 TO 63);  -- ufix1 [64]
  SIGNAL idx23                            : std_logic_vector(5 DOWNTO 0);  -- ufix6
  SIGNAL dec24                            : std_logic_vector(0 TO 63);  -- ufix1 [64]
  SIGNAL idx24                            : std_logic_vector(5 DOWNTO 0);  -- ufix6
  SIGNAL idx24_unsigned                   : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL decpipereg6                      : std_logic_vector(0 TO 63);  -- ufix1 [64]
  SIGNAL idxpipereg6                      : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL dec25                            : std_logic_vector(0 TO 63);  -- ufix1 [64]
  SIGNAL idx25                            : std_logic_vector(5 DOWNTO 0);  -- ufix6
  SIGNAL dec26                            : std_logic_vector(0 TO 63);  -- ufix1 [64]
  SIGNAL idx26                            : std_logic_vector(5 DOWNTO 0);  -- ufix6
  SIGNAL dec27                            : std_logic_vector(0 TO 63);  -- ufix1 [64]
  SIGNAL idx27                            : std_logic_vector(5 DOWNTO 0);  -- ufix6
  SIGNAL dec28                            : std_logic_vector(0 TO 63);  -- ufix1 [64]
  SIGNAL idx28                            : std_logic_vector(5 DOWNTO 0);  -- ufix6
  SIGNAL idx28_unsigned                   : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL decpipereg7                      : std_logic_vector(0 TO 63);  -- ufix1 [64]
  SIGNAL idxpipereg7                      : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL dec29                            : std_logic_vector(0 TO 63);  -- ufix1 [64]
  SIGNAL idx29                            : std_logic_vector(5 DOWNTO 0);  -- ufix6
  SIGNAL dec30                            : std_logic_vector(0 TO 63);  -- ufix1 [64]
  SIGNAL idx30                            : std_logic_vector(5 DOWNTO 0);  -- ufix6
  SIGNAL dec31                            : std_logic_vector(0 TO 63);  -- ufix1 [64]
  SIGNAL idx31                            : std_logic_vector(5 DOWNTO 0);  -- ufix6
  SIGNAL dec32                            : std_logic_vector(0 TO 63);  -- ufix1 [64]
  SIGNAL idx32                            : std_logic_vector(5 DOWNTO 0);  -- ufix6
  SIGNAL idx32_unsigned                   : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL decpipereg8                      : std_logic_vector(0 TO 63);  -- ufix1 [64]
  SIGNAL idxpipereg8                      : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL dec33                            : std_logic_vector(0 TO 63);  -- ufix1 [64]
  SIGNAL idx33                            : std_logic_vector(5 DOWNTO 0);  -- ufix6
  SIGNAL dec34                            : std_logic_vector(0 TO 63);  -- ufix1 [64]
  SIGNAL idx34                            : std_logic_vector(5 DOWNTO 0);  -- ufix6
  SIGNAL idx34_unsigned                   : unsigned(5 DOWNTO 0);  -- ufix6

BEGIN
  -- Traceback Component1
  u_TracebackComp_inst1 : CombinedT_ip_src_TracebackUnit
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              dec_in => dec,  -- ufix1 [64]
              idx_in => idx,  -- ufix6
              tb_reset => tb_rst_tapdelay(0),  -- ufix1
              dec_out => dec1,  -- ufix1 [64]
              idx_out => idx1  -- ufix6
              );

  -- Traceback Component2
  u_TracebackComp_inst2 : CombinedT_ip_src_TracebackUnit
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              dec_in => dec1,  -- ufix1 [64]
              idx_in => idx1,  -- ufix6
              tb_reset => tb_rst_tapdelay(0),  -- ufix1
              dec_out => dec2,  -- ufix1 [64]
              idx_out => idx2  -- ufix6
              );

  -- Traceback Component3
  u_TracebackComp_inst3 : CombinedT_ip_src_TracebackUnit
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              dec_in => dec2,  -- ufix1 [64]
              idx_in => idx2,  -- ufix6
              tb_reset => tb_rst_tapdelay(0),  -- ufix1
              dec_out => dec3,  -- ufix1 [64]
              idx_out => idx3  -- ufix6
              );

  -- Traceback Component4
  u_TracebackComp_inst4 : CombinedT_ip_src_TracebackUnit
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              dec_in => dec3,  -- ufix1 [64]
              idx_in => idx3,  -- ufix6
              tb_reset => tb_rst_tapdelay(0),  -- ufix1
              dec_out => dec4,  -- ufix1 [64]
              idx_out => idx4  -- ufix6
              );

  -- Traceback Component5
  u_TracebackComp_inst5 : CombinedT_ip_src_TracebackUnit
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              dec_in => decpipereg1,  -- ufix1 [64]
              idx_in => std_logic_vector(idxpipereg1),  -- ufix6
              tb_reset => tb_rst_tapdelay(1),  -- ufix1
              dec_out => dec5,  -- ufix1 [64]
              idx_out => idx5  -- ufix6
              );

  -- Traceback Component6
  u_TracebackComp_inst6 : CombinedT_ip_src_TracebackUnit
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              dec_in => dec5,  -- ufix1 [64]
              idx_in => idx5,  -- ufix6
              tb_reset => tb_rst_tapdelay(1),  -- ufix1
              dec_out => dec6,  -- ufix1 [64]
              idx_out => idx6  -- ufix6
              );

  -- Traceback Component7
  u_TracebackComp_inst7 : CombinedT_ip_src_TracebackUnit
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              dec_in => dec6,  -- ufix1 [64]
              idx_in => idx6,  -- ufix6
              tb_reset => tb_rst_tapdelay(1),  -- ufix1
              dec_out => dec7,  -- ufix1 [64]
              idx_out => idx7  -- ufix6
              );

  -- Traceback Component8
  u_TracebackComp_inst8 : CombinedT_ip_src_TracebackUnit
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              dec_in => dec7,  -- ufix1 [64]
              idx_in => idx7,  -- ufix6
              tb_reset => tb_rst_tapdelay(1),  -- ufix1
              dec_out => dec8,  -- ufix1 [64]
              idx_out => idx8  -- ufix6
              );

  -- Traceback Component9
  u_TracebackComp_inst9 : CombinedT_ip_src_TracebackUnit
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              dec_in => decpipereg2,  -- ufix1 [64]
              idx_in => std_logic_vector(idxpipereg2),  -- ufix6
              tb_reset => tb_rst_tapdelay(2),  -- ufix1
              dec_out => dec9,  -- ufix1 [64]
              idx_out => idx9  -- ufix6
              );

  -- Traceback Component10
  u_TracebackComp_inst10 : CombinedT_ip_src_TracebackUnit
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              dec_in => dec9,  -- ufix1 [64]
              idx_in => idx9,  -- ufix6
              tb_reset => tb_rst_tapdelay(2),  -- ufix1
              dec_out => dec10,  -- ufix1 [64]
              idx_out => idx10  -- ufix6
              );

  -- Traceback Component11
  u_TracebackComp_inst11 : CombinedT_ip_src_TracebackUnit
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              dec_in => dec10,  -- ufix1 [64]
              idx_in => idx10,  -- ufix6
              tb_reset => tb_rst_tapdelay(2),  -- ufix1
              dec_out => dec11,  -- ufix1 [64]
              idx_out => idx11  -- ufix6
              );

  -- Traceback Component12
  u_TracebackComp_inst12 : CombinedT_ip_src_TracebackUnit
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              dec_in => dec11,  -- ufix1 [64]
              idx_in => idx11,  -- ufix6
              tb_reset => tb_rst_tapdelay(2),  -- ufix1
              dec_out => dec12,  -- ufix1 [64]
              idx_out => idx12  -- ufix6
              );

  -- Traceback Component13
  u_TracebackComp_inst13 : CombinedT_ip_src_TracebackUnit
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              dec_in => decpipereg3,  -- ufix1 [64]
              idx_in => std_logic_vector(idxpipereg3),  -- ufix6
              tb_reset => tb_rst_tapdelay(3),  -- ufix1
              dec_out => dec13,  -- ufix1 [64]
              idx_out => idx13  -- ufix6
              );

  -- Traceback Component14
  u_TracebackComp_inst14 : CombinedT_ip_src_TracebackUnit
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              dec_in => dec13,  -- ufix1 [64]
              idx_in => idx13,  -- ufix6
              tb_reset => tb_rst_tapdelay(3),  -- ufix1
              dec_out => dec14,  -- ufix1 [64]
              idx_out => idx14  -- ufix6
              );

  -- Traceback Component15
  u_TracebackComp_inst15 : CombinedT_ip_src_TracebackUnit
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              dec_in => dec14,  -- ufix1 [64]
              idx_in => idx14,  -- ufix6
              tb_reset => tb_rst_tapdelay(3),  -- ufix1
              dec_out => dec15,  -- ufix1 [64]
              idx_out => idx15  -- ufix6
              );

  -- Traceback Component16
  u_TracebackComp_inst16 : CombinedT_ip_src_TracebackUnit
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              dec_in => dec15,  -- ufix1 [64]
              idx_in => idx15,  -- ufix6
              tb_reset => tb_rst_tapdelay(3),  -- ufix1
              dec_out => dec16,  -- ufix1 [64]
              idx_out => idx16  -- ufix6
              );

  -- Traceback Component17
  u_TracebackComp_inst17 : CombinedT_ip_src_TracebackUnit
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              dec_in => decpipereg4,  -- ufix1 [64]
              idx_in => std_logic_vector(idxpipereg4),  -- ufix6
              tb_reset => tb_rst_tapdelay(4),  -- ufix1
              dec_out => dec17,  -- ufix1 [64]
              idx_out => idx17  -- ufix6
              );

  -- Traceback Component18
  u_TracebackComp_inst18 : CombinedT_ip_src_TracebackUnit
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              dec_in => dec17,  -- ufix1 [64]
              idx_in => idx17,  -- ufix6
              tb_reset => tb_rst_tapdelay(4),  -- ufix1
              dec_out => dec18,  -- ufix1 [64]
              idx_out => idx18  -- ufix6
              );

  -- Traceback Component19
  u_TracebackComp_inst19 : CombinedT_ip_src_TracebackUnit
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              dec_in => dec18,  -- ufix1 [64]
              idx_in => idx18,  -- ufix6
              tb_reset => tb_rst_tapdelay(4),  -- ufix1
              dec_out => dec19,  -- ufix1 [64]
              idx_out => idx19  -- ufix6
              );

  -- Traceback Component20
  u_TracebackComp_inst20 : CombinedT_ip_src_TracebackUnit
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              dec_in => dec19,  -- ufix1 [64]
              idx_in => idx19,  -- ufix6
              tb_reset => tb_rst_tapdelay(4),  -- ufix1
              dec_out => dec20,  -- ufix1 [64]
              idx_out => idx20  -- ufix6
              );

  -- Traceback Component21
  u_TracebackComp_inst21 : CombinedT_ip_src_TracebackUnit
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              dec_in => decpipereg5,  -- ufix1 [64]
              idx_in => std_logic_vector(idxpipereg5),  -- ufix6
              tb_reset => tb_rst_tapdelay(5),  -- ufix1
              dec_out => dec21,  -- ufix1 [64]
              idx_out => idx21  -- ufix6
              );

  -- Traceback Component22
  u_TracebackComp_inst22 : CombinedT_ip_src_TracebackUnit
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              dec_in => dec21,  -- ufix1 [64]
              idx_in => idx21,  -- ufix6
              tb_reset => tb_rst_tapdelay(5),  -- ufix1
              dec_out => dec22,  -- ufix1 [64]
              idx_out => idx22  -- ufix6
              );

  -- Traceback Component23
  u_TracebackComp_inst23 : CombinedT_ip_src_TracebackUnit
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              dec_in => dec22,  -- ufix1 [64]
              idx_in => idx22,  -- ufix6
              tb_reset => tb_rst_tapdelay(5),  -- ufix1
              dec_out => dec23,  -- ufix1 [64]
              idx_out => idx23  -- ufix6
              );

  -- Traceback Component24
  u_TracebackComp_inst24 : CombinedT_ip_src_TracebackUnit
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              dec_in => dec23,  -- ufix1 [64]
              idx_in => idx23,  -- ufix6
              tb_reset => tb_rst_tapdelay(5),  -- ufix1
              dec_out => dec24,  -- ufix1 [64]
              idx_out => idx24  -- ufix6
              );

  -- Traceback Component25
  u_TracebackComp_inst25 : CombinedT_ip_src_TracebackUnit
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              dec_in => decpipereg6,  -- ufix1 [64]
              idx_in => std_logic_vector(idxpipereg6),  -- ufix6
              tb_reset => tb_rst_tapdelay(6),  -- ufix1
              dec_out => dec25,  -- ufix1 [64]
              idx_out => idx25  -- ufix6
              );

  -- Traceback Component26
  u_TracebackComp_inst26 : CombinedT_ip_src_TracebackUnit
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              dec_in => dec25,  -- ufix1 [64]
              idx_in => idx25,  -- ufix6
              tb_reset => tb_rst_tapdelay(6),  -- ufix1
              dec_out => dec26,  -- ufix1 [64]
              idx_out => idx26  -- ufix6
              );

  -- Traceback Component27
  u_TracebackComp_inst27 : CombinedT_ip_src_TracebackUnit
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              dec_in => dec26,  -- ufix1 [64]
              idx_in => idx26,  -- ufix6
              tb_reset => tb_rst_tapdelay(6),  -- ufix1
              dec_out => dec27,  -- ufix1 [64]
              idx_out => idx27  -- ufix6
              );

  -- Traceback Component28
  u_TracebackComp_inst28 : CombinedT_ip_src_TracebackUnit
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              dec_in => dec27,  -- ufix1 [64]
              idx_in => idx27,  -- ufix6
              tb_reset => tb_rst_tapdelay(6),  -- ufix1
              dec_out => dec28,  -- ufix1 [64]
              idx_out => idx28  -- ufix6
              );

  -- Traceback Component29
  u_TracebackComp_inst29 : CombinedT_ip_src_TracebackUnit
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              dec_in => decpipereg7,  -- ufix1 [64]
              idx_in => std_logic_vector(idxpipereg7),  -- ufix6
              tb_reset => tb_rst_tapdelay(7),  -- ufix1
              dec_out => dec29,  -- ufix1 [64]
              idx_out => idx29  -- ufix6
              );

  -- Traceback Component30
  u_TracebackComp_inst30 : CombinedT_ip_src_TracebackUnit
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              dec_in => dec29,  -- ufix1 [64]
              idx_in => idx29,  -- ufix6
              tb_reset => tb_rst_tapdelay(7),  -- ufix1
              dec_out => dec30,  -- ufix1 [64]
              idx_out => idx30  -- ufix6
              );

  -- Traceback Component31
  u_TracebackComp_inst31 : CombinedT_ip_src_TracebackUnit
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              dec_in => dec30,  -- ufix1 [64]
              idx_in => idx30,  -- ufix6
              tb_reset => tb_rst_tapdelay(7),  -- ufix1
              dec_out => dec31,  -- ufix1 [64]
              idx_out => idx31  -- ufix6
              );

  -- Traceback Component32
  u_TracebackComp_inst32 : CombinedT_ip_src_TracebackUnit
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              dec_in => dec31,  -- ufix1 [64]
              idx_in => idx31,  -- ufix6
              tb_reset => tb_rst_tapdelay(7),  -- ufix1
              dec_out => dec32,  -- ufix1 [64]
              idx_out => idx32  -- ufix6
              );

  -- Traceback Component33
  u_TracebackComp_inst33 : CombinedT_ip_src_TracebackUnit
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              dec_in => decpipereg8,  -- ufix1 [64]
              idx_in => std_logic_vector(idxpipereg8),  -- ufix6
              tb_reset => tb_rst_tapdelay(8),  -- ufix1
              dec_out => dec33,  -- ufix1 [64]
              idx_out => idx33  -- ufix6
              );

  -- Traceback Component34
  u_TracebackComp_inst34 : CombinedT_ip_src_TracebackUnit
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              dec_in => dec33,  -- ufix1 [64]
              idx_in => idx33,  -- ufix6
              tb_reset => tb_rst_tapdelay(8),  -- ufix1
              dec_out => dec34,  -- ufix1 [64]
              idx_out => idx34  -- ufix6
              );

  -- Delay the reset signal to match the delays introduced in Branch metric computation and ACS
  rst_delay_register_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      rst_delay_register_reg <= (OTHERS => '0');
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        rst_delay_register_reg(0) <= tb_rst;
        rst_delay_register_reg(1 TO 10) <= rst_delay_register_reg(0 TO 9);
      END IF;
    END IF;
  END PROCESS rst_delay_register_process;

  tb_rst_delay <= rst_delay_register_reg(10);

  -- Tap delay the reset signal to match the extra delays introduced from traceback pipeline registers
  rst_tapdelay_register_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      rst_tapdelay_register_reg <= (OTHERS => '0');
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        rst_tapdelay_register_reg(0) <= tb_rst_delay;
        rst_tapdelay_register_reg(1 TO 7) <= rst_tapdelay_register_reg(0 TO 6);
      END IF;
    END IF;
  END PROCESS rst_tapdelay_register_process;

  tb_rst_tapdelay(0) <= tb_rst_delay;
  tb_rst_tapdelay(1 TO 8) <= rst_tapdelay_register_reg(0 TO 7);

  tb_rst_tapdelay_8 <= tb_rst_tapdelay(8);

  tb_rst_tapdelay_7 <= tb_rst_tapdelay(7);

  tb_rst_tapdelay_6 <= tb_rst_tapdelay(6);

  tb_rst_tapdelay_5 <= tb_rst_tapdelay(5);

  tb_rst_tapdelay_4 <= tb_rst_tapdelay(4);

  tb_rst_tapdelay_3 <= tb_rst_tapdelay(3);

  tb_rst_tapdelay_2 <= tb_rst_tapdelay(2);

  tb_rst_tapdelay_1 <= tb_rst_tapdelay(1);

  idx4_unsigned <= unsigned(idx4);

  -- Decision pipeline register1
  decpipelineregister_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      decpipereg1 <= (OTHERS => '0');
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        IF tb_rst_tapdelay_1 = '1' THEN
          decpipereg1 <= (OTHERS => '0');
        ELSE 
          decpipereg1 <= dec4;
        END IF;
      END IF;
    END IF;
  END PROCESS decpipelineregister_process;


  -- Index pipeline register1
  idxpipelineregister_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      idxpipereg1 <= to_unsigned(16#00#, 6);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        idxpipereg1 <= idx4_unsigned;
      END IF;
    END IF;
  END PROCESS idxpipelineregister_process;


  idx8_unsigned <= unsigned(idx8);

  -- Decision pipeline register2
  decpipelineregister_1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      decpipereg2 <= (OTHERS => '0');
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        IF tb_rst_tapdelay_2 = '1' THEN
          decpipereg2 <= (OTHERS => '0');
        ELSE 
          decpipereg2 <= dec8;
        END IF;
      END IF;
    END IF;
  END PROCESS decpipelineregister_1_process;


  -- Index pipeline register2
  idxpipelineregister_1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      idxpipereg2 <= to_unsigned(16#00#, 6);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        idxpipereg2 <= idx8_unsigned;
      END IF;
    END IF;
  END PROCESS idxpipelineregister_1_process;


  idx12_unsigned <= unsigned(idx12);

  -- Decision pipeline register3
  decpipelineregister_2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      decpipereg3 <= (OTHERS => '0');
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        IF tb_rst_tapdelay_3 = '1' THEN
          decpipereg3 <= (OTHERS => '0');
        ELSE 
          decpipereg3 <= dec12;
        END IF;
      END IF;
    END IF;
  END PROCESS decpipelineregister_2_process;


  -- Index pipeline register3
  idxpipelineregister_2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      idxpipereg3 <= to_unsigned(16#00#, 6);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        idxpipereg3 <= idx12_unsigned;
      END IF;
    END IF;
  END PROCESS idxpipelineregister_2_process;


  idx16_unsigned <= unsigned(idx16);

  -- Decision pipeline register4
  decpipelineregister_3_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      decpipereg4 <= (OTHERS => '0');
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        IF tb_rst_tapdelay_4 = '1' THEN
          decpipereg4 <= (OTHERS => '0');
        ELSE 
          decpipereg4 <= dec16;
        END IF;
      END IF;
    END IF;
  END PROCESS decpipelineregister_3_process;


  -- Index pipeline register4
  idxpipelineregister_3_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      idxpipereg4 <= to_unsigned(16#00#, 6);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        idxpipereg4 <= idx16_unsigned;
      END IF;
    END IF;
  END PROCESS idxpipelineregister_3_process;


  idx20_unsigned <= unsigned(idx20);

  -- Decision pipeline register5
  decpipelineregister_4_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      decpipereg5 <= (OTHERS => '0');
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        IF tb_rst_tapdelay_5 = '1' THEN
          decpipereg5 <= (OTHERS => '0');
        ELSE 
          decpipereg5 <= dec20;
        END IF;
      END IF;
    END IF;
  END PROCESS decpipelineregister_4_process;


  -- Index pipeline register5
  idxpipelineregister_4_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      idxpipereg5 <= to_unsigned(16#00#, 6);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        idxpipereg5 <= idx20_unsigned;
      END IF;
    END IF;
  END PROCESS idxpipelineregister_4_process;


  idx24_unsigned <= unsigned(idx24);

  -- Decision pipeline register6
  decpipelineregister_5_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      decpipereg6 <= (OTHERS => '0');
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        IF tb_rst_tapdelay_6 = '1' THEN
          decpipereg6 <= (OTHERS => '0');
        ELSE 
          decpipereg6 <= dec24;
        END IF;
      END IF;
    END IF;
  END PROCESS decpipelineregister_5_process;


  -- Index pipeline register6
  idxpipelineregister_5_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      idxpipereg6 <= to_unsigned(16#00#, 6);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        idxpipereg6 <= idx24_unsigned;
      END IF;
    END IF;
  END PROCESS idxpipelineregister_5_process;


  idx28_unsigned <= unsigned(idx28);

  -- Decision pipeline register7
  decpipelineregister_6_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      decpipereg7 <= (OTHERS => '0');
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        IF tb_rst_tapdelay_7 = '1' THEN
          decpipereg7 <= (OTHERS => '0');
        ELSE 
          decpipereg7 <= dec28;
        END IF;
      END IF;
    END IF;
  END PROCESS decpipelineregister_6_process;


  -- Index pipeline register7
  idxpipelineregister_6_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      idxpipereg7 <= to_unsigned(16#00#, 6);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        idxpipereg7 <= idx28_unsigned;
      END IF;
    END IF;
  END PROCESS idxpipelineregister_6_process;


  idx32_unsigned <= unsigned(idx32);

  -- Decision pipeline register8
  decpipelineregister_7_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      decpipereg8 <= (OTHERS => '0');
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        IF tb_rst_tapdelay_8 = '1' THEN
          decpipereg8 <= (OTHERS => '0');
        ELSE 
          decpipereg8 <= dec32;
        END IF;
      END IF;
    END IF;
  END PROCESS decpipelineregister_7_process;


  -- Index pipeline register8
  idxpipelineregister_7_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      idxpipereg8 <= to_unsigned(16#00#, 6);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        idxpipereg8 <= idx32_unsigned;
      END IF;
    END IF;
  END PROCESS idxpipelineregister_7_process;


  idx34_unsigned <= unsigned(idx34);

  decoded <= idx34_unsigned(5);

END rtl;

