-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\combinedTxRx_AXIMM\CombinedT_ip_src_Calculate_New_mu.vhd
-- Created: 2018-02-01 18:12:06
-- 
-- Generated by MATLAB 9.3 and HDL Coder 3.11
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: CombinedT_ip_src_Calculate_New_mu
-- Source Path: combinedTxRx_AXIMM/Combined TX and RX/Receiver HDL/Frame Recover/Gardner Timing Recovery/InterpControl_Blocks1/Calculate 
-- New m
-- Hierarchy Level: 5
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY CombinedT_ip_src_Calculate_New_mu IS
  PORT( W                                 :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16_En16
        NCOCounter                        :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16_En16
        mu                                :   OUT   std_logic_vector(14 DOWNTO 0)  -- ufix15_En14
        );
END CombinedT_ip_src_Calculate_New_mu;


ARCHITECTURE rtl OF CombinedT_ip_src_Calculate_New_mu IS

  -- Signals
  SIGNAL W_unsigned                       : unsigned(15 DOWNTO 0);  -- ufix16_En16
  SIGNAL Math_Reciprocal_out1             : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL NCOCounter_unsigned              : unsigned(15 DOWNTO 0);  -- ufix16_En16
  SIGNAL Product_cast                     : signed(16 DOWNTO 0);  -- sfix17_En16
  SIGNAL Product_mul_temp                 : signed(32 DOWNTO 0);  -- sfix33_En28
  SIGNAL Product_cast_1                   : signed(31 DOWNTO 0);  -- sfix32_En28
  SIGNAL Product_out1                     : unsigned(14 DOWNTO 0);  -- ufix15_En14

BEGIN
  -- Good at fixd(0,16,12)

  W_unsigned <= unsigned(W);

  Math_Reciprocal_output : PROCESS (W_unsigned)
    VARIABLE c : unsigned(28 DOWNTO 0);
    VARIABLE div_temp : unsigned(28 DOWNTO 0);
  BEGIN
    IF W_unsigned = to_unsigned(16#0000#, 16) THEN 
      c := to_unsigned(16#1FFFFFFF#, 29);
    ELSE 
      div_temp := to_unsigned(16#10000000#, 29) / W_unsigned;
      c := div_temp;
    END IF;
    IF c(28 DOWNTO 15) /= "00000000000000" THEN 
      Math_Reciprocal_out1 <= X"7FFF";
    ELSE 
      Math_Reciprocal_out1 <= signed(c(15 DOWNTO 0));
    END IF;
  END PROCESS Math_Reciprocal_output;


  NCOCounter_unsigned <= unsigned(NCOCounter);

  Product_cast <= signed(resize(NCOCounter_unsigned, 17));
  Product_mul_temp <= Math_Reciprocal_out1 * Product_cast;
  Product_cast_1 <= Product_mul_temp(31 DOWNTO 0);
  Product_out1 <= unsigned(Product_cast_1(28 DOWNTO 14));

  mu <= std_logic_vector(Product_out1);

END rtl;

