-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\combinedTxRx_AXIMM\CombinedT_ip_src_Map_Symbol.vhd
-- Created: 2018-02-01 18:12:06
-- 
-- Generated by MATLAB 9.3 and HDL Coder 3.11
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: CombinedT_ip_src_Map_Symbol
-- Source Path: combinedTxRx_AXIMM/Combined TX and RX/Receiver HDL/Frame Recover/Equalization and Demodulation/DFE/DFE/Map 
-- Symbo
-- Hierarchy Level: 6
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY CombinedT_ip_src_Map_Symbol IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        In1_re                            :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        In1_im                            :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        training_re                       :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
        training_im                       :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
        reset_1                           :   IN    std_logic;
        Enable_out4                       :   IN    std_logic;
        d_re                              :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
        d_im                              :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
        );
END CombinedT_ip_src_Map_Symbol;


ARCHITECTURE rtl OF CombinedT_ip_src_Map_Symbol IS

  -- Component Declarations
  COMPONENT CombinedT_ip_src_Decision_Directed
    PORT( eqOut_re                        :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          eqOut_im                        :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          decision_re                     :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          decision_im                     :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : CombinedT_ip_src_Decision_Directed
    USE ENTITY work.CombinedT_ip_src_Decision_Directed(rtl);

  -- Signals
  SIGNAL enb_gated                        : std_logic;
  SIGNAL HDL_Counter_out1                 : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL switch_compare_1                 : std_logic;
  SIGNAL training_re_signed               : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL training_im_signed               : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL enb_gated_1                      : std_logic;
  SIGNAL Delay_out1_re                    : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL Delay_out1_im                    : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL Decision_Directed_out1_re        : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Decision_Directed_out1_im        : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Decision_Directed_out1_re_signed : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL Decision_Directed_out1_im_signed : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL Switch_out1_re                   : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL Switch_out1_im                   : signed(15 DOWNTO 0);  -- sfix16_En15

BEGIN
  u_Decision_Directed : CombinedT_ip_src_Decision_Directed
    PORT MAP( eqOut_re => In1_re,  -- sfix16_En14
              eqOut_im => In1_im,  -- sfix16_En14
              decision_re => Decision_Directed_out1_re,  -- sfix16_En15
              decision_im => Decision_Directed_out1_im  -- sfix16_En15
              );

  enb_gated <= Enable_out4 AND enb;

  -- Count limited, Unsigned Counter
  --  initial value   = 0
  --  step value      = 1
  --  count to value  = 262144
  HDL_Counter_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      HDL_Counter_out1 <= to_unsigned(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_gated = '1' THEN
        IF reset_1 = '1' THEN 
          HDL_Counter_out1 <= to_unsigned(0, 32);
        ELSIF HDL_Counter_out1 >= to_unsigned(262144, 32) THEN 
          HDL_Counter_out1 <= to_unsigned(0, 32);
        ELSE 
          HDL_Counter_out1 <= HDL_Counter_out1 + to_unsigned(1, 32);
        END IF;
      END IF;
    END IF;
  END PROCESS HDL_Counter_process;


  
  switch_compare_1 <= '1' WHEN HDL_Counter_out1 > to_unsigned(250, 32) ELSE
      '0';

  training_re_signed <= signed(training_re);

  training_im_signed <= signed(training_im);

  enb_gated_1 <= Enable_out4 AND enb;

  Delay_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay_out1_re <= to_signed(16#0000#, 16);
      Delay_out1_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_gated_1 = '1' THEN
        Delay_out1_re <= training_re_signed;
        Delay_out1_im <= training_im_signed;
      END IF;
    END IF;
  END PROCESS Delay_process;


  Decision_Directed_out1_re_signed <= signed(Decision_Directed_out1_re);

  Decision_Directed_out1_im_signed <= signed(Decision_Directed_out1_im);

  
  Switch_out1_re <= Delay_out1_re WHEN switch_compare_1 = '0' ELSE
      Decision_Directed_out1_re_signed;
  
  Switch_out1_im <= Delay_out1_im WHEN switch_compare_1 = '0' ELSE
      Decision_Directed_out1_im_signed;

  d_re <= std_logic_vector(Switch_out1_re);

  d_im <= std_logic_vector(Switch_out1_im);

END rtl;

