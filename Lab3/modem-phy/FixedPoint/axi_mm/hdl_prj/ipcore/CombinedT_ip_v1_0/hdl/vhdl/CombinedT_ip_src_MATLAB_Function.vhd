-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\combinedTxRx_AXIMM\CombinedT_ip_src_MATLAB_Function.vhd
-- Created: 2018-02-01 18:12:05
-- 
-- Generated by MATLAB 9.3 and HDL Coder 3.11
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: CombinedT_ip_src_MATLAB_Function
-- Source Path: combinedTxRx_AXIMM/Combined TX and RX/Receiver HDL/Frame Recover/Equalization and Demodulation/2 
-- Bit Descrambler/MATLAB Functio
-- Hierarchy Level: 5
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY CombinedT_ip_src_MATLAB_Function IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        bits                              :   IN    std_logic_vector(0 TO 1);  -- boolean [2]
        reset_1                           :   IN    std_logic;
        bufferA                           :   OUT   std_logic_vector(0 TO 6);  -- boolean [7]
        bufferB                           :   OUT   std_logic_vector(0 TO 6)  -- boolean [7]
        );
END CombinedT_ip_src_MATLAB_Function;


ARCHITECTURE rtl OF CombinedT_ip_src_MATLAB_Function IS

  -- Constants
  CONSTANT nc                             : std_logic_vector(0 TO 6) := 
    ('0', '1', '0', '0', '0', '1', '0');  -- boolean [7]
  CONSTANT initBuffer                     : std_logic_vector(0 TO 6) := 
    ('0', '1', '0', '0', '0', '1', '0');  -- boolean [7]
  CONSTANT nc_0                           : std_logic_vector(0 TO 5) := 
    ('0', '1', '0', '0', '0', '1');  -- boolean [6]
  CONSTANT nc_1_1                         : std_logic_vector(0 TO 4) := 
    ('0', '1', '0', '0', '0');  -- boolean [5]

  -- Signals
  SIGNAL buffer_rsvd                      : std_logic_vector(0 TO 6);  -- boolean [7]
  SIGNAL buffer_next                      : std_logic_vector(0 TO 6);  -- boolean [7]

BEGIN
  RxTxFixedPointLibrary_c10_MATLAB_Function_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      buffer_rsvd <= nc;
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        buffer_rsvd <= buffer_next;
      END IF;
    END IF;
  END PROCESS RxTxFixedPointLibrary_c10_MATLAB_Function_process;

  RxTxFixedPointLibrary_c10_MATLAB_Function_output : PROCESS (bits, reset_1, buffer_rsvd)
  BEGIN
    buffer_next <= buffer_rsvd;
    -- Constants
    -- Async
    -- Reset/Sync
    IF reset_1 = '1' THEN 
      bufferA <= initBuffer;
      bufferB(0) <= bits(0);

      FOR t_0 IN 0 TO 5 LOOP
        bufferB(t_0 + 1) <= nc_0(t_0);
      END LOOP;

      buffer_next(0) <= bits(1);
      buffer_next(1) <= bits(0);

      FOR t_1 IN 0 TO 4 LOOP
        buffer_next(t_1 + 2) <= nc_1_1(t_1);
      END LOOP;

    ELSE 
      bufferA <= buffer_rsvd;
      bufferB(0) <= bits(0);
      bufferB(1 TO 6) <= buffer_rsvd(0 TO 5);
      buffer_next(0) <= bits(1);
      buffer_next(1) <= bits(0);
      buffer_next(2 TO 6) <= buffer_rsvd(0 TO 4);
    END IF;
  END PROCESS RxTxFixedPointLibrary_c10_MATLAB_Function_output;


END rtl;

