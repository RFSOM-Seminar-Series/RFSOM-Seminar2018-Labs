-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\combinedTxRx_AXIMM\CombinedT_ip_src_MATLAB_Function3.vhd
-- Created: 2018-02-01 18:12:06
-- 
-- Generated by MATLAB 9.3 and HDL Coder 3.11
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: CombinedT_ip_src_MATLAB_Function3
-- Source Path: combinedTxRx_AXIMM/Combined TX and RX/Transmitter HDL/Packet Generation/Payload/Subsystem/MATLAB 
-- Function
-- Hierarchy Level: 5
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY CombinedT_ip_src_MATLAB_Function3 IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb_1_4_0                         :   IN    std_logic;
        start                             :   IN    std_logic;
        done                              :   IN    std_logic;
        enable                            :   OUT   std_logic
        );
END CombinedT_ip_src_MATLAB_Function3;


ARCHITECTURE rtl OF CombinedT_ip_src_MATLAB_Function3 IS

  -- Signals
  SIGNAL state                            : std_logic;
  SIGNAL state_next                       : std_logic;

BEGIN
  RxTxFixedPointLibrary_c9_MATLAB_Function3_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      state <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_4_0 = '1' THEN
        state <= state_next;
      END IF;
    END IF;
  END PROCESS RxTxFixedPointLibrary_c9_MATLAB_Function3_process;

  RxTxFixedPointLibrary_c9_MATLAB_Function3_output : PROCESS (start, done, state)
  BEGIN
    state_next <= state;
    IF start = '1' THEN 
      enable <= '1';
      state_next <= '1';
    ELSIF done = '1' THEN 
      enable <= '1';
      state_next <= '0';
    ELSE 
      enable <= state;
    END IF;
  END PROCESS RxTxFixedPointLibrary_c9_MATLAB_Function3_output;


END rtl;

