-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\combinedTxRx_AXIMM\CombinedT_ip_src_ABS2.vhd
-- Created: 2018-02-01 18:12:05
-- 
-- Generated by MATLAB 9.3 and HDL Coder 3.11
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: CombinedT_ip_src_ABS2
-- Source Path: combinedTxRx_AXIMM/Combined TX and RX/Receiver HDL/Frame Recover/Barker Locate/ABS2
-- Hierarchy Level: 4
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY CombinedT_ip_src_ABS2 IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        In1_re                            :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
        In1_im                            :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
        Out1                              :   OUT   std_logic_vector(16 DOWNTO 0)  -- sfix17
        );
END CombinedT_ip_src_ABS2;


ARCHITECTURE rtl OF CombinedT_ip_src_ABS2 IS

  -- Signals
  SIGNAL In1_re_signed                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL In1_im_signed                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL Complex_to_Real_Imag_out1        : signed(15 DOWNTO 0);  -- int16
  SIGNAL Complex_to_Real_Imag_out1_1      : signed(15 DOWNTO 0);  -- int16
  SIGNAL Product_mul_temp                 : signed(31 DOWNTO 0);  -- sfix32
  SIGNAL Product_out1                     : signed(15 DOWNTO 0);  -- int16
  SIGNAL Product_out1_1                   : signed(15 DOWNTO 0);  -- int16
  SIGNAL Complex_to_Real_Imag_out2        : signed(15 DOWNTO 0);  -- int16
  SIGNAL Complex_to_Real_Imag_out2_1      : signed(15 DOWNTO 0);  -- int16
  SIGNAL Product1_mul_temp                : signed(31 DOWNTO 0);  -- sfix32
  SIGNAL Product1_out1                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL Product1_out1_1                  : signed(15 DOWNTO 0);  -- int16
  SIGNAL Add_out1                         : signed(16 DOWNTO 0);  -- sfix17

BEGIN
  In1_re_signed <= signed(In1_re);

  HwModeRegister_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Complex_to_Real_Imag_out1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Complex_to_Real_Imag_out1 <= In1_re_signed;
      END IF;
    END IF;
  END PROCESS HwModeRegister_process;


  HwModeRegister1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Complex_to_Real_Imag_out1_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Complex_to_Real_Imag_out1_1 <= In1_re_signed;
      END IF;
    END IF;
  END PROCESS HwModeRegister1_process;


  Product_mul_temp <= Complex_to_Real_Imag_out1 * Complex_to_Real_Imag_out1_1;
  Product_out1 <= Product_mul_temp(15 DOWNTO 0);

  PipelineRegister_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Product_out1_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Product_out1_1 <= Product_out1;
      END IF;
    END IF;
  END PROCESS PipelineRegister_process;


  In1_im_signed <= signed(In1_im);

  HwModeRegister2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Complex_to_Real_Imag_out2 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Complex_to_Real_Imag_out2 <= In1_im_signed;
      END IF;
    END IF;
  END PROCESS HwModeRegister2_process;


  HwModeRegister3_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Complex_to_Real_Imag_out2_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Complex_to_Real_Imag_out2_1 <= In1_im_signed;
      END IF;
    END IF;
  END PROCESS HwModeRegister3_process;


  Product1_mul_temp <= Complex_to_Real_Imag_out2 * Complex_to_Real_Imag_out2_1;
  Product1_out1 <= Product1_mul_temp(15 DOWNTO 0);

  PipelineRegister1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Product1_out1_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Product1_out1_1 <= Product1_out1;
      END IF;
    END IF;
  END PROCESS PipelineRegister1_process;


  Add_out1 <= resize(Product_out1_1, 17) + resize(Product1_out1_1, 17);

  Out1 <= std_logic_vector(Add_out1);

END rtl;

